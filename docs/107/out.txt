List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),31,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>,data := @parameter2: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)) => Node(<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>,$stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1),77,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload),34,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,output := @parameter1: java.io.OutputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n),38,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack3 = newarray (byte)[4096],30,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,buffer := @parameter2: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,n = $stack7,37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack8 = (long) n,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,count = count + $stack8,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,return count,41,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack3 = newarray (byte)[4096],30,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3),30,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack2 = new java.io.ByteArrayOutputStream,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, specialinvoke $stack2.<java.io.ByteArrayOutputStream: void <init>()>(), 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,specialinvoke $stack2.<java.io.ByteArrayOutputStream: void <init>()>(),29,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, specialinvoke $stack2.<java.io.ByteArrayOutputStream: void <init>()>(), 29)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,count = count + $stack8,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,return count,41,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),31,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload),36,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload), 36)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,virtualinvoke output.<java.io.ByteArrayOutputStream: void write(byte[])>(processedPayload),41,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, virtualinvoke output.<java.io.ByteArrayOutputStream: void write(byte[])>(processedPayload), 41)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),31,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>,data := @parameter2: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)) => Node(<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>,$stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1),77,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload),34,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),31,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload),36,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload), 36)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,virtualinvoke output.<java.io.ByteArrayOutputStream: void write(byte[])>(processedPayload),41,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, virtualinvoke output.<java.io.ByteArrayOutputStream: void write(byte[])>(processedPayload), 41)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),31,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>,data := @parameter2: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)) => Node(<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>,$stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1),77,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)))

List(Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,if -1 == $stack7 goto return count,37,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),31,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>,data := @parameter2: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)) => Node(<de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>,encryptedData := @parameter2: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34) => (<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>, $stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1), 77)) => Node(<de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>,$stack10 = virtualinvoke cipher.<javax.crypto.Cipher: byte[] doFinal(byte[])>(encryptedData),86,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34) => (<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>, $stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1), 77)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,if -1 == $stack7 goto return count,37,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),31,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload),36,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload), 36)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,n = $stack7,37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n),38,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)))

List(Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,n = $stack7,37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack8 = (long) n,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,count = count + $stack8,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,return count,41,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,return $stack5,31,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,n = $stack7,37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n),38,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,count = 0L,35,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,count = count + $stack8,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,return count,41,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.domain.Entry: int getIconId()>,$stack1 = this.<de.slackspace.openkeepass.domain.Entry: int iconId>,88,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>,$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(),66,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,stockIconId := @parameter1: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,iconId := @parameter0: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png"),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3),30,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)))

List(Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>,$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(),66,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,stockIconId := @parameter1: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,iconId := @parameter0: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png"),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,n = $stack7,37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n),38,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),31,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload),36,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload), 36)))

List(Node(<de.slackspace.openkeepass.domain.Entry: int getIconId()>,$stack1 = this.<de.slackspace.openkeepass.domain.Entry: int iconId>,88,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>,$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(),66,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,stockIconId := @parameter1: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,iconId := @parameter0: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png"),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,n = $stack7,37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack8 = (long) n,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,count = count + $stack8,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,return count,41,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.domain.Entry: int getIconId()>,$stack1 = this.<de.slackspace.openkeepass.domain.Entry: int iconId>,88,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>,$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(),66,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,stockIconId := @parameter1: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,iconId := @parameter0: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png"),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,if -1 == $stack7 goto return count,37,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.domain.Entry: int getIconId()>,$stack1 = this.<de.slackspace.openkeepass.domain.Entry: int iconId>,88,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>,$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(),66,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,stockIconId := @parameter1: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,iconId := @parameter0: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png"),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,n = $stack7,37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n),38,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3),30,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)))

List(Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>,$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(),66,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,stockIconId := @parameter1: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,iconId := @parameter0: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png"),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,n = $stack7,37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack8 = (long) n,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,count = count + $stack8,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,return count,41,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,n = $stack7,37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack8 = (long) n,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,count = count + $stack8,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,return count,41,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),31,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>,data := @parameter2: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)) => Node(<de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>,encryptedData := @parameter2: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34) => (<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>, $stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1), 77)) => Node(<de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>,$stack10 = virtualinvoke cipher.<javax.crypto.Cipher: byte[] doFinal(byte[])>(encryptedData),86,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34) => (<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>, $stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1), 77)))

List(Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>,$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(),66,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,stockIconId := @parameter1: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,iconId := @parameter0: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png"),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3),30,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,return $stack5,31,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),31,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>,data := @parameter2: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)) => Node(<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>,$stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1),77,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)))

List(Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3),30,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack3 = newarray (byte)[4096],30,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,buffer := @parameter2: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,if -1 == $stack7 goto return count,37,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack3 = newarray (byte)[4096],30,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,buffer := @parameter2: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,n = $stack7,37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n),38,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)))

List(Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>,$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(),66,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,stockIconId := @parameter1: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,iconId := @parameter0: int,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png"),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9),95,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,if -1 == $stack7 goto return count,37,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,output := @parameter1: java.io.OutputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n),38,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack3 = newarray (byte)[4096],30,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,buffer := @parameter2: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,n = $stack7,37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack8 = (long) n,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,count = count + $stack8,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,return count,41,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this),103,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>,$stack4 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>,233,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>,rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(),221,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack3 = newarray (byte)[4096],30,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3),30,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack2 = new java.io.ByteArrayOutputStream,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, specialinvoke $stack2.<java.io.ByteArrayOutputStream: void <init>()>(), 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,specialinvoke $stack2.<java.io.ByteArrayOutputStream: void <init>()>(),29,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, specialinvoke $stack2.<java.io.ByteArrayOutputStream: void <init>()>(), 29)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,n = $stack7,37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack8 = (long) n,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,count = count + $stack8,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,return count,41,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>,group := @parameter0: de.slackspace.openkeepass.domain.Group,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>,this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node> = group,207,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node> = group, 207)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>,$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>,193,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>,$stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(),209,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack3 = newarray (byte)[4096],30,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,buffer := @parameter2: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n),38,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>,group := @parameter0: de.slackspace.openkeepass.domain.Group,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>,this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node> = group,207,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node> = group, 207)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>,$stack4 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>,233,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>,$stack3 = virtualinvoke $stack2.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(),236,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack12 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: byte[] getIconData()>(),67,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack12 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: byte[] getIconData()>(), 67)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,this.<de.slackspace.openkeepass.domain.Group: byte[] iconData> = $stack12,67,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: byte[] iconData> = $stack12, 67)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack13 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getCustomIconUuid()>(),68,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack13 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getCustomIconUuid()>(), 68)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,if -1 == $stack7 goto return count,37,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon),52,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack6 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: int getIconId()>(),62,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack6 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: int getIconId()>(), 62)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,this.<de.slackspace.openkeepass.domain.Group: int iconId> = $stack6,62,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: int iconId> = $stack6, 62)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>,$stack4 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>,233,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)))

List(Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,inputStream = $stack13,28,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, inputStream = $stack13, 28)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,if -1 == $stack7 goto return count,37,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack7 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: boolean isExpanded()>(),63,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack7 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: boolean isExpanded()>(), 63)))

List(Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,inputStream = $stack13,28,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, inputStream = $stack13, 28)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,n = $stack7,37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack8 = (long) n,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,count = count + $stack8,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,return count,41,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,return $stack5,31,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack6 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: int getIconId()>(),62,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack6 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: int getIconId()>(), 62)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,this.<de.slackspace.openkeepass.domain.Group: int iconId> = $stack6,62,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: int iconId> = $stack6, 62)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack5 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getGroups()>(),61,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack5 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getGroups()>(), 61)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,this.<de.slackspace.openkeepass.domain.Group: java.util.List groups> = $stack5,61,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: java.util.List groups> = $stack5, 61)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>,$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>,193,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>,$stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(),209,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)) => Node(<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>,this := @this: de.slackspace.openkeepass.domain.Group,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356) => (<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16) => (<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203) => (<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)) => Node(<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>,$stack1 = this.<de.slackspace.openkeepass.domain.Group: java.util.List groups>,95,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356) => (<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16) => (<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203) => (<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder addGroup(de.slackspace.openkeepass.domain.Group)>,$stack2 = this.<de.slackspace.openkeepass.domain.GroupBuilder: java.util.List groups>,88,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, $stack6 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.KeePassFileBuilder: de.slackspace.openkeepass.domain.KeePassFileBuilder addTopGroups(de.slackspace.openkeepass.domain.Group[])>($stack5), 223) => (<de.slackspace.openkeepass.domain.KeePassFileBuilder: de.slackspace.openkeepass.domain.KeePassFileBuilder addTopGroups(de.slackspace.openkeepass.domain.Group[])>, virtualinvoke $stack6.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder addGroup(de.slackspace.openkeepass.domain.Group)>(group), 68) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder addGroup(de.slackspace.openkeepass.domain.Group)>, $stack2 = this.<de.slackspace.openkeepass.domain.GroupBuilder: java.util.List groups>, 88)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,count = 0L,35,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,count = count + $stack8,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,return count,41,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack5 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getGroups()>(),61,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack5 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getGroups()>(), 61)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,this.<de.slackspace.openkeepass.domain.Group: java.util.List groups> = $stack5,61,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: java.util.List groups> = $stack5, 61)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack9 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.lang.String getName()>(),64,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack9 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.lang.String getName()>(), 64)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack8 = (long) n,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,count = count + $stack8,39,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,return count,41,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)))

List(Node(<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>,$stack1 = this.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] protectedStreamKey>,354,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack22 = virtualinvoke $stack21.<de.slackspace.openkeepass.domain.KeePassHeader: int getHeaderSize()>(), 321) => (<de.slackspace.openkeepass.domain.KeePassHeader: int getHeaderSize()>, value = virtualinvoke this.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getValue(int)>(i), 340) => (<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getValue(int)>, $stack4 = virtualinvoke this.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>(), 223)) => Node(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>,$stack48 = virtualinvoke $stack47.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>(),350,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack48 = virtualinvoke $stack47.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>(), 350)) => Node(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>,gzipInputStream#4 = staticinvoke <de.slackspace.openkeepass.crypto.Salsa20: de.slackspace.openkeepass.crypto.Salsa20 createInstance(byte[])>($stack48),350,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, gzipInputStream#4 = staticinvoke <de.slackspace.openkeepass.crypto.Salsa20: de.slackspace.openkeepass.crypto.Salsa20 createInstance(byte[])>($stack48), 350)) => Node(<de.slackspace.openkeepass.processor.DecryptionStrategy: void <init>(de.slackspace.openkeepass.crypto.ProtectedStringCrypto)>,crypto := @parameter0: de.slackspace.openkeepass.crypto.ProtectedStringCrypto,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, specialinvoke $stack54.<de.slackspace.openkeepass.processor.DecryptionStrategy: void <init>(de.slackspace.openkeepass.crypto.ProtectedStringCrypto)>(gzipInputStream#4), 356)) => Node(<de.slackspace.openkeepass.processor.DecryptionStrategy: void <init>(de.slackspace.openkeepass.crypto.ProtectedStringCrypto)>,this.<de.slackspace.openkeepass.processor.DecryptionStrategy: de.slackspace.openkeepass.crypto.ProtectedStringCrypto crypto> = crypto,10,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, specialinvoke $stack54.<de.slackspace.openkeepass.processor.DecryptionStrategy: void <init>(de.slackspace.openkeepass.crypto.ProtectedStringCrypto)>(gzipInputStream#4), 356) => (<de.slackspace.openkeepass.processor.DecryptionStrategy: void <init>(de.slackspace.openkeepass.crypto.ProtectedStringCrypto)>, this.<de.slackspace.openkeepass.processor.DecryptionStrategy: de.slackspace.openkeepass.crypto.ProtectedStringCrypto crypto> = crypto, 10)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>,$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>,193,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>,$stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(),209,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)) => Node(<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>,this := @this: de.slackspace.openkeepass.domain.Group,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356) => (<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16) => (<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203) => (<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)) => Node(<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>,$stack1 = this.<de.slackspace.openkeepass.domain.Group: java.util.List groups>,95,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356) => (<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16) => (<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203) => (<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack12 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: byte[] getIconData()>(),67,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack12 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: byte[] getIconData()>(), 67)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,this.<de.slackspace.openkeepass.domain.Group: byte[] iconData> = $stack12,67,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: byte[] iconData> = $stack12, 67)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>,$stack4 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>,233,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>,$stack3 = virtualinvoke $stack2.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(),236,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack10 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: de.slackspace.openkeepass.domain.Times getTimes()>(),65,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack10 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: de.slackspace.openkeepass.domain.Times getTimes()>(), 65)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,this.<de.slackspace.openkeepass.domain.Group: de.slackspace.openkeepass.domain.Times times> = $stack10,65,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: de.slackspace.openkeepass.domain.Times times> = $stack10, 65)))

List(Node(<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>,$stack1 = this.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] protectedStreamKey>,354,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack22 = virtualinvoke $stack21.<de.slackspace.openkeepass.domain.KeePassHeader: int getHeaderSize()>(), 321) => (<de.slackspace.openkeepass.domain.KeePassHeader: int getHeaderSize()>, value = virtualinvoke this.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getValue(int)>(i), 340) => (<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getValue(int)>, $stack4 = virtualinvoke this.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>(), 223)) => Node(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>,$stack48 = virtualinvoke $stack47.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>(),350,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack48 = virtualinvoke $stack47.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>(), 350)) => Node(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>,gzipInputStream#4 = staticinvoke <de.slackspace.openkeepass.crypto.Salsa20: de.slackspace.openkeepass.crypto.Salsa20 createInstance(byte[])>($stack48),350,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, gzipInputStream#4 = staticinvoke <de.slackspace.openkeepass.crypto.Salsa20: de.slackspace.openkeepass.crypto.Salsa20 createInstance(byte[])>($stack48), 350)) => Node(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>,specialinvoke $stack54.<de.slackspace.openkeepass.processor.DecryptionStrategy: void <init>(de.slackspace.openkeepass.crypto.ProtectedStringCrypto)>(gzipInputStream#4),356,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, specialinvoke $stack54.<de.slackspace.openkeepass.processor.DecryptionStrategy: void <init>(de.slackspace.openkeepass.crypto.ProtectedStringCrypto)>(gzipInputStream#4), 356)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>,$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>,193,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>,$stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(),209,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)) => Node(<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>,this := @this: de.slackspace.openkeepass.domain.Group,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356) => (<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16) => (<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203) => (<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)) => Node(<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>,$stack1 = this.<de.slackspace.openkeepass.domain.Group: java.util.List groups>,95,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356) => (<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16) => (<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203) => (<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder addGroup(de.slackspace.openkeepass.domain.Group)>,$stack2 = this.<de.slackspace.openkeepass.domain.GroupBuilder: java.util.List groups>,88,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, $stack6 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.KeePassFileBuilder: de.slackspace.openkeepass.domain.KeePassFileBuilder addTopGroups(de.slackspace.openkeepass.domain.Group[])>($stack5), 223) => (<de.slackspace.openkeepass.domain.KeePassFileBuilder: de.slackspace.openkeepass.domain.KeePassFileBuilder addTopGroups(de.slackspace.openkeepass.domain.Group[])>, virtualinvoke $stack6.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder addGroup(de.slackspace.openkeepass.domain.Group)>(group), 68) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder addGroup(de.slackspace.openkeepass.domain.Group)>, $stack2 = this.<de.slackspace.openkeepass.domain.GroupBuilder: java.util.List groups>, 88)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon),52,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)))

List(Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,inputStream = $stack13,28,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, inputStream = $stack13, 28)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3),30,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>,$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>,193,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>,$stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(),209,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)) => Node(<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>,this := @this: de.slackspace.openkeepass.domain.Group,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356) => (<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16) => (<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203) => (<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)) => Node(<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>,$stack1 = this.<de.slackspace.openkeepass.domain.Group: java.util.List groups>,95,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356) => (<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16) => (<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203) => (<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>,$stack4 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>,233,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack10 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: de.slackspace.openkeepass.domain.Times getTimes()>(),65,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack10 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: de.slackspace.openkeepass.domain.Times getTimes()>(), 65)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,this.<de.slackspace.openkeepass.domain.Group: de.slackspace.openkeepass.domain.Times times> = $stack10,65,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: de.slackspace.openkeepass.domain.Times times> = $stack10, 65)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>,$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>,193,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>,$stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(),209,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack11 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getUuid()>(),66,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack11 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getUuid()>(), 66)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,this.<de.slackspace.openkeepass.domain.Group: java.util.UUID uuid> = $stack11,66,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: java.util.UUID uuid> = $stack11, 66)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>,$stack4 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>,233,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>,rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(),221,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3),30,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>,$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>,193,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)))

List(Node(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>,inputStream = $stack13,28,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, inputStream = $stack13, 28)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,input := @parameter0: java.io.InputStream,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,n = $stack7,37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n),38,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,return $stack5,31,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>,$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>,193,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52) => (<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack7 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: boolean isExpanded()>(),63,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack7 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: boolean isExpanded()>(), 63)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack11 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getUuid()>(),66,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack11 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getUuid()>(), 66)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,this.<de.slackspace.openkeepass.domain.Group: java.util.UUID uuid> = $stack11,66,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: java.util.UUID uuid> = $stack11, 66)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack9 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.lang.String getName()>(),64,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack9 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.lang.String getName()>(), 64)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack4 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getEntries()>(),60,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack4 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getEntries()>(), 60)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack3 = newarray (byte)[4096],30,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,buffer := @parameter2: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer),37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,if -1 == $stack7 goto return count,37,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>,decompressed = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(gzipInputStream),345,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, decompressed = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(gzipInputStream), 345)) => Node(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>,specialinvoke $stack50.<java.io.ByteArrayInputStream: void <init>(byte[])>(decompressed),355,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, specialinvoke $stack50.<java.io.ByteArrayInputStream: void <init>(byte[])>(decompressed), 355)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this),103,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,n = $stack7,37,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)) => Node(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>,virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n),38,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30) => (<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>,decompressed = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(gzipInputStream),345,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, decompressed = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(gzipInputStream), 345)) => Node(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>,specialinvoke $stack50.<java.io.ByteArrayInputStream: void <init>(byte[])>(decompressed),355,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, specialinvoke $stack50.<java.io.ByteArrayInputStream: void <init>(byte[])>(decompressed), 355)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,output = $stack2,29,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31) => (<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)) => Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack4 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getEntries()>(),60,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack4 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getEntries()>(), 60)))

List(Node(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>,$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>(),31,SourceNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16) => (<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>,$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream),101,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId),84,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary),50,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)) => Node(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>,$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData),51,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)) => Node(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>,this := @this: de.slackspace.openkeepass.domain.GroupBuilder,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract,-1,SimpleNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)) => Node(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>,$stack13 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getCustomIconUuid()>(),68,SinkNode, path: (<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357) => (<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51) => (<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103) => (<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack13 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getCustomIconUuid()>(), 68)))

