SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack668 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),405,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack668 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 405))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack668 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),405,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack668 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 405))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack450 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),287,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack450 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 287))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack450 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),287,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack450 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 287))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack260 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),183,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack260 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 183))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack260 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),183,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack260 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 183))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack428 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),275,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack428 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 275))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack428 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),275,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack428 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 275))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack181 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),140,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack181 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 140))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack181 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),140,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack181 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 140))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack392 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),255,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack392 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 255))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack392 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),255,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack392 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 255))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack363 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),239,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack363 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 239))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack363 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),239,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack363 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 239))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack604 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),370,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack604 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 370))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack604 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),370,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack604 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 370))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack688 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),416,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack688 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 416))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack688 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),416,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack688 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 416))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),86,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack99 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>(1, 99), 95) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 86)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),86,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack99 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>(1, 99), 95) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 86))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),86,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack99 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>(1, 99), 95) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 86))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack710 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),428,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack710 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 428))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack710 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),428,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack710 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 428))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack637 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),388,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack637 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 388))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack637 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),388,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack637 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 388))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack723 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),435,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack723 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 435))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack723 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),435,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack723 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 435))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack679 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),411,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack679 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 411))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack679 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),411,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack679 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 411))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack565 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),349,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack565 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 349))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack565 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),349,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack565 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 349))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack807 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110),481,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack807 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 110), 481))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack801[0] = $stack805,480,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, specialinvoke $stack800.<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>($stack801), 481)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,specialinvoke $stack800.<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>($stack801),481,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, specialinvoke $stack800.<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>($stack801), 481))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack787 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),470,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack787 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 470))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack787 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),470,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack787 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 470))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack383 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),250,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack383 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 250))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack383 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),250,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack383 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 250))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack284 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),196,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack284 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 196))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack284 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),196,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack284 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 196))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack306 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),208,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack306 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 208))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack306 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),208,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack306 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 208))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack745 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),447,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack745 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 447))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack745 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),447,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack745 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 447))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack767 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110),459,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack767 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110), 459))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack767 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110),459,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack767 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110), 459))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack330 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),221,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack330 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 221))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack330 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),221,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack330 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 221))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack123 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),108,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack123 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 108))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack123 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),108,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack123 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 108))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),71,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 71)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),71,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 71))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),71,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 71)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),71,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 71))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack613 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),375,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack613 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 375))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack613 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),375,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack613 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 375))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),81,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack97 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>(1, 97), 94) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 81)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),81,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack97 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>(1, 97), 94) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 81))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),81,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack97 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>(1, 97), 94) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 81)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),81,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack97 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>(1, 97), 94) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 81))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack312 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>(10, 110), 211) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 91))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack312 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>(10, 110), 211) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 91)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack312 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>(10, 110), 211) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 91))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack410 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),265,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack410 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 265))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack410 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),265,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack410 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 265))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack587 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),361,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack587 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 361))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack587 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),361,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack587 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 361))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack78 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),84,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack78 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 84))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack78 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),84,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack78 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 84))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack528 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),329,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack528 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 329))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack528 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),329,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack528 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 329))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack419 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),270,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack419 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 270))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack419 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),270,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack419 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 270))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack223 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110),163,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack223 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110), 163))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack223 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110),163,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack223 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 110), 163))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack829 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),493,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack829 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 493))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack829 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),493,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack829 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 493))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack552 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),342,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack552 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 342))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack552 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),342,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack552 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 342))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack212 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),157,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack212 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 157))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack212 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),157,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack212 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 157))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack152 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(7, 110),124,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack152 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(7, 110), 124))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack152 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(7, 110),124,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack152 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(7, 110), 124))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),76,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack9 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>(2, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 76)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),76,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack9 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>(2, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 76))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),76,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack9 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>(2, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 76)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),76,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack9 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>(2, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 76))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack622 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),380,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack622 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 380))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack622 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),380,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack622 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 380))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack648 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),394,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack648 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 394))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack648 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),394,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack648 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 394))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack352 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),233,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack352 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 233))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack352 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),233,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack352 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 233))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack67 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),78,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack67 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 78))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack67 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),78,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack67 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 78))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack251 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),178,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack251 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 178))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack251 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),178,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack251 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 178))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack58 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),73,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack58 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 73))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack58 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),73,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack58 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 73))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack199 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),150,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack199 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 150))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack199 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),150,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack199 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 150))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack16 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),49,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack16 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 49))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack16 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),49,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack16 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 49))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack374 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),245,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack374 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 245))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack374 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),245,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack374 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 245))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack134 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),114,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack134 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 114))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack134 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),114,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack134 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 114))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack537 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),334,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack537 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 334))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack537 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),334,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack537 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 334))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack509 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),319,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack509 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 319))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack509 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),319,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack509 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 319))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack401 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),260,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack401 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 260))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack401 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),260,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack401 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 260))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack659 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),400,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack659 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 400))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack659 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110),400,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack659 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 110), 400))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack49 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),68,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack49 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 68))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack49 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),68,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack49 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 68))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack273 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),190,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack273 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 190))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack273 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),190,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack273 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 190))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack127 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99),110,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack127 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 110))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack119[1] = $stack125,109,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, specialinvoke $stack118.<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>($stack119), 110)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,specialinvoke $stack118.<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>($stack119),110,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, specialinvoke $stack118.<org.iban4j.bban.BbanStructure: void <init>(org.iban4j.bban.BbanStructureEntry[])>($stack119), 110))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack437 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),280,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack437 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 280))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack437 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),280,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack437 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 280))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack574 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),354,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack574 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 354))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack574 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),354,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack574 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 354))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack776 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),464,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack776 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 464))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack776 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),464,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack776 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 464))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack161 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),129,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack161 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 129))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack161 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),129,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack161 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 129))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack732 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),440,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack732 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 440))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack732 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),440,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack732 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 440))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack319 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),215,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack319 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 215))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack319 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),215,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack319 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 215))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack29 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),56,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack29 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 56))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack29 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),56,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack29 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 56))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack143 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110),119,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack143 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110), 119))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack143 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110),119,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack143 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110), 119))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack756 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),453,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack756 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 453))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack756 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),453,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack756 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 453))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack496 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 99),312,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack496 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 99), 312))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack496 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 99),312,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack496 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 99), 312))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack461 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),293,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack461 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 293))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack461 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),293,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack461 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 293))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack190 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),145,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack190 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 145))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack190 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99),145,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack190 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 99), 145))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack472 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),299,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack472 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 299))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack472 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),299,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack472 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 299))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack40 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),62,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack40 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 62))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack40 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),62,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack40 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 62))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack341 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),227,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack341 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 227))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack341 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),227,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack341 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 227))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack172 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),135,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack172 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 135))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack172 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110),135,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack172 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 110), 135))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack106 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),99,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack106 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 99))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack106 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),99,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack106 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 99))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack485 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 99),306,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack485 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 99), 306))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack485 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 99),306,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack485 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(6, 99), 306))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack91 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack91 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110), 91))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack91 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack91 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(8, 110), 91))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack701 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),423,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack701 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 423))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack701 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),423,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack701 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 423))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack293 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),201,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack293 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 201))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack293 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),201,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack293 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 201))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),39,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110),39,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack814 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),485,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack814 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 485))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack814 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),485,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack814 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 485))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack238 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 97),171,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack238 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 97), 171))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack238 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 97),171,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack238 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(2, 97), 171))

source(org.iban4j.bban.BbanStructureEntry, <init>, 55, this.<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry$EntryCharacterType characterType> = characterType, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:55)]) => sink(org.iban4j.bban.BbanStructureEntry, <init>, 55, this.<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry$EntryCharacterType characterType> = characterType, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:55)])

source(org.iban4j.bban.BbanStructureEntry, <init>, 56, this.<org.iban4j.bban.BbanStructureEntry: int length> = length, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:56)]) => sink(org.iban4j.bban.BbanStructureEntry, <init>, 56, this.<org.iban4j.bban.BbanStructureEntry: int length> = length, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:56)])

source(org.iban4j.bban.BbanStructureEntry, <init>, 54, this.<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanEntryType entryType> = entryType, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:54)]) => sink(org.iban4j.bban.BbanStructureEntry, <init>, 54, this.<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanEntryType entryType> = entryType, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:54)])

source(org.iban4j.bban.BbanStructureEntry, bankCode, 61, $stack3 = <org.iban4j.bban.BbanEntryType: org.iban4j.bban.BbanEntryType bank_code>, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61)]) => sink(org.iban4j.bban.BbanStructureEntry, bankCode, 61, $stack3 = <org.iban4j.bban.BbanEntryType: org.iban4j.bban.BbanEntryType bank_code>, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61)])

source(org.iban4j.bban.BbanStructureEntry, bankCode, 60, $stack2 = new org.iban4j.bban.BbanStructureEntry, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:60)]) => sink(org.iban4j.bban.BbanStructureEntry, bankCode, 60, $stack2 = new org.iban4j.bban.BbanStructureEntry, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:60)])

source(org.iban4j.bban.BbanStructureEntry, <init>, -1, <org.iban4j.bban.BbanStructureEntry: java.util.Map charByCharacterType> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61)]) => sink(org.iban4j.bban.BbanStructureEntry, <init>, -1, <org.iban4j.bban.BbanStructureEntry: java.util.Map charByCharacterType> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61)])

source(org.iban4j.bban.BbanStructureEntry, <init>, -1, <org.iban4j.bban.BbanStructureEntry: java.util.Map charByCharacterType> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:476), at org.iban4j.bban.BbanStructureEntry.accountNumber(BbanStructureEntry.java:71)]) => sink(org.iban4j.bban.BbanStructureEntry, <init>, -1, <org.iban4j.bban.BbanStructureEntry: java.util.Map charByCharacterType> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61)])

source(java.lang.String, <init>, 611, l0.<java.lang.String: char[] value> = l1, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:109), at org.iban4j.bban.BbanStructureEntry.branchCode(BbanStructureEntry.java:66), at java.lang.String.valueOf(String.java:3085), at java.lang.String.<init>(String.java:611)]) => sink(java.lang.String, <init>, 611, l0.<java.lang.String: char[] value> = l1, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at java.lang.String.valueOf(String.java:3085), at java.lang.String.<init>(String.java:611)])

source(org.iban4j.bban.BbanStructureEntry$EntryCharacterType, valueOf, 106, $stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:109), at org.iban4j.bban.BbanStructureEntry.branchCode(BbanStructureEntry.java:66), at org.iban4j.bban.BbanStructureEntry$EntryCharacterType.valueOf(BbanStructureEntry$EntryCharacterType.java:106)]) => sink(org.iban4j.bban.BbanStructureEntry$EntryCharacterType, valueOf, 106, $stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry$EntryCharacterType.valueOf(BbanStructureEntry$EntryCharacterType.java:106)])

source(java.lang.String, valueOf, 3084, $stack2 = newarray (char)[1], [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at java.lang.String.valueOf(String.java:3084)]) => sink(java.lang.String, valueOf, 3084, $stack2 = newarray (char)[1], [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at java.lang.String.valueOf(String.java:3084)])

source(java.lang.String, valueOf, 3084, $stack2[0] = l0, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at java.lang.String.valueOf(String.java:3084)]) => sink(java.lang.String, valueOf, 3084, $stack2 = newarray (char)[1], [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at java.lang.String.valueOf(String.java:3084)])

source(java.lang.String, valueOf, 3084, l1 = $stack2, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at java.lang.String.valueOf(String.java:3084)]) => sink(java.lang.String, valueOf, 3084, l1 = $stack2, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at java.lang.String.valueOf(String.java:3084)])

source(java.lang.String, valueOf, 3085, $stack3 = new java.lang.String, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at java.lang.String.valueOf(String.java:3085)]) => sink(java.lang.String, valueOf, 3085, $stack3 = new java.lang.String, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at java.lang.String.valueOf(String.java:3085)])

source(java.lang.String, <init>, -1, String.<java.lang.String: int hash> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at java.lang.String.valueOf(String.java:3085)]) => sink(java.lang.String, <init>, -1, String.<java.lang.String: int hash> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at java.lang.String.valueOf(String.java:3085)])

source(java.lang.String, <init>, -1, String.<java.lang.String: int hash> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:476), at org.iban4j.bban.BbanStructureEntry.accountNumber(BbanStructureEntry.java:71), at java.lang.String.valueOf(String.java:3085)]) => sink(java.lang.String, <init>, -1, String.<java.lang.String: int hash> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at java.lang.String.valueOf(String.java:3085)])

source(org.iban4j.bban.BbanStructureEntry, <init>, 32, $stack4 = new java.util.Random, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:32)]) => sink(org.iban4j.bban.BbanStructureEntry, <init>, 32, $stack4 = new java.util.Random, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:32)])

source(org.iban4j.bban.BbanStructureEntry, <init>, 32, this.<org.iban4j.bban.BbanStructureEntry: java.util.Random random> = $stack4, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:32)]) => sink(org.iban4j.bban.BbanStructureEntry, <init>, 32, this.<org.iban4j.bban.BbanStructureEntry: java.util.Random random> = $stack4, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:32)])

source(java.util.Random, <init>, -1, Random.<java.util.Random: double nextNextGaussian> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:32)]) => sink(java.util.Random, <init>, -1, Random.<java.util.Random: double nextNextGaussian> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:32)])

source(java.util.Random, <init>, -1, Random.<java.util.Random: double nextNextGaussian> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:476), at org.iban4j.bban.BbanStructureEntry.accountNumber(BbanStructureEntry.java:71), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:32)]) => sink(java.util.Random, <init>, -1, Random.<java.util.Random: double nextNextGaussian> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:32)])

source(java.util.Random, <init>, -1, Random.<java.util.Random: boolean haveNextNextGaussian> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:475), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:32)]) => sink(java.util.Random, <init>, -1, Random.<java.util.Random: boolean haveNextNextGaussian> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:32)])

source(java.util.Random, <init>, -1, Random.<java.util.Random: boolean haveNextNextGaussian> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:476), at org.iban4j.bban.BbanStructureEntry.accountNumber(BbanStructureEntry.java:71), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:32)]) => sink(java.util.Random, <init>, -1, Random.<java.util.Random: boolean haveNextNextGaussian> = null, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:480), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry.<init>(BbanStructureEntry.java:32)])

List(Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,$stack4 = new java.util.Random,32,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke $stack4.<java.util.Random: void <init>()>(),32,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,70,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,this := @this: org.iban4j.bban.BbanStructureEntry,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke this.<java.lang.Object: void <init>()>(),53,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53)))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),71,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 71)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),61,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack3 = <org.iban4j.bban.BbanEntryType: org.iban4j.bban.BbanEntryType bank_code>,61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),61,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),61,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,this := @this: org.iban4j.bban.BbanStructureEntry,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke this.<java.lang.Object: void <init>()>(),53,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack805 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97),480,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack805 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(4, 97), 480)))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),66,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 66)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,return $stack2,60,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,$stack4 = new java.util.Random,32,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke $stack4.<java.util.Random: void <init>()>(),32,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),61,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructure: void <clinit>()>,$stack796 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110),475,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack796 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 475)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),66,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 66)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),61,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),61,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,this := @this: org.iban4j.bban.BbanStructureEntry,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke this.<java.lang.Object: void <init>()>(),53,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,return $stack2,60,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(5, 110), 40)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,this := @this: org.iban4j.bban.BbanStructureEntry,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke this.<java.lang.Object: void <init>()>(),53,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53)))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack3 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(5, 110), 39) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),71,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack7 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(11, 99), 41) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 71)))

