List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack8 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.NavigableSet<"),1286,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack8 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.NavigableSet<'), 1286)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack8 == 0 goto $stack9 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Map<"),1286,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack9 == 0 goto $stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.SortedMap<"),1288,SimpleNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.SortedMap<"),1290,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.SortedMap<'), 1290)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack10 == 0 goto $stack11 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.NavigableMap<"),1290,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack11 == 0 goto $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1292,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1294,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.Collection<'), 1294)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack12 == 0 goto $stack13 = new java.lang.AssertionError,1294,SinkNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,return "Collection",1295,SinkNode, path: ))

List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.SortedMap<"),1290,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.SortedMap<'), 1290)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack10 == 0 goto $stack11 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.NavigableMap<"),1290,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack11 == 0 goto $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1292,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1294,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.Collection<'), 1294)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack12 == 0 goto $stack13 = new java.lang.AssertionError,1294,SinkNode, path: ))

List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack7 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.SortedSet<"),1284,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack7 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.SortedSet<'), 1284)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack7 == 0 goto $stack8 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.NavigableSet<"),1284,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack8 == 0 goto $stack9 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Map<"),1286,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack9 == 0 goto $stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.SortedMap<"),1288,SimpleNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.SortedMap<"),1290,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.SortedMap<'), 1290)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack10 == 0 goto $stack11 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.NavigableMap<"),1290,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack11 == 0 goto $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1292,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1294,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.Collection<'), 1294)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack12 == 0 goto $stack13 = new java.lang.AssertionError,1294,SinkNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,return "Collection",1295,SinkNode, path: ))

List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack8 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.NavigableSet<"),1286,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack8 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.NavigableSet<'), 1286)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack8 == 0 goto $stack9 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Map<"),1286,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack9 == 0 goto $stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.SortedMap<"),1288,SimpleNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.SortedMap<"),1290,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.SortedMap<'), 1290)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack10 == 0 goto $stack11 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.NavigableMap<"),1290,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack11 == 0 goto $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1292,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1294,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.Collection<'), 1294)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack12 == 0 goto $stack13 = new java.lang.AssertionError,1294,SinkNode, path: ))

List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack7 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.SortedSet<"),1284,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack7 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.SortedSet<'), 1284)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack7 == 0 goto $stack8 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.NavigableSet<"),1284,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack8 == 0 goto $stack9 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Map<"),1286,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack9 == 0 goto $stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.SortedMap<"),1288,SimpleNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.SortedMap<"),1290,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.SortedMap<'), 1290)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack10 == 0 goto $stack11 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.NavigableMap<"),1290,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack11 == 0 goto $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1292,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1294,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.Collection<'), 1294)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack12 == 0 goto $stack13 = new java.lang.AssertionError,1294,SinkNode, path: ))

List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack11 == 0 goto $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1292,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1294,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.Collection<'), 1294)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack12 == 0 goto $stack13 = new java.lang.AssertionError,1294,SinkNode, path: ))

List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.SortedMap<"),1290,SourceNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack10 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.SortedMap<'), 1290)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack10 == 0 goto $stack11 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.NavigableMap<"),1290,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack11 == 0 goto $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1292,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1294,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.Collection<'), 1294)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack12 == 0 goto $stack13 = new java.lang.AssertionError,1294,SinkNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,return "Collection",1295,SinkNode, path: ))

List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack11 == 0 goto $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1292,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,$stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Collection<"),1294,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>, $stack12 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.Collection<'), 1294)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,if $stack12 == 0 goto $stack13 = new java.lang.AssertionError,1294,SinkNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: java.lang.String collectionType(javax.lang.model.element.ExecutableElement)>,return "Collection",1295,SinkNode, path: ))

