Running soot scenario assertj-assertions-generator;org.assertj.assertions.generator.BaseAssertionGenerator;BaseAssertionGenerator(Template, Template, Template, Template, Template, Template, Template, Template, Template, Template, Template, Template);e9c59be58d0f5f8598375f4031f5f06ac0f1cdcc
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/assertj-assertions-generator/e9c59be58d0f5f8598375f4031f5f06ac0f1cdcc/original-without-dependencies/assertion-generator.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,53100
Time to perform Confluence 1 Inter 0,51000
Configure Soot Confluence 2 Inter 0,22400
Time to perform Confluence 2 Inter 0,11800
Visited methods: 44
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack4 = new java.lang.NullPointerException,686,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null content in the Template'), 686)) => Node(<java.lang.NullPointerException: void <init>(java.lang.String)>,l0 := @this: java.lang.NullPointerException,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)) => Node(<java.lang.NullPointerException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1),70,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679) => (<java.lang.NullPointerException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 70))
SINK=>BASE: Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack4 = new java.lang.NullPointerException,686,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null content in the Template'), 686)) => Node(<java.lang.NullPointerException: void <init>(java.lang.String)>,l0 := @this: java.lang.NullPointerException,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)) => Node(<java.lang.NullPointerException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1),70,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679) => (<java.lang.NullPointerException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 70)), SOURCE=>BASE: Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack4 = new java.lang.NullPointerException,686,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null content in the Template'), 686)) => Node(<java.lang.NullPointerException: void <init>(java.lang.String)>,l0 := @this: java.lang.NullPointerException,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)) => Node(<java.lang.NullPointerException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1),70,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679) => (<java.lang.NullPointerException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 70))
SINK=>BASE: Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack14 = new java.lang.NullPointerException,679,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)) => Node(<java.lang.NullPointerException: void <init>(java.lang.String)>,l0 := @this: java.lang.NullPointerException,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)) => Node(<java.lang.NullPointerException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1),70,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679) => (<java.lang.NullPointerException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 70)), SOURCE=>BASE: Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack14 = new java.lang.NullPointerException,679,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)) => Node(<java.lang.NullPointerException: void <init>(java.lang.String)>,l0 := @this: java.lang.NullPointerException,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l0 := @this: java.lang.RuntimeException,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679) => (<java.lang.NullPointerException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679) => (<java.lang.NullPointerException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 70) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack14 = new java.lang.NullPointerException,679,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)) => Node(<java.lang.NullPointerException: void <init>(java.lang.String)>,l0 := @this: java.lang.NullPointerException,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l0 := @this: java.lang.RuntimeException,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679) => (<java.lang.NullPointerException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679) => (<java.lang.NullPointerException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 70) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)), SOURCE=>BASE: Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack14 = new java.lang.NullPointerException,679,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)) => Node(<java.lang.NullPointerException: void <init>(java.lang.String)>,l0 := @this: java.lang.NullPointerException,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l0 := @this: java.lang.RuntimeException,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679) => (<java.lang.NullPointerException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679) => (<java.lang.NullPointerException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 70) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack4 = new java.lang.NullPointerException,686,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null content in the Template'), 686)) => Node(<java.lang.NullPointerException: void <init>(java.lang.String)>,l0 := @this: java.lang.NullPointerException,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l0 := @this: java.lang.RuntimeException,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679) => (<java.lang.NullPointerException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679) => (<java.lang.NullPointerException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 70) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))]
Confluence interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Confluence flows from execution of lines 161 and 161 to line 161, defined in virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate) and virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate) and used in virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null content in the Template'), 686)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null content in the Template'), 686)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679) => (<java.lang.NullPointerException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 70)
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/assertj-assertions-generator/e9c59be58d0f5f8598375f4031f5f06ac0f1cdcc/original-without-dependencies/assertion-generator.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,81300
Runtime: 0.006s
Time to perform OA Inter 0,85000
OA Inter Visited methods: 1
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/assertj-assertions-generator/e9c59be58d0f5f8598375f4031f5f06ac0f1cdcc/original-without-dependencies/assertion-generator.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,47100
Time to perform DFP Inter 0,57800
Depth limit: 5
CONFLICTS: DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Data flows from execution of line 161 to 161, defined in $stack6 = new java.lang.StringBuilder and propagated in specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>()
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>(), 682)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>(), 682)
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Data flows from execution of line 163 to 161, defined in $stack2 = <org.assertj.assertions.generator.Template$Type: org.assertj.assertions.generator.Template$Type ABSTRACT_ASSERT_CLASS> and propagated in specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13)
Caused by line 163 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAbstractAssertionClassTemplate(org.assertj.assertions.generator.Template)>(abstractClassAssertionTemplate), 163) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAbstractAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(abstractAssertionClassTemplate, $stack2), 195)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683)
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Data flows from execution of line 161 to 161, defined in $stack14 = new java.lang.NullPointerException and propagated in specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>("Expecting a non null Template")
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Data flows from execution of line 161 to 161, defined in $stack4 = new java.lang.NullPointerException and propagated in specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Expecting a non null content in the Template")
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null content in the Template'), 686)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null content in the Template'), 686)
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Data flows from execution of line 162 to 161, defined in $stack2 = <org.assertj.assertions.generator.Template$Type: org.assertj.assertions.generator.Template$Type HIERARCHICAL_ASSERT_CLASS> and propagated in specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13)
Caused by line 162 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setHierarchicalAssertionClassTemplate(org.assertj.assertions.generator.Template)>(hierarchicalClassAssertionTemplate), 162) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setHierarchicalAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(hierarchicalAssertionClassTemplate, $stack2), 190)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683)
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Data flows from execution of line 161 to 161, defined in $stack1 = this.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type type> and propagated in specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(), 681)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683)
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Data flows from execution of line 161 to 161, defined in $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") and propagated in specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\''), 683)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683)
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Data flows from execution of line 161 to 161, defined in $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(templateType) and propagated in specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(templateType), 682)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683)
[List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack4 = new java.lang.NullPointerException,686,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null content in the Template'), 686)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Expecting a non null content in the Template"),686,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null content in the Template'), 686))), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(),685,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(), 685)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,if $stack3 != null goto return,685,SinkNode, path: )), List(Node(<org.assertj.assertions.generator.Template: java.lang.String getContent()>,$stack1 = this.<org.assertj.assertions.generator.Template: java.lang.String content>,117,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(), 685)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(),685,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(), 685)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,if $stack3 != null goto return,685,SinkNode, path: )), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void setAbstractAssertionClassTemplate(org.assertj.assertions.generator.Template)>,$stack2 = <org.assertj.assertions.generator.Template$Type: org.assertj.assertions.generator.Template$Type ABSTRACT_ASSERT_CLASS>,195,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAbstractAssertionClassTemplate(org.assertj.assertions.generator.Template)>(abstractClassAssertionTemplate), 163) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAbstractAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(abstractAssertionClassTemplate, $stack2), 195)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,templateType := @parameter1: org.assertj.assertions.generator.Template$Type,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting a Template type to be \'"),682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Expecting a Template type to be \''), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(templateType),682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(templateType), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' but was \'"),682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\' but was \''), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'"),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\''), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13),683,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683))), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void setHierarchicalAssertionClassTemplate(org.assertj.assertions.generator.Template)>,$stack2 = <org.assertj.assertions.generator.Template$Type: org.assertj.assertions.generator.Template$Type HIERARCHICAL_ASSERT_CLASS>,190,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setHierarchicalAssertionClassTemplate(org.assertj.assertions.generator.Template)>(hierarchicalClassAssertionTemplate), 162) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setHierarchicalAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(hierarchicalAssertionClassTemplate, $stack2), 190)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,templateType := @parameter1: org.assertj.assertions.generator.Template$Type,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,if templateType == $stack2 goto $stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(),681,SinkNode, path: )), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'"),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\''), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13),683,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683))), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack6 = new java.lang.StringBuilder,682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>(), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>(),682,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>(), 682))), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void setAbstractAssertionClassTemplate(org.assertj.assertions.generator.Template)>,$stack2 = <org.assertj.assertions.generator.Template$Type: org.assertj.assertions.generator.Template$Type ABSTRACT_ASSERT_CLASS>,195,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAbstractAssertionClassTemplate(org.assertj.assertions.generator.Template)>(abstractClassAssertionTemplate), 163) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAbstractAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(abstractAssertionClassTemplate, $stack2), 195)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,templateType := @parameter1: org.assertj.assertions.generator.Template$Type,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,if templateType == $stack2 goto $stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(),681,SinkNode, path: )), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(templateType),682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(templateType), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' but was \'"),682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\' but was \''), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'"),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\''), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13),683,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683))), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(),681,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(), 681)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,if templateType == $stack2 goto $stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(),681,SinkNode, path: )), List(Node(<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>,$stack1 = this.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type type>,121,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(), 681)) => Node(<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>,return $stack1,121,SinkNode, path: )), List(Node(<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>,$stack1 = this.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type type>,121,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(), 681)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack10 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack10 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' but was \'"),682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\' but was \''), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'"),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\''), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13),683,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683))), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void setHierarchicalAssertionClassTemplate(org.assertj.assertions.generator.Template)>,$stack2 = <org.assertj.assertions.generator.Template$Type: org.assertj.assertions.generator.Template$Type HIERARCHICAL_ASSERT_CLASS>,190,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setHierarchicalAssertionClassTemplate(org.assertj.assertions.generator.Template)>(hierarchicalClassAssertionTemplate), 162) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setHierarchicalAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(hierarchicalAssertionClassTemplate, $stack2), 190)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,templateType := @parameter1: org.assertj.assertions.generator.Template$Type,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting a Template type to be \'"),682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Expecting a Template type to be \''), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(templateType),682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(templateType), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' but was \'"),682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\' but was \''), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'"),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\''), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13),683,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683))), List(Node(<org.assertj.assertions.generator.Template: java.lang.String getContent()>,$stack1 = this.<org.assertj.assertions.generator.Template: java.lang.String content>,117,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(), 685)) => Node(<org.assertj.assertions.generator.Template: java.lang.String getContent()>,return $stack1,117,SinkNode, path: )), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack14 = new java.lang.NullPointerException,679,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>("Expecting a non null Template"),679,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679))), List(Node(<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>,$stack1 = this.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type type>,121,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(), 681)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(),681,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(), 681)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,if templateType == $stack2 goto $stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(),681,SinkNode, path: ))]
Visited methods: 22
 Analysis results
----------------------------
 Number of conflicts: 16
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/assertj-assertions-generator/e9c59be58d0f5f8598375f4031f5f06ac0f1cdcc/original-without-dependencies/assertion-generator.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,52900
Time to perform DFP Inter 0,47400
Depth limit: 5
CONFLICTS: DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Data flows from execution of line 161 to 161, defined in $stack6 = new java.lang.StringBuilder and propagated in specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>()
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>(), 682)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>(), 682)
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Data flows from execution of line 166 to 161, defined in $stack2 = <org.assertj.assertions.generator.Template$Type: org.assertj.assertions.generator.Template$Type HAS_FOR_REAL_NUMBER> and propagated in specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13)
Caused by line 166 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setHasAssertionTemplateForRealNumber(org.assertj.assertions.generator.Template)>(hasAssertionTemplateForRealNumber), 166) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setHasAssertionTemplateForRealNumber(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(hasAssertionTemplateForRealNumber, $stack2), 210)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683)
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Data flows from execution of line 161 to 161, defined in $stack14 = new java.lang.NullPointerException and propagated in specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>("Expecting a non null Template")
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Data flows from execution of line 161 to 161, defined in $stack4 = new java.lang.NullPointerException and propagated in specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Expecting a non null content in the Template")
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null content in the Template'), 686)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null content in the Template'), 686)
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Data flows from execution of line 161 to 161, defined in $stack1 = this.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type type> and propagated in specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(), 681)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683)
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Data flows from execution of line 161 to 161, defined in $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") and propagated in specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\''), 683)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683)
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>
Data flows from execution of line 161 to 161, defined in $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(templateType) and propagated in specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(templateType), 682)
Caused by line 161 flow: path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683)
[List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack4 = new java.lang.NullPointerException,686,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null content in the Template'), 686)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Expecting a non null content in the Template"),686,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack4.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null content in the Template'), 686))), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(),685,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(), 685)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,if $stack3 != null goto return,685,SinkNode, path: )), List(Node(<org.assertj.assertions.generator.Template: java.lang.String getContent()>,$stack1 = this.<org.assertj.assertions.generator.Template: java.lang.String content>,117,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(), 685)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(),685,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(), 685)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,if $stack3 != null goto return,685,SinkNode, path: )), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'"),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\''), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13),683,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683))), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack6 = new java.lang.StringBuilder,682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>(), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>(),682,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>(), 682))), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(templateType),682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(templateType), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' but was \'"),682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\' but was \''), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'"),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\''), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13),683,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683))), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void setHasAssertionTemplateForRealNumber(org.assertj.assertions.generator.Template)>,$stack2 = <org.assertj.assertions.generator.Template$Type: org.assertj.assertions.generator.Template$Type HAS_FOR_REAL_NUMBER>,210,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setHasAssertionTemplateForRealNumber(org.assertj.assertions.generator.Template)>(hasAssertionTemplateForRealNumber), 166) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setHasAssertionTemplateForRealNumber(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(hasAssertionTemplateForRealNumber, $stack2), 210)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,templateType := @parameter1: org.assertj.assertions.generator.Template$Type,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting a Template type to be \'"),682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Expecting a Template type to be \''), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(templateType),682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(templateType), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' but was \'"),682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\' but was \''), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'"),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\''), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13),683,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683))), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(),681,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(), 681)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,if templateType == $stack2 goto $stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(),681,SinkNode, path: )), List(Node(<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>,$stack1 = this.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type type>,121,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(), 681)) => Node(<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>,return $stack1,121,SinkNode, path: )), List(Node(<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>,$stack1 = this.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type type>,121,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(), 681)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack10 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack10 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' but was \'"),682,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\' but was \''), 682)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'"),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\''), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(),683,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>(), 683)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13),683,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack13), 683))), List(Node(<org.assertj.assertions.generator.Template: java.lang.String getContent()>,$stack1 = this.<org.assertj.assertions.generator.Template: java.lang.String content>,117,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(), 685)) => Node(<org.assertj.assertions.generator.Template: java.lang.String getContent()>,return $stack1,117,SinkNode, path: )), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack14 = new java.lang.NullPointerException,679,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>("Expecting a non null Template"),679,SinkNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, specialinvoke $stack14.<java.lang.NullPointerException: void <init>(java.lang.String)>('Expecting a non null Template'), 679))), List(Node(<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>,$stack1 = this.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type type>,121,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(), 681)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,$stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(),681,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>, $stack2 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: org.assertj.assertions.generator.Template$Type getType()>(), 681)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,if templateType == $stack2 goto $stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(),681,SinkNode, path: )), List(Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void setHasAssertionTemplateForRealNumber(org.assertj.assertions.generator.Template)>,$stack2 = <org.assertj.assertions.generator.Template$Type: org.assertj.assertions.generator.Template$Type HAS_FOR_REAL_NUMBER>,210,SourceNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setHasAssertionTemplateForRealNumber(org.assertj.assertions.generator.Template)>(hasAssertionTemplateForRealNumber), 166) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setHasAssertionTemplateForRealNumber(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(hasAssertionTemplateForRealNumber, $stack2), 210)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,templateType := @parameter1: org.assertj.assertions.generator.Template$Type,-1,SimpleNode, path: (<org.assertj.assertions.generator.BaseAssertionGenerator: void <init>(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template)>, virtualinvoke this.<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>(classAssertionTemplate), 161) => (<org.assertj.assertions.generator.BaseAssertionGenerator: void setAssertionClassTemplate(org.assertj.assertions.generator.Template)>, staticinvoke <org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>(assertionClassTemplate, $stack2), 185)) => Node(<org.assertj.assertions.generator.BaseAssertionGenerator: void checkTemplateParameter(org.assertj.assertions.generator.Template,org.assertj.assertions.generator.Template$Type)>,if templateType == $stack2 goto $stack3 = virtualinvoke assertionClassTemplate.<org.assertj.assertions.generator.Template: java.lang.String getContent()>(),681,SinkNode, path: ))]
Visited methods: 22
 Analysis results
----------------------------
 Number of conflicts: 14
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/assertj-assertions-generator/e9c59be58d0f5f8598375f4031f5f06ac0f1cdcc/original-without-dependencies/assertion-generator.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,44800
Time to perform PDG 0,32800
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/assertj-assertions-generator/e9c59be58d0f5f8598375f4031f5f06ac0f1cdcc/original-without-dependencies/assertion-generator.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,51500
Time to perform PDG 0,44000
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
