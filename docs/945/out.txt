List(Node(<cz.startnet.utils.pgdiff.PgDiffFunctions: void dropFunctions(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,if oldSchema != null goto $stack7 = virtualinvoke oldSchema.<cz.startnet.utils.pgdiff.schema.PgSchema: java.util.List getFunctions()>(),69,SourceNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffFunctions: void dropFunctions(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,l5 = interfaceinvoke $stack7.<java.util.List: java.util.Iterator iterator()>(),74,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffFunctions: void dropFunctions(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, l5 = interfaceinvoke $stack7.<java.util.List: java.util.Iterator iterator()>(), 74)) => Node(<cz.startnet.utils.pgdiff.PgDiffFunctions: void dropFunctions(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,$stack9 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>(),74,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffFunctions: void dropFunctions(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, $stack9 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>(), 74)) => Node(<cz.startnet.utils.pgdiff.PgDiffFunctions: void dropFunctions(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,if $stack9 == 0 goto return,74,SimpleNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffFunctions: void dropFunctions(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,if $stack12 != 0 goto (branch),75,SimpleNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffFunctions: void dropFunctions(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,virtualinvoke searchPathHelper.<cz.startnet.utils.pgdiff.SearchPathHelper: void outputSearchPath(java.io.PrintWriter)>(writer),76,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffFunctions: void dropFunctions(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, virtualinvoke searchPathHelper.<cz.startnet.utils.pgdiff.SearchPathHelper: void outputSearchPath(java.io.PrintWriter)>(writer), 76)))

