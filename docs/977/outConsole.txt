Running soot scenario jsonld-java;com.github.jsonldjava.core.JsonLdProcessor;frame(Object, Object, JsonLdOptions);67ce1f47c7e559fb636cf7c5a1cd2d5950990156
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jsonld-java/67ce1f47c7e559fb636cf7c5a1cd2d5950990156/original-without-dependencies/jsonld-java-0.11.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,63100
Time to perform Confluence 1 Inter 20,89300
Configure Soot Confluence 2 Inter 0,19600
Time to perform Confluence 2 Inter 40,77800
Visited methods: 250
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15),1731,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15), 1731)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack23 = "@list",38,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack24 = virtualinvoke $stack23.<java.lang.String: boolean equals(java.lang.Object)>(key), 38)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke $stack15.<java.util.List: java.lang.Object get(int)>(0),1576,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,property = (java.lang.String) $stack67,1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, property = (java.lang.String) $stack67, 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack15 = "@graph",37,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack16 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>(key), 37)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,l16 = interfaceinvoke values.<java.util.List: java.util.Iterator iterator()>(),1196,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, l16 = interfaceinvoke values.<java.util.List: java.util.Iterator iterator()>(), 1196)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,value = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),1201,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, value = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 1201)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,element := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,elem#3 = (java.util.Map) element,1062,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, elem#3 = (java.util.Map) element, 1062)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>("@reverse"),1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>('@reverse'), 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,type#63 = (java.util.Map) $stack61,1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, type#63 = (java.util.Map) $stack61, 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(),1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(), 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,property = (java.lang.String) $stack67,1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, property = (java.lang.String) $stack67, 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item = interfaceinvoke elem.<java.util.Iterator: java.lang.Object next()>(),1058,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item = interfaceinvoke elem.<java.util.Iterator: java.lang.Object next()>(), 1058)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,element := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,elem#3 = (java.util.Map) element,1062,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, elem#3 = (java.util.Map) element, 1062)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>("@reverse"),1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>('@reverse'), 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,type#63 = (java.util.Map) $stack61,1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, type#63 = (java.util.Map) $stack61, 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(),1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(), 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,property = (java.lang.String) $stack67,1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, property = (java.lang.String) $stack67, 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke $stack10.<java.util.Map: java.lang.Object get(java.lang.Object)>("@value"),1580,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,$stack25 = (java.lang.Boolean) value,1598,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, $stack25 = (java.lang.Boolean) value, 1598)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack31 = state.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean explicit>,1387,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack31 = state.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean explicit>, 1387)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, "@explicit", $stack31),1387,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, '@explicit', $stack31), 1387)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,propertyFrame#70 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1544,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, propertyFrame#70 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1544)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>,$stack59 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack60),47,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>, $stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2), 96)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>,$stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2),96,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>,$stack20 = interfaceinvoke frame.<java.util.List: java.lang.Object get(int)>(0),1355,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, $stack20 = interfaceinvoke frame.<java.util.List: java.lang.Object get(int)>(0), 1355)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>,$stack13 = (java.util.Map) $stack20,1351,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, $stack13 = (java.util.Map) $stack20, 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frameIds = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>("@id"),1688,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, frameIds = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>('@id'), 1688)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(),1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(), 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,property = (java.lang.String) $stack67,1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, property = (java.lang.String) $stack67, 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,newTypes#55 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>("@index"),1176,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, newTypes#55 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>('@index'), 1176)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,$stack5 = this.<com.github.jsonldjava.core.JsonLdApi: int blankNodeCounter>,1256,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>, $stack5 = this.<com.github.jsonldjava.core.JsonLdApi: int blankNodeCounter>, 1256)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,$stack7 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack5),1256,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>, $stack7 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack5), 1256)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,bnid = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>(),1256,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#14 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14),1214,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#14 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1214)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune),234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune), 234)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("@list", $stack59),233,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('@list', $stack59), 233))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = null,343,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack56 = (java.util.Map) input,234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack56 = (java.util.Map) input, 234)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("@list", $stack59),233,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('@list', $stack59), 233)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,prop = (java.lang.String) $stack62,1569,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, prop = (java.lang.String) $stack62, 1569)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack1 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean isString(java.lang.Object)>(key),32,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack1 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean isString(java.lang.Object)>(key), 32)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>,$stack8 = (java.lang.Boolean) value,1588,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, '@explicit', $stack31), 1387)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, "@explicit", $stack31),1387,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, '@explicit', $stack31), 1387)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke $stack15.<java.util.List: java.lang.Object get(int)>(0),1576,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,list = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1478,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, list = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1478)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>,$stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),511,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.utils.Obj: java.util.Map newMap()>,$stack0 = new java.util.LinkedHashMap,14,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke $stack6.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>(opts), 136) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 36) => (<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, $stack3 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 60)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack139 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1066,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack139 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1066)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack66 = state.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean omitDefault>,1546,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack66 = state.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean omitDefault>, 1546)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack67 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(propertyFrame#70, "@omitDefault", $stack66),1546,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack67 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(propertyFrame#70, '@omitDefault', $stack66), 1546)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,rval = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1675,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune),342,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = null,343,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune),342,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack116 = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop),1518,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack116 = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop), 1518)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack117 = (java.util.List) $stack116,1518,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack117 = (java.util.List) $stack116, 1518)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack118 = interfaceinvoke $stack117.<java.util.List: java.lang.Object get(int)>(0),1518,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack118 = interfaceinvoke $stack117.<java.util.List: java.lang.Object get(int)>(0), 1518)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,listitem#60 = (java.util.Map) $stack118,1518,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, listitem#60 = (java.util.Map) $stack118, 1518)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frameIds = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>("@id"),1688,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, frameIds = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>('@id'), 1688)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune),240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune), 240))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,e = $stack22,347,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>, e = $stack22, 347)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = e,348,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack25 = (java.util.Map) input,240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack25 = (java.util.Map) input, 240)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack26 = interfaceinvoke $stack25.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop#7),240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack26 = interfaceinvoke $stack25.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop#7), 240)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,$stack5 = "@list",117,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101) => (<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>, $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>(key), 117)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,values = (java.util.List) $stack68,1194,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, values = (java.util.List) $stack68, 1194)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,l16 = interfaceinvoke values.<java.util.List: java.util.Iterator iterator()>(),1196,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, l16 = interfaceinvoke values.<java.util.List: java.util.Iterator iterator()>(), 1196)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,value = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),1201,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, value = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 1201)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,element := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,elem#3 = (java.util.Map) element,1062,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, elem#3 = (java.util.Map) element, 1062)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>("@reverse"),1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>('@reverse'), 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,type#63 = (java.util.Map) $stack61,1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, type#63 = (java.util.Map) $stack61, 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(),1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(), 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,property = (java.lang.String) $stack67,1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, property = (java.lang.String) $stack67, 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune),234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune), 234))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,$stack19 = newarray (java.lang.Object)[0],346,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>, rval = virtualinvoke $stack18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(value, $stack19), 346)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = virtualinvoke $stack18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(value, $stack19),346,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack55 = (java.util.Map) input,234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack55 = (java.util.Map) input, 234)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack58 = interfaceinvoke $stack55.<java.util.Map: java.lang.Object get(java.lang.Object)>("@list"),234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack58 = interfaceinvoke $stack55.<java.util.Map: java.lang.Object get(java.lang.Object)>('@list'), 234)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack116 = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop),1518,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack116 = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop), 1518)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack117 = (java.util.List) $stack116,1518,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack117 = (java.util.List) $stack116, 1518)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack118 = interfaceinvoke $stack117.<java.util.List: java.lang.Object get(int)>(0),1518,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack118 = interfaceinvoke $stack117.<java.util.List: java.lang.Object get(int)>(0), 1518)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,listitem#60 = (java.util.Map) $stack118,1518,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, listitem#60 = (java.util.Map) $stack118, 1518)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(),1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(), 1769)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,key#24 = (java.lang.String) $stack18,1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, key#24 = (java.lang.String) $stack18, 1769)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>,$stack40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0),66,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>, $stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2), 96)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>,$stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2),96,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,prop = (java.lang.String) $stack62,1569,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, prop = (java.lang.String) $stack62, 1569)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,nodeId = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>("@type"),1722,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, nodeId = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>('@type'), 1722)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack36 = (java.util.List) nodeId,1729,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack36 = (java.util.List) nodeId, 1729)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,key = interfaceinvoke $stack36.<java.util.List: java.util.Iterator iterator()>(),1729,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, key = interfaceinvoke $stack36.<java.util.List: java.util.Iterator iterator()>(), 1729)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,j = interfaceinvoke key.<java.util.Iterator: java.lang.Object next()>(),1740,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, j = interfaceinvoke key.<java.util.Iterator: java.lang.Object next()>(), 1740)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15),1731,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15), 1731)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune),342,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = value,356,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune),342,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,listitem#60 = flags,1520,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, listitem#60 = flags, 1520)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frameIds = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>("@id"),1688,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, frameIds = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>('@id'), 1688)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack5 = "@context",35,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>(key), 35)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune),240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune), 240)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,interfaceinvoke $stack33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(prop#7, i),249,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(prop#7, i), 249))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = e,348,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack33 = (java.util.Map) input,249,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack33 = (java.util.Map) input, 249)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack33 = "@type",40,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack34 = virtualinvoke $stack33.<java.lang.String: boolean equals(java.lang.Object)>(key), 40)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune),234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune), 234))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,e = $stack22,347,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>, e = $stack22, 347)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = e,348,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack55 = (java.util.Map) input,234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack55 = (java.util.Map) input, 234)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack58 = interfaceinvoke $stack55.<java.util.Map: java.lang.Object get(java.lang.Object)>("@list"),234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack58 = interfaceinvoke $stack55.<java.util.Map: java.lang.Object get(java.lang.Object)>('@list'), 234)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, name),1586,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, '@explicit', $stack31), 1387) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, name), 1586)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>,$stack8 = (java.lang.Boolean) value,1588,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, '@explicit', $stack31), 1387)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, "@explicit", $stack31),1387,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, '@explicit', $stack31), 1387)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,j = interfaceinvoke key.<java.util.Iterator: java.lang.Object next()>(),1740,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, j = interfaceinvoke key.<java.util.Iterator: java.lang.Object next()>(), 1740)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15),1731,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15), 1731)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,list = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1510,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, list = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1510)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,$stack12 = this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map blankNodeIdentifierMap>,1260,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>, $stack12 = this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map blankNodeIdentifierMap>, 1260)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,$stack18 = this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map blankNodeIdentifierMap>,1254,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>, $stack18 = this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map blankNodeIdentifierMap>, 1254)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,$stack19 = interfaceinvoke $stack18.<java.util.Map: java.lang.Object get(java.lang.Object)>(id),1254,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>, $stack19 = interfaceinvoke $stack18.<java.util.Map: java.lang.Object get(java.lang.Object)>(id), 1254)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,$stack20 = (java.lang.String) $stack19,1254,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,oldTypes#22 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(oldTypes#22),1130,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, oldTypes#22 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(oldTypes#22), 1130)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeGraph := @parameter2: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack20 = interfaceinvoke nodeMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(activeGraph),1068,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack20 = interfaceinvoke nodeMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(activeGraph), 1068)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#4 = (java.util.Map) $stack20,1068,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#4 = (java.util.Map) $stack20, 1068)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22),1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22), 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,node = (java.util.Map) $stack30,1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, node = (java.util.Map) $stack30, 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>("@index"),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>('@index'), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,l18 = interfaceinvoke props.<java.util.List: java.util.Iterator iterator()>(),1534,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, l18 = interfaceinvoke props.<java.util.List: java.util.Iterator iterator()>(), 1534)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack62 = interfaceinvoke l18.<java.util.Iterator: java.lang.Object next()>(),1569,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack62 = interfaceinvoke l18.<java.util.Iterator: java.lang.Object next()>(), 1569)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,prop = (java.lang.String) $stack62,1569,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, prop = (java.lang.String) $stack62, 1569)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),1573,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,$stack15 = (java.util.List) value,1576,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>, $stack15 = (java.util.List) value, 1576)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke $stack15.<java.util.List: java.lang.Object get(int)>(0),1576,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,$stack25 = (java.lang.Boolean) value,1598,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, $stack25 = (java.lang.Boolean) value, 1598)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack29 = "@preserve",39,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack30 = virtualinvoke $stack29.<java.lang.String: boolean equals(java.lang.Object)>(key), 39)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),1573,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,$stack15 = (java.util.List) value,1576,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>, $stack15 = (java.util.List) value, 1576)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke $stack15.<java.util.List: java.lang.Object get(int)>(0),1576,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack9 = "@default",36,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>(key), 36)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune),240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune), 240))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = null,343,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack25 = (java.util.Map) input,240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack25 = (java.util.Map) input, 240)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack26 = interfaceinvoke $stack25.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop#7),240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack26 = interfaceinvoke $stack25.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop#7), 240)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>,$stack48 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1),60,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>, $stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2), 96)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>,$stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2),96,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>,$stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),511,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>,frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>("json-ld-1.1-expand-frame"),511,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>,$stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),511,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>,frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>("json-ld-1.1-expand-frame"),511,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke $stack10.<java.util.Map: java.lang.Object get(java.lang.Object)>("@value"),1580,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack23 = "@list",38,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack24 = virtualinvoke $stack23.<java.lang.String: boolean equals(java.lang.Object)>(key), 38)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,$stack5 = this.<com.github.jsonldjava.core.JsonLdApi: int blankNodeCounter>,1256,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>, $stack5 = this.<com.github.jsonldjava.core.JsonLdApi: int blankNodeCounter>, 1256)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,$stack7 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack5),1256,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>, $stack7 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack5), 1256)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,bnid = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>(),1256,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,oldTypes#22 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(oldTypes#22),1130,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, oldTypes#22 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(oldTypes#22), 1130)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeGraph := @parameter2: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack20 = interfaceinvoke nodeMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(activeGraph),1068,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack20 = interfaceinvoke nodeMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(activeGraph), 1068)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#4 = (java.util.Map) $stack20,1068,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#4 = (java.util.Map) $stack20, 1068)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22),1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22), 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,node = (java.util.Map) $stack30,1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, node = (java.util.Map) $stack30, 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>("@index"),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>('@index'), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke $stack15.<java.util.List: java.lang.Object get(int)>(0),1576,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.utils.Obj: java.util.Map newMap()>,$stack0 = new java.util.LinkedHashMap,14,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke $stack6.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>(opts), 136) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 36) => (<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, $stack3 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 60)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>,$stack13 = (java.util.Map) $stack20,1351,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, $stack13 = (java.util.Map) $stack20, 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(),1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(), 1769)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,key#24 = (java.lang.String) $stack18,1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, key#24 = (java.lang.String) $stack18, 1769)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune),234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune), 234))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = value,356,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack55 = (java.util.Map) input,234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack55 = (java.util.Map) input, 234)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack58 = interfaceinvoke $stack55.<java.util.Map: java.lang.Object get(java.lang.Object)>("@list"),234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack58 = interfaceinvoke $stack55.<java.util.Map: java.lang.Object get(java.lang.Object)>('@list'), 234)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack139 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1066,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack139 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1066)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,key#24 = (java.lang.String) $stack18,1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, key#24 = (java.lang.String) $stack18, 1769)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack1 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean isString(java.lang.Object)>(key),32,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack1 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean isString(java.lang.Object)>(key), 32)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.utils.Obj: java.util.Map newMap()>,$stack0 = new java.util.LinkedHashMap,14,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke $stack6.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>(opts), 136) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 36) => (<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, $stack3 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 60)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune),240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune), 240)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,interfaceinvoke $stack33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(prop#7, i),249,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(prop#7, i), 249))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = value,356,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack33 = (java.util.Map) input,249,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack33 = (java.util.Map) input, 249)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack15 = "@graph",37,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack16 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>(key), 37)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack15 = "@graph",37,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack16 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>(key), 37)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack75 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, j),1710,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack75 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, j), 1710)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>,$stack51 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0),57,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>, $stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2), 96)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>,$stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2),96,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>,$stack7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(thedefault),1590,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, '@explicit', $stack31), 1387)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, "@explicit", $stack31),1387,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, '@explicit', $stack31), 1387)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,list = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1510,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, list = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1510)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,subframe = flags,1497,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, subframe = flags, 1497)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frameIds = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>("@id"),1688,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, frameIds = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>('@id'), 1688)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack23 = "@list",38,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack24 = virtualinvoke $stack23.<java.lang.String: boolean equals(java.lang.Object)>(key), 38)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune),234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune), 234)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("@list", $stack59),233,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('@list', $stack59), 233))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,$stack19 = newarray (java.lang.Object)[0],346,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>, rval = virtualinvoke $stack18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(value, $stack19), 346)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = virtualinvoke $stack18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(value, $stack19),346,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack56 = (java.util.Map) input,234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack56 = (java.util.Map) input, 234)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("@list", $stack59),233,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('@list', $stack59), 233)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,props = $stack56,1532,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, props = $stack56, 1532)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,l18 = interfaceinvoke props.<java.util.List: java.util.Iterator iterator()>(),1534,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, l18 = interfaceinvoke props.<java.util.List: java.util.Iterator iterator()>(), 1534)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack62 = interfaceinvoke l18.<java.util.Iterator: java.lang.Object next()>(),1569,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack62 = interfaceinvoke l18.<java.util.Iterator: java.lang.Object next()>(), 1569)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,prop = (java.lang.String) $stack62,1569,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, prop = (java.lang.String) $stack62, 1569)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack1 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean isString(java.lang.Object)>(key),32,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack1 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean isString(java.lang.Object)>(key), 32)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack5 = "@context",35,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>(key), 35)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,elem#3 = (java.util.Map) element,1062,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, elem#3 = (java.util.Map) element, 1062)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>("@reverse"),1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>('@reverse'), 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,type#63 = (java.util.Map) $stack61,1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, type#63 = (java.util.Map) $stack61, 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(),1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(), 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,property = (java.lang.String) $stack67,1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, property = (java.lang.String) $stack67, 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,propertyFrame#70 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1544,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, propertyFrame#70 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1544)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,flags = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1388,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, flags = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1388)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,$stack5 = "@list",117,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101) => (<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>, $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>(key), 117)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>,$stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),511,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack5 = "@context",35,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>(key), 35)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack33 = "@type",40,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack34 = virtualinvoke $stack33.<java.lang.String: boolean equals(java.lang.Object)>(key), 40)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,oldTypes#22 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(oldTypes#22),1130,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, oldTypes#22 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(oldTypes#22), 1130)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeGraph := @parameter2: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack20 = interfaceinvoke nodeMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(activeGraph),1068,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack20 = interfaceinvoke nodeMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(activeGraph), 1068)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#4 = (java.util.Map) $stack20,1068,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#4 = (java.util.Map) $stack20, 1068)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22),1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22), 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,node = (java.util.Map) $stack30,1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, node = (java.util.Map) $stack30, 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>("@index"),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>('@index'), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune),234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune), 234)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("@list", $stack59),233,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('@list', $stack59), 233))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = value,356,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack56 = (java.util.Map) input,234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack56 = (java.util.Map) input, 234)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("@list", $stack59),233,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('@list', $stack59), 233)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>,$stack13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack12),91,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>, $stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2), 96)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>,$stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2),96,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke $stack15.<java.util.List: java.lang.Object get(int)>(0),1576,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>,$stack61 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack62),45,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>, $stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2), 96)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>,$stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2),96,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>,$stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2),96,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune),234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune), 234))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = null,343,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack55 = (java.util.Map) input,234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack55 = (java.util.Map) input, 234)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack58 = interfaceinvoke $stack55.<java.util.Map: java.lang.Object get(java.lang.Object)>("@list"),234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack58 = interfaceinvoke $stack55.<java.util.Map: java.lang.Object get(java.lang.Object)>('@list'), 234)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,e = $stack22,347,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>, e = $stack22, 347)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = e,348,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack61 = (java.util.Map) input,220,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack61 = (java.util.Map) input, 220)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack63 = interfaceinvoke $stack61.<java.util.Map: java.lang.Object get(java.lang.Object)>("@preserve"),220,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack63 = interfaceinvoke $stack61.<java.util.Map: java.lang.Object get(java.lang.Object)>('@preserve'), 220)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,types = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>("@type"),1687,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, types = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>('@type'), 1687)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack53 = (java.util.List) types,1730,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack53 = (java.util.List) types, 1730)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,o = interfaceinvoke $stack53.<java.util.List: java.util.Iterator iterator()>(),1730,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, o = interfaceinvoke $stack53.<java.util.List: java.util.Iterator iterator()>(), 1730)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,j#15 = interfaceinvoke o.<java.util.Iterator: java.lang.Object next()>(),1735,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, j#15 = interfaceinvoke o.<java.util.Iterator: java.lang.Object next()>(), 1735)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15),1731,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15), 1731)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune),240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune), 240))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,$stack19 = newarray (java.lang.Object)[0],346,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>, rval = virtualinvoke $stack18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(value, $stack19), 346)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = virtualinvoke $stack18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(value, $stack19),346,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack25 = (java.util.Map) input,240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack25 = (java.util.Map) input, 240)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack26 = interfaceinvoke $stack25.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop#7),240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack26 = interfaceinvoke $stack25.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop#7), 240)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22),1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22), 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,node = (java.util.Map) $stack30,1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, node = (java.util.Map) $stack30, 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>("@index"),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>('@index'), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke $stack10.<java.util.Map: java.lang.Object get(java.lang.Object)>("@value"),1580,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,nodeId = $stack63,1724,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, nodeId = $stack63, 1724)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack36 = (java.util.List) nodeId,1729,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack36 = (java.util.List) nodeId, 1729)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,key = interfaceinvoke $stack36.<java.util.List: java.util.Iterator iterator()>(),1729,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, key = interfaceinvoke $stack36.<java.util.List: java.util.Iterator iterator()>(), 1729)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,j = interfaceinvoke key.<java.util.Iterator: java.lang.Object next()>(),1740,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, j = interfaceinvoke key.<java.util.Iterator: java.lang.Object next()>(), 1740)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15),1731,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15), 1731)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,output = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1411,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, output = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1411)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,$stack12 = this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map blankNodeIdentifierMap>,1260,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>, $stack12 = this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map blankNodeIdentifierMap>, 1260)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,$stack18 = this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map blankNodeIdentifierMap>,1254,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>, $stack18 = this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map blankNodeIdentifierMap>, 1254)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,$stack19 = interfaceinvoke $stack18.<java.util.Map: java.lang.Object get(java.lang.Object)>(id),1254,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>, $stack19 = interfaceinvoke $stack18.<java.util.Map: java.lang.Object get(java.lang.Object)>(id), 1254)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,$stack20 = (java.lang.String) $stack19,1254,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#14 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14),1214,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#14 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1214)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getOmitDefault()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean omitDefault>,123,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke $stack6.<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>(this, $stack7), 1339) => (<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>, $stack5 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getOmitDefault()>(), 1307)) => Node(<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>,$stack6 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getOmitDefault()>(),1308,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke $stack6.<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>(this, $stack7), 1339) => (<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>, $stack6 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getOmitDefault()>(), 1308)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>,$stack6 = new com.github.jsonldjava.core.JsonLdApi$FramingContext,1339,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke $stack6.<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>(this, $stack7), 1339)) => Node(<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>,this := @this: com.github.jsonldjava.core.JsonLdApi$FramingContext,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke $stack6.<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>(this, $stack7), 1339)) => Node(<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>,this.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean explicit> = $stack9,1305,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke $stack6.<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>(this, $stack7), 1339) => (<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>, this.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean explicit> = $stack9, 1305)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack31 = state.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean explicit>,1387,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack31 = state.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean explicit>, 1387)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, "@explicit", $stack31),1387,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, '@explicit', $stack31), 1387)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>,$stack21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1),89,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>, $stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2), 96)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>,$stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2),96,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune),342,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,$stack19 = newarray (java.lang.Object)[0],346,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>, rval = virtualinvoke $stack18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(value, $stack19), 346)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = virtualinvoke $stack18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(value, $stack19),346,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune),342,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,tmp = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1487,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, tmp = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1487)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>,$stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),511,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack15 = "@graph",37,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack16 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>(key), 37)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#4 = (java.util.Map) $stack20,1068,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#4 = (java.util.Map) $stack20, 1068)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22),1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22), 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,node = (java.util.Map) $stack30,1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, node = (java.util.Map) $stack30, 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>("@index"),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>('@index'), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,$stack5 = "@list",117,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101) => (<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>, $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>(key), 117)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack9 = "@default",36,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>(key), 36)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>,result = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),27,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, oldTypes#21 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@list', tmp$1364739835), 1112)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune),342,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = e,348,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune),342,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack56 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>("@graph"),1205,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack56 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>('@graph'), 1205)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,element := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,elem#3 = (java.util.Map) element,1062,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, elem#3 = (java.util.Map) element, 1062)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>("@reverse"),1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>('@reverse'), 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,type#63 = (java.util.Map) $stack61,1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, type#63 = (java.util.Map) $stack61, 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(),1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(), 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,property = (java.lang.String) $stack67,1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, property = (java.lang.String) $stack67, 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune),342,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,e = $stack22,347,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>, e = $stack22, 347)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = e,348,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune),342,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi)>,this.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean omitDefault> = 0,1294,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke $stack6.<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>(this, $stack7), 1339) => (<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi)>(l1), 1300) => (<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi)>, this.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean omitDefault> = 0, 1294)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack66 = state.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean omitDefault>,1546,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack66 = state.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean omitDefault>, 1546)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack67 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(propertyFrame#70, "@omitDefault", $stack66),1546,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack67 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(propertyFrame#70, '@omitDefault', $stack66), 1546)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack5 = "@context",35,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>(key), 35)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,oldTypes#22 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(null),1135,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, oldTypes#22 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(null), 1135)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeGraph := @parameter2: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack20 = interfaceinvoke nodeMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(activeGraph),1068,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack20 = interfaceinvoke nodeMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(activeGraph), 1068)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#4 = (java.util.Map) $stack20,1068,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#4 = (java.util.Map) $stack20, 1068)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22),1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22), 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,node = (java.util.Map) $stack30,1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, node = (java.util.Map) $stack30, 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>("@index"),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>('@index'), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,value = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),1201,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, value = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 1201)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,element := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,elem#3 = (java.util.Map) element,1062,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, elem#3 = (java.util.Map) element, 1062)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>("@reverse"),1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>('@reverse'), 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,type#63 = (java.util.Map) $stack61,1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, type#63 = (java.util.Map) $stack61, 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(),1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(), 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,property = (java.lang.String) $stack67,1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, property = (java.lang.String) $stack67, 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,tmp$1853509178 = new java.util.ArrayList,1208,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, specialinvoke tmp$1853509178.<java.util.ArrayList: void <init>(java.util.Collection)>($stack36), 1208)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,newTypes = tmp$1853509178,1208,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, newTypes = tmp$1853509178, 1208)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,type = interfaceinvoke newTypes.<java.util.List: java.util.Iterator iterator()>(),1210,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, type = interfaceinvoke newTypes.<java.util.List: java.util.Iterator iterator()>(), 1210)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack39 = interfaceinvoke type.<java.util.Iterator: java.lang.Object next()>(),1224,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack39 = interfaceinvoke type.<java.util.Iterator: java.lang.Object next()>(), 1224)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#14 = (java.lang.String) $stack39,1224,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#14 = (java.lang.String) $stack39, 1224)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#14 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14),1214,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#14 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1214)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,type = interfaceinvoke newTypes.<java.util.List: java.util.Iterator iterator()>(),1210,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, type = interfaceinvoke newTypes.<java.util.List: java.util.Iterator iterator()>(), 1210)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack39 = interfaceinvoke type.<java.util.Iterator: java.lang.Object next()>(),1224,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack39 = interfaceinvoke type.<java.util.Iterator: java.lang.Object next()>(), 1224)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#14 = (java.lang.String) $stack39,1224,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#14 = (java.lang.String) $stack39, 1224)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#14 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14),1214,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#14 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1214)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,nodeId = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>("@id"),1695,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, nodeId = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>('@id'), 1695)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi)>,this.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean explicit> = 0,1293,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke $stack6.<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>(this, $stack7), 1339) => (<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi)>(l1), 1300) => (<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi)>, this.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean explicit> = 0, 1293)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack31 = state.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean explicit>,1387,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack31 = state.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean explicit>, 1387)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, "@explicit", $stack31),1387,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, '@explicit', $stack31), 1387)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke $stack10.<java.util.Map: java.lang.Object get(java.lang.Object)>("@value"),1580,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),1573,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,$stack15 = (java.util.List) value,1576,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>, $stack15 = (java.util.List) value, 1576)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke $stack15.<java.util.List: java.lang.Object get(int)>(0),1576,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,list = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1478,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, list = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1478)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = value,356,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack61 = (java.util.Map) input,220,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack61 = (java.util.Map) input, 220)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack63 = interfaceinvoke $stack61.<java.util.Map: java.lang.Object get(java.lang.Object)>("@preserve"),220,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack63 = interfaceinvoke $stack61.<java.util.Map: java.lang.Object get(java.lang.Object)>('@preserve'), 220)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack147 = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop),1495,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack147 = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop), 1495)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack148 = (java.util.List) $stack147,1495,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack148 = (java.util.List) $stack147, 1495)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack149 = interfaceinvoke $stack148.<java.util.List: java.lang.Object get(int)>(0),1495,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack149 = interfaceinvoke $stack148.<java.util.List: java.lang.Object get(int)>(0), 1495)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,subframe = (java.util.Map) $stack149,1495,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, subframe = (java.util.Map) $stack149, 1495)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frameIds = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>("@id"),1688,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, frameIds = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>('@id'), 1688)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack9 = "@default",36,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>(key), 36)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune),240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune), 240)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,interfaceinvoke $stack33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(prop#7, i),249,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(prop#7, i), 249))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,e = $stack22,347,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>, e = $stack22, 347)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = e,348,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack33 = (java.util.Map) input,249,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack33 = (java.util.Map) input, 249)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack29 = "@preserve",39,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack30 = virtualinvoke $stack29.<java.lang.String: boolean equals(java.lang.Object)>(key), 39)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>,$stack58 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0),52,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>, $stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2), 96)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>,$stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2),96,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune),234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune), 234))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = e,348,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack55 = (java.util.Map) input,234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack55 = (java.util.Map) input, 234)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack58 = interfaceinvoke $stack55.<java.util.Map: java.lang.Object get(java.lang.Object)>("@list"),234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack58 = interfaceinvoke $stack55.<java.util.Map: java.lang.Object get(java.lang.Object)>('@list'), 234)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,rval = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1675,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,$stack19 = newarray (java.lang.Object)[0],346,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>, rval = virtualinvoke $stack18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(value, $stack19), 346)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = virtualinvoke $stack18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(value, $stack19),346,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack61 = (java.util.Map) input,220,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack61 = (java.util.Map) input, 220)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack63 = interfaceinvoke $stack61.<java.util.Map: java.lang.Object get(java.lang.Object)>("@preserve"),220,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack63 = interfaceinvoke $stack61.<java.util.Map: java.lang.Object get(java.lang.Object)>('@preserve'), 220)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,$stack25 = (java.lang.Boolean) value,1598,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, $stack25 = (java.lang.Boolean) value, 1598)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>,result = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),27,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, oldTypes#21 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@list', tmp$1364739835), 1112)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack39 = interfaceinvoke type.<java.util.Iterator: java.lang.Object next()>(),1224,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack39 = interfaceinvoke type.<java.util.Iterator: java.lang.Object next()>(), 1224)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#14 = (java.lang.String) $stack39,1224,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#14 = (java.lang.String) $stack39, 1224)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#14 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14),1214,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#14 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1214)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),1573,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,$stack15 = (java.util.List) value,1576,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>, $stack15 = (java.util.List) value, 1576)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke $stack15.<java.util.List: java.lang.Object get(int)>(0),1576,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,listitem#60 = flags,1520,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, listitem#60 = flags, 1520)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(),1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(), 1769)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,key#24 = (java.lang.String) $stack18,1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, key#24 = (java.lang.String) $stack18, 1769)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),1573,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,$stack15 = (java.util.List) value,1576,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>, $stack15 = (java.util.List) value, 1576)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke $stack15.<java.util.List: java.lang.Object get(int)>(0),1576,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>,$stack13 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1351,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, $stack13 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1351)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,rval = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1675,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>,$stack6 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getOmitDefault()>(),1308,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke $stack6.<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>(this, $stack7), 1339) => (<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>, $stack6 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getOmitDefault()>(), 1308)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>,$stack13 = (java.util.Map) $stack20,1351,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, $stack13 = (java.util.Map) $stack20, 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frameIds = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>("@id"),1688,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, frameIds = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>('@id'), 1688)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack145 = (java.util.List) element,1055,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack145 = (java.util.List) element, 1055)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,elem = interfaceinvoke $stack145.<java.util.List: java.util.Iterator iterator()>(),1055,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, elem = interfaceinvoke $stack145.<java.util.List: java.util.Iterator iterator()>(), 1055)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item = interfaceinvoke elem.<java.util.Iterator: java.lang.Object next()>(),1058,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item = interfaceinvoke elem.<java.util.Iterator: java.lang.Object next()>(), 1058)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,element := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,elem#3 = (java.util.Map) element,1062,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, elem#3 = (java.util.Map) element, 1062)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>("@reverse"),1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>('@reverse'), 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,type#63 = (java.util.Map) $stack61,1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, type#63 = (java.util.Map) $stack61, 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(),1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(), 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,property = (java.lang.String) $stack67,1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, property = (java.lang.String) $stack67, 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>,$stack20 = interfaceinvoke frame.<java.util.List: java.lang.Object get(int)>(0),1355,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, $stack20 = interfaceinvoke frame.<java.util.List: java.lang.Object get(int)>(0), 1355)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>,$stack13 = (java.util.Map) $stack20,1351,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, $stack13 = (java.util.Map) $stack20, 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(),1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(), 1769)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,key#24 = (java.lang.String) $stack18,1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, key#24 = (java.lang.String) $stack18, 1769)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,$stack25 = (java.lang.Boolean) value,1598,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, $stack25 = (java.lang.Boolean) value, 1598)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,propertyFrame#70 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1544,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, propertyFrame#70 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1544)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,props = $stack56,1532,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, props = $stack56, 1532)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,l18 = interfaceinvoke props.<java.util.List: java.util.Iterator iterator()>(),1534,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, l18 = interfaceinvoke props.<java.util.List: java.util.Iterator iterator()>(), 1534)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack62 = interfaceinvoke l18.<java.util.Iterator: java.lang.Object next()>(),1569,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack62 = interfaceinvoke l18.<java.util.Iterator: java.lang.Object next()>(), 1569)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,prop = (java.lang.String) $stack62,1569,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, prop = (java.lang.String) $stack62, 1569)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack33 = "@type",40,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack34 = virtualinvoke $stack33.<java.lang.String: boolean equals(java.lang.Object)>(key), 40)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getExplicit()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean explicit>,115,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke $stack6.<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>(this, $stack7), 1339) => (<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>, $stack4 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getExplicit()>(), 1304)) => Node(<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>,$stack8 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getExplicit()>(),1305,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke $stack6.<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>(this, $stack7), 1339) => (<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>, $stack8 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getExplicit()>(), 1305)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>,$stack13 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1351,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, $stack13 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1351)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,property#73 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object get(java.lang.Object)>(item#14),1211,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, property#73 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object get(java.lang.Object)>(item#14), 1211)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,element := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,elem#3 = (java.util.Map) element,1062,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, elem#3 = (java.util.Map) element, 1062)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>("@reverse"),1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>('@reverse'), 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,type#63 = (java.util.Map) $stack61,1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, type#63 = (java.util.Map) $stack61, 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(),1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(), 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,property = (java.lang.String) $stack67,1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, property = (java.lang.String) $stack67, 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke $stack10.<java.util.Map: java.lang.Object get(java.lang.Object)>("@value"),1580,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,tmp = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1487,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, tmp = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1487)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack147 = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop),1495,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack147 = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop), 1495)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack148 = (java.util.List) $stack147,1495,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack148 = (java.util.List) $stack147, 1495)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack149 = interfaceinvoke $stack148.<java.util.List: java.lang.Object get(int)>(0),1495,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack149 = interfaceinvoke $stack148.<java.util.List: java.lang.Object get(int)>(0), 1495)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,subframe = (java.util.Map) $stack149,1495,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, subframe = (java.util.Map) $stack149, 1495)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(),1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(), 1769)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,key#24 = (java.lang.String) $stack18,1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, key#24 = (java.lang.String) $stack18, 1769)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune),240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune), 240)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,interfaceinvoke $stack33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(prop#7, i),249,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(prop#7, i), 249))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = null,343,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack33 = (java.util.Map) input,249,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack33 = (java.util.Map) input, 249)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = e,348,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack61 = (java.util.Map) input,220,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack61 = (java.util.Map) input, 220)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack63 = interfaceinvoke $stack61.<java.util.Map: java.lang.Object get(java.lang.Object)>("@preserve"),220,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack63 = interfaceinvoke $stack61.<java.util.Map: java.lang.Object get(java.lang.Object)>('@preserve'), 220)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune),240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune), 240))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = e,348,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack25 = (java.util.Map) input,240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack25 = (java.util.Map) input, 240)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack26 = interfaceinvoke $stack25.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop#7),240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack26 = interfaceinvoke $stack25.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop#7), 240)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,flags = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1388,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, flags = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1388)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack33 = "@type",40,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack34 = virtualinvoke $stack33.<java.lang.String: boolean equals(java.lang.Object)>(key), 40)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune),240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune), 240))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = value,356,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack25 = (java.util.Map) input,240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack25 = (java.util.Map) input, 240)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack26 = interfaceinvoke $stack25.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop#7),240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack26 = interfaceinvoke $stack25.<java.util.Map: java.lang.Object get(java.lang.Object)>(prop#7), 240)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,l18 = interfaceinvoke props.<java.util.List: java.util.Iterator iterator()>(),1534,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, l18 = interfaceinvoke props.<java.util.List: java.util.Iterator iterator()>(), 1534)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack62 = interfaceinvoke l18.<java.util.Iterator: java.lang.Object next()>(),1569,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack62 = interfaceinvoke l18.<java.util.Iterator: java.lang.Object next()>(), 1569)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,prop = (java.lang.String) $stack62,1569,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, prop = (java.lang.String) $stack62, 1569)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack1 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean isString(java.lang.Object)>(key),32,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack1 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean isString(java.lang.Object)>(key), 32)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frameIds = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>("@id"),1688,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, frameIds = interfaceinvoke frame.<java.util.Map: java.lang.Object get(java.lang.Object)>('@id'), 1688)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,flags = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1388,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, flags = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1388)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#14 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14),1214,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#14 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1214)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,tmp = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1487,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, tmp = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1487)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack5 = virtualinvoke $stack4.<java.lang.String: boolean equals(java.lang.Object)>("json-ld-1.1"),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack5 = virtualinvoke $stack4.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1'), 131)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,if $stack5 == 0 goto $stack6 = 0,131,SinkNode, path: )
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack5 = virtualinvoke $stack4.<java.lang.String: boolean equals(java.lang.Object)>("json-ld-1.1"),131,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack5 = virtualinvoke $stack4.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1'), 131)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,if $stack5 == 0 goto $stack6 = 0,131,SinkNode, path: ), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack9 = "@default",36,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>(key), 36)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack26 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>("@id"),1127,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack26 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>('@id'), 1127)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,oldTypes#22 = (java.lang.String) $stack26,1127,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, oldTypes#22 = (java.lang.String) $stack26, 1127)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeGraph := @parameter2: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack20 = interfaceinvoke nodeMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(activeGraph),1068,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack20 = interfaceinvoke nodeMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(activeGraph), 1068)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#4 = (java.util.Map) $stack20,1068,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#4 = (java.util.Map) $stack20, 1068)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22),1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22), 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,node = (java.util.Map) $stack30,1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, node = (java.util.Map) $stack30, 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>("@index"),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>('@index'), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>,this.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean explicit> = $stack9,1305,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke $stack6.<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>(this, $stack7), 1339) => (<com.github.jsonldjava.core.JsonLdApi$FramingContext: void <init>(com.github.jsonldjava.core.JsonLdApi,com.github.jsonldjava.core.JsonLdOptions)>, this.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean explicit> = $stack9, 1305)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,$stack31 = state.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean explicit>,1387,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, $stack31 = state.<com.github.jsonldjava.core.JsonLdApi$FramingContext: boolean explicit>, 1387)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, "@explicit", $stack31),1387,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, explicitOn = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Boolean getFrameFlag(java.util.Map,java.lang.String,boolean)>(frame, '@explicit', $stack31), 1387)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,o = interfaceinvoke $stack53.<java.util.List: java.util.Iterator iterator()>(),1730,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, o = interfaceinvoke $stack53.<java.util.List: java.util.Iterator iterator()>(), 1730)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,j#15 = interfaceinvoke o.<java.util.Iterator: java.lang.Object next()>(),1735,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, j#15 = interfaceinvoke o.<java.util.Iterator: java.lang.Object next()>(), 1735)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15),1731,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15), 1731)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,list = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1478,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, list = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1478)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>,$stack13 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1351,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, $stack13 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1351)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = null,343,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack61 = (java.util.Map) input,220,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack61 = (java.util.Map) input, 220)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack63 = interfaceinvoke $stack61.<java.util.Map: java.lang.Object get(java.lang.Object)>("@preserve"),220,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack63 = interfaceinvoke $stack61.<java.util.Map: java.lang.Object get(java.lang.Object)>('@preserve'), 220)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,j#15 = interfaceinvoke o.<java.util.Iterator: java.lang.Object next()>(),1735,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, j#15 = interfaceinvoke o.<java.util.Iterator: java.lang.Object next()>(), 1735)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15),1731,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15), 1731)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,$stack5 = "@list",117,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101) => (<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>, $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>(key), 117)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>,result = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),27,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, oldTypes#21 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@list', tmp$1364739835), 1112)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,key#24 = (java.lang.String) $stack18,1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, key#24 = (java.lang.String) $stack18, 1769)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>,$stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),511,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune),240,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, i = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack26, opts, toPrune), 240)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,interfaceinvoke $stack33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(prop#7, i),249,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(prop#7, i), 249))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,$stack19 = newarray (java.lang.Object)[0],346,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>, rval = virtualinvoke $stack18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(value, $stack19), 346)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = virtualinvoke $stack18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(value, $stack19),346,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack33 = (java.util.Map) input,249,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack33 = (java.util.Map) input, 249)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,$stack20 = (java.lang.String) $stack19,1254,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,oldTypes#22 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(oldTypes#22),1130,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, oldTypes#22 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(oldTypes#22), 1130)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeGraph := @parameter2: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack20 = interfaceinvoke nodeMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(activeGraph),1068,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack20 = interfaceinvoke nodeMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(activeGraph), 1068)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#4 = (java.util.Map) $stack20,1068,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#4 = (java.util.Map) $stack20, 1068)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22),1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack30 = interfaceinvoke item#4.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldTypes#22), 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,node = (java.util.Map) $stack30,1167,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, node = (java.util.Map) $stack30, 1167)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>("@index"),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack79 = interfaceinvoke node.<java.util.Map: java.lang.Object get(java.lang.Object)>('@index'), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55),1178,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune),234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune), 234)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("@list", $stack59),233,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('@list', $stack59), 233))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,e = $stack22,347,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>, e = $stack22, 347)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = e,348,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack56 = (java.util.Map) input,234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack56 = (java.util.Map) input, 234)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("@list", $stack59),233,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('@list', $stack59), 233)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,output = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1411,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, output = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1411)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack1 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean isString(java.lang.Object)>(key),32,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack1 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean isString(java.lang.Object)>(key), 32)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack110 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object get(java.lang.Object)>("@list"),1118,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack110 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object get(java.lang.Object)>('@list'), 1118)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,element := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,elem#3 = (java.util.Map) element,1062,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, elem#3 = (java.util.Map) element, 1062)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>("@reverse"),1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack61 = interfaceinvoke elem#3.<java.util.Map: java.lang.Object remove(java.lang.Object)>('@reverse'), 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,type#63 = (java.util.Map) $stack61,1191,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, type#63 = (java.util.Map) $stack61, 1191)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack62 = interfaceinvoke type#63.<java.util.Map: java.util.Set keySet()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(),1193,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#64 = interfaceinvoke $stack62.<java.util.Set: java.util.Iterator iterator()>(), 1193)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(),1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack67 = interfaceinvoke item#64.<java.util.Iterator: java.lang.Object next()>(), 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,property = (java.lang.String) $stack67,1204,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, property = (java.lang.String) $stack67, 1204)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,$stack139 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1066,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack139 = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1066)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,toPrune = $stack35,341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, toPrune = $stack35, 341)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,toPrune := @parameter3: java.util.Set,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune),234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack59 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(ctx, $stack58, opts, toPrune), 234)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("@list", $stack59),233,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('@list', $stack59), 233))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>,rval = e,348,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame),307,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack20 = (java.util.Map) frame,328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack20 = (java.util.Map) frame, 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack22 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22),328,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, activeCtx = virtualinvoke $stack21.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>($stack22), 328)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(),338,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,input := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,$stack56 = (java.util.Map) input,234,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, $stack56 = (java.util.Map) input, 234)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>,interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("@list", $stack59),233,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('@list', $stack59), 233)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,output = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1411,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, output = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1411)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>,value = interfaceinvoke $stack15.<java.util.List: java.lang.Object get(int)>(0),1576,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,$stack25 = (java.lang.Boolean) value,1598,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, $stack25 = (java.lang.Boolean) value, 1598)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack23 = "@list",38,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack24 = virtualinvoke $stack23.<java.lang.String: boolean equals(java.lang.Object)>(key), 38)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>,$stack20 = (java.lang.String) $stack19,1254,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack132 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1085)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,item#14 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14),1214,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, item#14 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.String generateBlankNodeIdentifier(java.lang.String)>(item#14), 1214)) => Node(<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>,activeProperty := @parameter4: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(item, nodeMap, activeGraph, activeSubject, activeProperty, list), 1056)) => Node(<com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: void mergeValue(java.util.Map,java.lang.String,java.lang.Object)>(node, activeProperty, elem#3), 1101)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,key = interfaceinvoke $stack36.<java.util.List: java.util.Iterator iterator()>(),1729,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, key = interfaceinvoke $stack36.<java.util.List: java.util.Iterator iterator()>(), 1729)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,j = interfaceinvoke key.<java.util.Iterator: java.lang.Object next()>(),1740,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, j = interfaceinvoke key.<java.util.Iterator: java.lang.Object next()>(), 1740)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15),1731,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15), 1731)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,subframe = flags,1497,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, subframe = flags, 1497)) => Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351)) => Node(<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,frame := @parameter2: java.util.Map,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(),1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(), 1769)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,key#24 = (java.lang.String) $stack18,1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, key#24 = (java.lang.String) $stack18, 1769)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack29 = "@preserve",39,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack30 = virtualinvoke $stack29.<java.lang.String: boolean equals(java.lang.Object)>(key), 39)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, "@embed"),1594,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, value = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object getFrameValue(java.util.Map,java.lang.String)>(frame, '@embed'), 1594)) => Node(<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>,l4 = (java.lang.String) value,1604,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, embed = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>(frame, $stack29), 1386) => (<com.github.jsonldjava.core.JsonLdApi: com.github.jsonldjava.core.JsonLdConsts$Embed getFrameEmbed(java.util.Map,com.github.jsonldjava.core.JsonLdConsts$Embed)>, l4 = (java.lang.String) value, 1604)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>,list = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(),1510,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, list = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap()>(), 1510)) => Node(<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>,$stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,118,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, compacted = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>(activeCtx, null, framed, $stack27), 331) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object compact(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object,boolean)>, compactedValue#8 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>(activeProperty, result#7), 193) => (<com.github.jsonldjava.core.Context: java.lang.Object compactValue(java.lang.String,java.util.Map)>, $stack18 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 118)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>,1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1143,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, rval = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1143)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,$stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(),1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, $stack22 = interfaceinvoke rval.<java.util.Iterator: java.lang.Object next()>(), 1180)) => Node(<com.github.jsonldjava.core.Context: java.util.Map serialize()>,term = (java.lang.String) $stack22,1180,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, rval = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.util.Map serialize()>(), 338) => (<com.github.jsonldjava.core.Context: java.util.Map serialize()>, term = (java.lang.String) $stack22, 1180)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>,$stack29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0),86,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>, $stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2), 96)) => Node(<com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>,$stack3 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object,java.lang.Boolean)>(v1, v2, $stack2),96,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>(input, nodes), 1343) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map)>, virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>(element, nodeMap, '@default', null, null, null), 1041) => (<com.github.jsonldjava.core.JsonLdApi: void generateNodeMap(java.lang.Object,java.util.Map,java.lang.String,java.lang.Object,java.lang.String,java.util.Map)>, $stack80 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>($stack79, newTypes#55), 1178)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds),1698,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack81 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(nodeId, frameIds), 1698)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(),1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(), 1769)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,key#24 = (java.lang.String) $stack18,1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, key#24 = (java.lang.String) $stack18, 1769)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,$stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(),341,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = interfaceinvoke frame.<java.util.Map: java.util.Set keySet()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),1746,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, nodeId#19 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 1746)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,$stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(),1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack18 = interfaceinvoke nodeId#19.<java.util.Iterator: java.lang.Object next()>(), 1769)) => Node(<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>,key#24 = (java.lang.String) $stack18,1769,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, key#24 = (java.lang.String) $stack18, 1769)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,key := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack515 = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>(activeProperty), 527) => (<com.github.jsonldjava.core.Context: java.lang.String getContainer(java.lang.String)>, $stack5 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(property), 1053)) => Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack1 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean isString(java.lang.Object)>(key),32,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack1 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean isString(java.lang.Object)>(key), 32)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)), SOURCE=>BASE: Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>,$stack29 = "@preserve",39,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack30 = virtualinvoke $stack29.<java.lang.String: boolean equals(java.lang.Object)>(key), 39)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, tmp#12 = virtualinvoke tmp#12.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>(exCtx), 144) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>(localContext, $stack2), 286) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List)>, $stack3 = specialinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(localContext, remoteContexts, 0), 142) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(remoteContext#71), 275)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982))]
Confluence interference in <com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>
Confluence flows from execution of lines 341 and 329 to line 312, defined in $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>() and framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame) and used in expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts)
Caused by line 341 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341)
Caused by line 329 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, framed = virtualinvoke api.<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>(expandedInput, expandedFrame), 329) => (<com.github.jsonldjava.core.JsonLdApi: java.util.List frame(java.lang.Object,java.util.List)>, specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>(state, $stack12, $stack13, framed, null), 1351) => (<com.github.jsonldjava.core.JsonLdApi: void frame(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map,java.lang.Object,java.lang.String)>, matches = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, nodes, frame), 1395) => (<com.github.jsonldjava.core.JsonLdApi: java.util.Map filterNodes(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack15 = specialinvoke this.<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>(state, element, frame), 1681) => (<com.github.jsonldjava.core.JsonLdApi: boolean filterNode(com.github.jsonldjava.core.JsonLdApi$FramingContext,java.util.Map,java.util.Map)>, $stack58 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Boolean deepCompare(java.lang.Object,java.lang.Object)>(j, j#15), 1731)
Caused by line 312 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, expandedProperty = virtualinvoke activeCtx.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>(key, 0, 1, null, null), 564) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack52 = virtualinvoke $stack51.<java.lang.Boolean: boolean booleanValue()>(), 525)
Confluence interference in <com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>
Confluence flows from execution of lines 312 and 312 to line 312, defined in expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts) and expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts) and used in expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts)
Caused by line 312 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)
Caused by line 312 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack486 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>(expandedProperty), 575) => (<com.github.jsonldjava.core.JsonLdUtils: boolean isKeyword(java.lang.Object)>, $stack24 = virtualinvoke $stack23.<java.lang.String: boolean equals(java.lang.Object)>(key), 38)
Caused by line 312 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, frameExpansion = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>('json-ld-1.1-expand-frame'), 511) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)
Confluence interference in <com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>
Confluence flows from execution of lines 341 and 307 to line 342, defined in $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() and frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame) and used in staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune)
Caused by line 341 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>(), 341)
Caused by line 307 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, frame = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object clone(java.lang.Object)>(frame), 307)
Caused by line 342 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, staticinvoke <com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>(activeCtx, rval, opts, toPrune), 342) => (<com.github.jsonldjava.core.JsonLdUtils: java.lang.Object removePreserveAndPrune(com.github.jsonldjava.core.Context,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions,java.util.Set)>, interfaceinvoke $stack56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('@list', $stack59), 233)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jsonld-java/67ce1f47c7e559fb636cf7c5a1cd2d5950990156/original-without-dependencies/jsonld-java-0.11.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,72300
Runtime: 0.824s
Time to perform OA Inter 2,01000
OA Inter Visited methods: 1282
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jsonld-java/67ce1f47c7e559fb636cf7c5a1cd2d5950990156/original-without-dependencies/jsonld-java-0.11.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,66300
Time to perform DFP Inter 19,21200
Depth limit: 5
CONFLICTS: DF interference in <com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>
Data flows from execution of line 312 to 316, defined in $stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode> and propagated in savedProcessingMode = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>()
Caused by line 312 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)
Caused by line 316 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, savedProcessingMode = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 316)
DF interference in <com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>
Data flows from execution of line 312 to 318, defined in $stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode> and propagated in this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode> = processingMode
Caused by line 312 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)
Caused by line 318 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: void setProcessingMode(java.lang.String)>('json-ld-1.1-expand-frame'), 318) => (<com.github.jsonldjava.core.JsonLdOptions: void setProcessingMode(java.lang.String)>, this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode> = processingMode, 162)
DF interference in <com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>
Data flows from execution of line 312 to 321, defined in $stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode> and propagated in virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: void setProcessingMode(java.lang.String)>(savedProcessingMode)
Caused by line 312 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)
Caused by line 321 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: void setProcessingMode(java.lang.String)>(savedProcessingMode), 321)
DF interference in <com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,savedProcessingMode = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),316,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, savedProcessingMode = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 316)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: void setProcessingMode(java.lang.String)>(savedProcessingMode),321,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: void setProcessingMode(java.lang.String)>(savedProcessingMode), 321))), List(Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,savedProcessingMode = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),316,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, savedProcessingMode = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 316)) => Node(<com.github.jsonldjava.core.JsonLdOptions: void setProcessingMode(java.lang.String)>,processingMode := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: void setProcessingMode(java.lang.String)>('json-ld-1.1-expand-frame'), 318) => (<com.github.jsonldjava.core.JsonLdOptions: void setProcessingMode(java.lang.String)>, this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode> = processingMode, 162)) => Node(<com.github.jsonldjava.core.JsonLdOptions: void setProcessingMode(java.lang.String)>,this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode> = processingMode,162,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: void setProcessingMode(java.lang.String)>('json-ld-1.1-expand-frame'), 318) => (<com.github.jsonldjava.core.JsonLdOptions: void setProcessingMode(java.lang.String)>, this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode> = processingMode, 162))), List(Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,return $stack1,158,SinkNode, path: )), List(Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>,savedProcessingMode = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),316,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, savedProcessingMode = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 316)))]
Visited methods: 125
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jsonld-java/67ce1f47c7e559fb636cf7c5a1cd2d5950990156/original-without-dependencies/jsonld-java-0.11.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,63800
Time to perform DFP Inter 20,38400
Depth limit: 5
CONFLICTS: DF interference in <com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>
Data flows from execution of line 312 to 341, defined in $stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode> and propagated in $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>()
Caused by line 312 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)
Caused by line 341 flow: path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)
DF interference in <com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,return $stack1,158,SinkNode, path: )), List(Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String processingMode>,158,SourceNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, expandedInput = staticinvoke <com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>(input, opts), 312) => (<com.github.jsonldjava.core.JsonLdProcessor: java.util.List expand(java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, exCtx = virtualinvoke $stack8.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>(tmp#12, input), 152) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.Object)>, $stack3 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>(activeCtx, null, element), 1029) => (<com.github.jsonldjava.core.JsonLdApi: java.lang.Object expand(com.github.jsonldjava.core.Context,java.lang.String,java.lang.Object)>, $stack20 = virtualinvoke $stack19.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 511)) => Node(<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>,$stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(),131,SinkNode, path: (<com.github.jsonldjava.core.JsonLdProcessor: java.util.Map frame(java.lang.Object,java.lang.Object,com.github.jsonldjava.core.JsonLdOptions)>, $stack33 = virtualinvoke opts.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>(), 341) => (<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getPruneBlankNodeIdentifiers()>, $stack4 = virtualinvoke this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getProcessingMode()>(), 131)))]
Visited methods: 127
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jsonld-java/67ce1f47c7e559fb636cf7c5a1cd2d5950990156/original-without-dependencies/jsonld-java-0.11.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,42300
Time to perform PDG 0,90600
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jsonld-java/67ce1f47c7e559fb636cf7c5a1cd2d5950990156/original-without-dependencies/jsonld-java-0.11.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,44000
Time to perform PDG 0,87400
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
