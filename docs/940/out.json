[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 982
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 982
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack8 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean equals(java.lang.Object)>",
					"line": 982
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack10 = lengthof l1,198,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack10 = lengthof l1, 198)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack10 = lengthof l1,198,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack10 = lengthof l1, 198))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1969
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 198
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1969
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 198
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack10 = lengthof l1",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: void <init>(char[],int,int)>",
					"line": 198
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 981
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 985
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 988
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 984
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 988
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack14 = l4[l6]",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean equals(java.lang.Object)>",
					"line": 988
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 981
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 985
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 981
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 985
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l5 = l2.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean equals(java.lang.Object)>",
					"line": 985
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 984
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 984
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l4 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean equals(java.lang.Object)>",
					"line": 984
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2876
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1967
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1967
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3)",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String substring(int,int)>",
					"line": 1967
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack4 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String trim()>",
					"line": 2868
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2876
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 196
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 196
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3)",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: void <init>(char[],int,int)>",
					"line": 196
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2876
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l3 = l2 - l1",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String substring(int,int)>",
					"line": 1965
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack4 = lengthof l1,204,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack4 = lengthof l1, 204)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack4 = lengthof l1,204,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack4 = lengthof l1, 204))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1969
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 204
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1969
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 204
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack4 = lengthof l1",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: void <init>(char[],int,int)>",
					"line": 204
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1963,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1963)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1963,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1963))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2876
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1963
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1963
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2)",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String substring(int,int)>",
					"line": 1963
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 982
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 982
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 987
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 982
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 982
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 987
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l3 = l3 + -1",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean equals(java.lang.Object)>",
					"line": 987
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 981
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 981
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l2 = (java.lang.String) l1",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean equals(java.lang.Object)>",
					"line": 981
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 980
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 980
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack7 = l1 instanceof java.lang.String",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean equals(java.lang.Object)>",
					"line": 980
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2876
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 207
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 207
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 207
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6)",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: void <init>(char[],int,int)>",
					"line": 207
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2876
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2876
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l1 = l1 + -1",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String trim()>",
					"line": 2876
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack10 = lengthof $stack9,983,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack10 = lengthof $stack9, 983))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 981
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 983
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 983
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 981
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equals(java.lang.Object)>",
	"line": 983
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack9 = l2.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean equals(java.lang.Object)>",
					"line": 983
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack8 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1969))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1969
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1969
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack7 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String substring(int,int)>",
					"line": 1969
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack5 = l0,2878,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l3 = l0.<java.lang.String: char[] value>,2870,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l3 = l0.<java.lang.String: char[] value>, 2870)) => Node(<java.lang.String: java.lang.String trim()>,$stack12 = l3[$stack11],2878,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack12 = l3[$stack11], 2878))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2870
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2878
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2878
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack5 = l0",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String trim()>",
					"line": 2878
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1962
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1962
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack4 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String substring(int,int)>",
					"line": 1962
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l3 = l0.<java.lang.String: char[] value>,2870,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l3 = l0.<java.lang.String: char[] value>, 2870)) => Node(<java.lang.String: java.lang.String trim()>,$stack16 = l3[l2],2875,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack16 = l3[l2], 2875)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l3 = l0.<java.lang.String: char[] value>,2870,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l3 = l0.<java.lang.String: char[] value>, 2870)) => Node(<java.lang.String: java.lang.String trim()>,$stack16 = l3[l2],2875,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack16 = l3[l2], 2875))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2870
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2875
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2870
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2875
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack16 = l3[l2]",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String trim()>",
					"line": 2875
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack9 = l2 + l3,205,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack9 = l2 + l3, 205)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack9 = l2 + l3,205,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack9 = l2 + l3, 205)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($stack9),205,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($stack9), 205))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2876
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 205
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 205
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>()",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.PgDiffViews",
					"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
					"line": 82
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2868
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 205
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack9 = l2 + l3",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: void <init>(char[],int,int)>",
					"line": 205
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l3 = l0.<java.lang.String: char[] value>,2870,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l3 = l0.<java.lang.String: char[] value>, 2870)) SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l3 = l0.<java.lang.String: char[] value>,2870,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l3 = l0.<java.lang.String: char[] value>, 2870))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2870
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
				"location": {
					"file": "",
					"class": "cz.startnet.utils.pgdiff.schema.PgView",
					"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
					"line": 178
				},
				"stackTrace": [{
	"class": "cz.startnet.utils.pgdiff.schema.PgView",
	"method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
	"line": 178
},{
	"class": "cz.startnet.utils.pgdiff.PgDiffViews",
	"method": "<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>",
	"line": 82
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2870
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l3 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String trim()>",
					"line": 2870
				}
			}
		]
	}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
"location": {
  "file": "",
  "class": "cz.startnet.utils.pgdiff.schema.PgView",
  "method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
  "line": "178"
},
"stackTrace": ["(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "cz.startnet.utils.pgdiff.schema.PgView",
  "method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
  "line": "178"
},
"stackTrace": [""]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>",
"location": {
  "file": "",
  "class": "cz.startnet.utils.pgdiff.schema.PgView",
  "method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
  "line": "178"
},
"stackTrace": ["(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "cz.startnet.utils.pgdiff.schema.PgView",
  "method": "<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>",
  "line": "178"
},
"stackTrace": [""]
}]
}
}

]
