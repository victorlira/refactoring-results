SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack4 = lengthof l1,204,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack4 = lengthof l1, 204))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack4 = lengthof l1,204,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack4 = lengthof l1, 204))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack10 = lengthof l1,198,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack10 = lengthof l1, 198))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack10 = lengthof l1,198,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack10 = lengthof l1, 198))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack9 = l2 + l3,205,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack9 = l2 + l3, 205))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack9 = l2 + l3,205,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack9 = l2 + l3, 205)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($stack9),205,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($stack9), 205))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack10 = lengthof $stack9,983,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack10 = lengthof $stack9, 983))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack4 = lengthof l1,204,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack4 = lengthof l1, 204))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack4 = lengthof l1,204,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack4 = lengthof l1, 204))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack5 = l0,2878,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l3 = l0.<java.lang.String: char[] value>,2870,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l3 = l0.<java.lang.String: char[] value>, 2870)) => Node(<java.lang.String: java.lang.String trim()>,$stack12 = l3[$stack11],2878,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack12 = l3[$stack11], 2878))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1963,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1963))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1963,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1963))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack10 = lengthof $stack9,983,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack10 = lengthof $stack9, 983))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack10 = lengthof l1,198,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack10 = lengthof l1, 198))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack10 = lengthof l1,198,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack10 = lengthof l1, 198))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack8 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1969))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l3 = l0.<java.lang.String: char[] value>,2870,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l3 = l0.<java.lang.String: char[] value>, 2870)) => Node(<java.lang.String: java.lang.String trim()>,$stack16 = l3[l2],2875,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack16 = l3[l2], 2875))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l3 = l0.<java.lang.String: char[] value>,2870,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l3 = l0.<java.lang.String: char[] value>, 2870)) => Node(<java.lang.String: java.lang.String trim()>,$stack16 = l3[l2],2875,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack16 = l3[l2], 2875))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1963,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1963))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1963,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1963))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l3 = l0.<java.lang.String: char[] value>,2870,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l3 = l0.<java.lang.String: char[] value>, 2870))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l3 = l0.<java.lang.String: char[] value>,2870,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l3 = l0.<java.lang.String: char[] value>, 2870))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack7 = virtualinvoke $stack6.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack8 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1969))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack5 = l0,2878,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l3 = l0.<java.lang.String: char[] value>,2870,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l3 = l0.<java.lang.String: char[] value>, 2870)) => Node(<java.lang.String: java.lang.String trim()>,$stack12 = l3[$stack11],2878,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack12 = l3[$stack11], 2878))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l3 = l0.<java.lang.String: char[] value>,2870,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l3 = l0.<java.lang.String: char[] value>, 2870)) => Node(<java.lang.String: java.lang.String trim()>,$stack16 = l3[l2],2875,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack16 = l3[l2], 2875))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l3 = l0.<java.lang.String: char[] value>,2870,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l3 = l0.<java.lang.String: char[] value>, 2870)) => Node(<java.lang.String: java.lang.String trim()>,$stack16 = l3[l2],2875,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack16 = l3[l2], 2875))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack9 = l2 + l3,205,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack9 = l2 + l3, 205))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,$stack4 = l0.<java.lang.String: char[] value>,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack4 = l0.<java.lang.String: char[] value>, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = lengthof $stack4,2868,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l1 = lengthof $stack4, 2868)) => Node(<java.lang.String: java.lang.String trim()>,l1 = l1 + -1,2876,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack11 = l1 - 1, 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack9 = l2 + l3,205,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack9 = l2 + l3, 205)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($stack9),205,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1), 2878) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($stack9), 205))

SOURCE=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l3 = l0.<java.lang.String: char[] value>,2870,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l3 = l0.<java.lang.String: char[] value>, 2870))
SINK=>BASE: Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack6 = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<java.lang.String: java.lang.String trim()>,l3 = l0.<java.lang.String: char[] value>,2870,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82) => (<java.lang.String: java.lang.String trim()>, l3 = l0.<java.lang.String: char[] value>, 2870))

List(Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,return $stack1,178,SinkNode, path: ))

List(Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,$stack1 = this.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String query>,178,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack4 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>(), 82)) => Node(<cz.startnet.utils.pgdiff.schema.PgView: java.lang.String getQuery()>,return $stack1,178,SinkNode, path: ))

List(Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if $stack8 != 0 goto $stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(),82,SourceNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(),85,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(), 85)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if $stack9 == $stack10 goto oldViewColumnNames = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(),85,SinkNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,newViewColumnNames = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(),91,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, newViewColumnNames = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(), 91)))

List(Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if $stack8 != 0 goto $stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(),82,SourceNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(),85,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(), 85)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if $stack9 == $stack10 goto oldViewColumnNames = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(),85,SinkNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,oldViewColumnNames = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(),89,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, oldViewColumnNames = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(), 89)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if oldViewColumnNames == null goto (branch),93,SinkNode, path: ))

List(Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if $stack8 != 0 goto $stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(),82,SourceNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(),85,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(), 85)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if $stack9 == $stack10 goto oldViewColumnNames = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(),85,SinkNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,newViewColumnNames = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(),91,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, newViewColumnNames = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(), 91)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if newViewColumnNames == null goto (branch),97,SinkNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if oldViewColumnNames == newViewColumnNames goto $stack13 = 0,97,SinkNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack13 = 1,97,SinkNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack13 = 0,97,SinkNode, path: ))

List(Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if $stack8 != 0 goto $stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(),82,SourceNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(),85,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(), 85)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if $stack9 == $stack10 goto oldViewColumnNames = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(),85,SinkNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,oldViewColumnNames = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(),89,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, oldViewColumnNames = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(), 89)))

List(Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if $stack8 != 0 goto $stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(),82,SourceNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(),85,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(), 85)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if $stack9 == $stack10 goto oldViewColumnNames = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(),85,SinkNode, path: ))

List(Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String trim()>(), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7),82,SourceNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7), 82)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if $stack8 != 0 goto $stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(),82,SourceNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(),85,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack9 = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: boolean isMaterialized()>(), 85)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if $stack9 == $stack10 goto oldViewColumnNames = virtualinvoke oldView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(),85,SinkNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,newViewColumnNames = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(),91,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, newViewColumnNames = virtualinvoke newView.<cz.startnet.utils.pgdiff.schema.PgView: java.util.List getDeclaredColumnNames()>(), 91)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if newViewColumnNames == null goto (branch),97,SinkNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,$stack16 = interfaceinvoke oldViewColumnNames.<java.util.List: boolean equals(java.lang.Object)>(newViewColumnNames),94,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>, $stack16 = interfaceinvoke oldViewColumnNames.<java.util.List: boolean equals(java.lang.Object)>(newViewColumnNames), 94)) => Node(<cz.startnet.utils.pgdiff.PgDiffViews: boolean isViewModified(cz.startnet.utils.pgdiff.schema.PgView,cz.startnet.utils.pgdiff.schema.PgView)>,if $stack16 != 0 goto $stack17 = 0,94,SinkNode, path: ))

