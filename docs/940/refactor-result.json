[
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Invert Condition\tif(oldViewColumnNames == null && newViewColumnNames == null) to if(oldViewColumnNames != null && newViewColumnNames != null) in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 93,
      "endLine": 98,
      "startColumn": 9,
      "endColumn": 10,
      "codeElementType": "IF_STATEMENT",
      "description": "inverted conditional",
      "codeElement": "if(oldViewColumnNames != null && newViewColumnNames != null)"
    },
    "line": "97"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Invert Condition\tif(oldViewColumnNames == null && newViewColumnNames == null) to if(oldViewColumnNames != null && newViewColumnNames != null) in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 93,
      "endLine": 98,
      "startColumn": 9,
      "endColumn": 10,
      "codeElementType": "IF_STATEMENT",
      "description": "inverted conditional",
      "codeElement": "if(oldViewColumnNames != null && newViewColumnNames != null)"
    },
    "line": "94"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Invert Condition\tif(oldViewColumnNames == null && newViewColumnNames == null) to if(oldViewColumnNames != null && newViewColumnNames != null) in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 93,
      "endLine": 98,
      "startColumn": 9,
      "endColumn": 10,
      "codeElementType": "IF_STATEMENT",
      "description": "inverted conditional",
      "codeElement": "if(oldViewColumnNames != null && newViewColumnNames != null)"
    },
    "line": "93"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Invert Condition\tif(oldViewColumnNames == null && newViewColumnNames == null) to if(oldViewColumnNames != null && newViewColumnNames != null) in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 71,
      "endLine": 99,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with inverted conditional",
      "codeElement": "private isViewModified(oldView PgView, newView PgView) : boolean"
    },
    "line": "91"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Invert Condition\tif(oldViewColumnNames == null && newViewColumnNames == null) to if(oldViewColumnNames != null && newViewColumnNames != null) in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 71,
      "endLine": 99,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with inverted conditional",
      "codeElement": "private isViewModified(oldView PgView, newView PgView) : boolean"
    },
    "line": "90"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Invert Condition\tif(oldViewColumnNames == null && newViewColumnNames == null) to if(oldViewColumnNames != null && newViewColumnNames != null) in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 71,
      "endLine": 99,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with inverted conditional",
      "codeElement": "private isViewModified(oldView PgView, newView PgView) : boolean"
    },
    "line": "89"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Invert Condition\tif(oldViewColumnNames == null && newViewColumnNames == null) to if(oldViewColumnNames != null && newViewColumnNames != null) in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 71,
      "endLine": 99,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with inverted conditional",
      "codeElement": "private isViewModified(oldView PgView, newView PgView) : boolean"
    },
    "line": "88"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Invert Condition\tif(oldViewColumnNames == null && newViewColumnNames == null) to if(oldViewColumnNames != null && newViewColumnNames != null) in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 71,
      "endLine": 99,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with inverted conditional",
      "codeElement": "private isViewModified(oldView PgView, newView PgView) : boolean"
    },
    "line": "85"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Invert Condition\tif(oldViewColumnNames == null && newViewColumnNames == null) to if(oldViewColumnNames != null && newViewColumnNames != null) in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 71,
      "endLine": 99,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with inverted conditional",
      "codeElement": "private isViewModified(oldView PgView, newView PgView) : boolean"
    },
    "line": "83"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Invert Condition\tif(oldViewColumnNames == null && newViewColumnNames == null) to if(oldViewColumnNames != null && newViewColumnNames != null) in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 71,
      "endLine": 99,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with inverted conditional",
      "codeElement": "private isViewModified(oldView PgView, newView PgView) : boolean"
    },
    "line": "82"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Invert Condition\tif(oldViewColumnNames == null && newViewColumnNames == null) to if(oldViewColumnNames != null && newViewColumnNames != null) in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 71,
      "endLine": 99,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with inverted conditional",
      "codeElement": "private isViewModified(oldView PgView, newView PgView) : boolean"
    },
    "line": "97"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Invert Condition\tif(oldViewColumnNames == null && newViewColumnNames == null) to if(oldViewColumnNames != null && newViewColumnNames != null) in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 71,
      "endLine": 99,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with inverted conditional",
      "codeElement": "private isViewModified(oldView PgView, newView PgView) : boolean"
    },
    "line": "94"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Invert Condition\tif(oldViewColumnNames == null && newViewColumnNames == null) to if(oldViewColumnNames != null && newViewColumnNames != null) in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 71,
      "endLine": 99,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with inverted conditional",
      "codeElement": "private isViewModified(oldView PgView, newView PgView) : boolean"
    },
    "line": "93"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Change Variable Type\toldViewColumnNames : String[] to oldViewColumnNames : List<String> in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 88,
      "endLine": 89,
      "startColumn": 28,
      "endColumn": 49,
      "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
      "description": "changed-type variable declaration",
      "codeElement": "oldViewColumnNames : List<String>"
    },
    "line": "89"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Change Variable Type\toldViewColumnNames : String[] to oldViewColumnNames : List<String> in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 88,
      "endLine": 89,
      "startColumn": 28,
      "endColumn": 49,
      "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
      "description": "changed-type variable declaration",
      "codeElement": "oldViewColumnNames : List<String>"
    },
    "line": "88"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Change Variable Type\toldViewColumnNames : String[] to oldViewColumnNames : List<String> in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 94,
      "endLine": 94,
      "startColumn": 13,
      "endColumn": 67,
      "codeElementType": "RETURN_STATEMENT",
      "description": "statement referencing the variable with changed type",
      "codeElement": null
    },
    "line": "94"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Change Variable Type\toldViewColumnNames : String[] to oldViewColumnNames : List<String> in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 93,
      "endLine": 98,
      "startColumn": 9,
      "endColumn": 10,
      "codeElementType": "IF_STATEMENT",
      "description": "statement referencing the variable with changed type",
      "codeElement": null
    },
    "line": "97"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Change Variable Type\toldViewColumnNames : String[] to oldViewColumnNames : List<String> in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 93,
      "endLine": 98,
      "startColumn": 9,
      "endColumn": 10,
      "codeElementType": "IF_STATEMENT",
      "description": "statement referencing the variable with changed type",
      "codeElement": null
    },
    "line": "94"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Change Variable Type\toldViewColumnNames : String[] to oldViewColumnNames : List<String> in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 93,
      "endLine": 98,
      "startColumn": 9,
      "endColumn": 10,
      "codeElementType": "IF_STATEMENT",
      "description": "statement referencing the variable with changed type",
      "codeElement": null
    },
    "line": "93"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Change Variable Type\tnewViewColumnNames : String[] to newViewColumnNames : List<String> in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 90,
      "endLine": 91,
      "startColumn": 28,
      "endColumn": 49,
      "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
      "description": "changed-type variable declaration",
      "codeElement": "newViewColumnNames : List<String>"
    },
    "line": "91"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Change Variable Type\tnewViewColumnNames : String[] to newViewColumnNames : List<String> in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 90,
      "endLine": 91,
      "startColumn": 28,
      "endColumn": 49,
      "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
      "description": "changed-type variable declaration",
      "codeElement": "newViewColumnNames : List<String>"
    },
    "line": "90"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Change Variable Type\tnewViewColumnNames : String[] to newViewColumnNames : List<String> in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 94,
      "endLine": 94,
      "startColumn": 13,
      "endColumn": 67,
      "codeElementType": "RETURN_STATEMENT",
      "description": "statement referencing the variable with changed type",
      "codeElement": null
    },
    "line": "94"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Change Variable Type\tnewViewColumnNames : String[] to newViewColumnNames : List<String> in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 93,
      "endLine": 98,
      "startColumn": 9,
      "endColumn": 10,
      "codeElementType": "IF_STATEMENT",
      "description": "statement referencing the variable with changed type",
      "codeElement": null
    },
    "line": "97"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Change Variable Type\tnewViewColumnNames : String[] to newViewColumnNames : List<String> in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 93,
      "endLine": 98,
      "startColumn": 9,
      "endColumn": 10,
      "codeElementType": "IF_STATEMENT",
      "description": "statement referencing the variable with changed type",
      "codeElement": null
    },
    "line": "94"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Change Variable Type\tnewViewColumnNames : String[] to newViewColumnNames : List<String> in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 93,
      "endLine": 98,
      "startColumn": 9,
      "endColumn": 10,
      "codeElementType": "IF_STATEMENT",
      "description": "statement referencing the variable with changed type",
      "codeElement": null
    },
    "line": "93"
  },
  {
    "branch": "R",
    "class": "cz.startnet.utils.pgdiff.PgDiffViews",
    "tool": "ReExtractorPlus",
    "refactoringInfo": "Change Variable Type\toldViewColumnNames : String[] to oldViewColumnNames : List<String> in method private isViewModified(oldView PgView, newView PgView) : boolean from class cz.startnet.utils.pgdiff.PgDiffViews",
    "description": {
      "filePath": "src/main/java/cz/startnet/utils/pgdiff/PgDiffViews.java",
      "startLine": 82,
      "endLine": 82,
      "startColumn": 24,
      "endColumn": 42,
      "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
      "description": "changed-type variable declaration",
      "codeElement": "oldViewColumnNames : List<String>"
    },
    "line": "82"
  }
]