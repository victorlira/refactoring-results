Running soot scenario swagger-maven-plugin;com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader;parseMethod(Method);79e35180ae729f232c33cc856e32ed00986b6846
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/swagger-maven-plugin/79e35180ae729f232c33cc856e32ed00986b6846/original-without-dependencies/swagger-maven-plugin-3.1.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,55200
Time to perform Confluence 1 Inter 1,75000
Configure Soot Confluence 2 Inter 0,30800
Time to perform Confluence 2 Inter 1,22800
Visited methods: 56
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,auth = extension#19[map#21],204,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack212 = interfaceinvoke auth.<io.swagger.annotations.Authorization: java.lang.String value()>(),191,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack212 = interfaceinvoke auth.<io.swagger.annotations.Authorization: java.lang.String value()>(), 191)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack213 = virtualinvoke $stack212.<java.lang.String: boolean isEmpty()>(),191,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack213 = virtualinvoke $stack212.<java.lang.String: boolean isEmpty()>(), 191))
SINK=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,auth = extension#19[map#21],204,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack212 = interfaceinvoke auth.<io.swagger.annotations.Authorization: java.lang.String value()>(),191,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack212 = interfaceinvoke auth.<io.swagger.annotations.Authorization: java.lang.String value()>(), 191)), SOURCE=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>(),306,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>(), 306)) => Node(<java.lang.String: boolean isEmpty()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158)) => Node(<java.lang.String: boolean isEmpty()>,$stack1 = l0.<java.lang.String: char[] value>,635,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158) => (<java.lang.String: boolean isEmpty()>, $stack1 = l0.<java.lang.String: char[] value>, 635))
SINK=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack189 = interfaceinvoke apiOperation.<io.swagger.annotations.ApiOperation: io.swagger.annotations.ResponseHeader[] responseHeaders()>(),162,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack189 = interfaceinvoke apiOperation.<io.swagger.annotations.ApiOperation: io.swagger.annotations.ResponseHeader[] responseHeaders()>(), 162)) => Node(<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>,headers := @parameter0: io.swagger.annotations.ResponseHeader[],-1,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, defaultResponseHeaders = virtualinvoke this.<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>($stack189), 162)) => Node(<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>,l3 = headers,157,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, defaultResponseHeaders = virtualinvoke this.<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>($stack189), 162) => (<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>, l3 = headers, 157)) => Node(<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>,header = l3[l5],183,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, defaultResponseHeaders = virtualinvoke this.<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>($stack189), 162) => (<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>, header = l3[l5], 183)) => Node(<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>,$stack10 = interfaceinvoke header.<io.swagger.annotations.ResponseHeader: java.lang.String name()>(),158,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, defaultResponseHeaders = virtualinvoke this.<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>($stack189), 162) => (<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>, $stack10 = interfaceinvoke header.<io.swagger.annotations.ResponseHeader: java.lang.String name()>(), 158)) => Node(<java.lang.String: boolean isEmpty()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158)) => Node(<java.lang.String: boolean isEmpty()>,$stack1 = l0.<java.lang.String: char[] value>,635,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158) => (<java.lang.String: boolean isEmpty()>, $stack1 = l0.<java.lang.String: char[] value>, 635)), SOURCE=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>(),306,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>(), 306)) => Node(<java.lang.String: boolean isEmpty()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158)) => Node(<java.lang.String: boolean isEmpty()>,$stack1 = l0.<java.lang.String: char[] value>,635,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158) => (<java.lang.String: boolean isEmpty()>, $stack1 = l0.<java.lang.String: char[] value>, 635))
SINK=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>,header = l3[l5],183,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, defaultResponseHeaders = virtualinvoke this.<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>($stack189), 162) => (<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>, header = l3[l5], 183)) => Node(<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>,$stack10 = interfaceinvoke header.<io.swagger.annotations.ResponseHeader: java.lang.String name()>(),158,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, defaultResponseHeaders = virtualinvoke this.<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>($stack189), 162) => (<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>, $stack10 = interfaceinvoke header.<io.swagger.annotations.ResponseHeader: java.lang.String name()>(), 158)) => Node(<java.lang.String: boolean isEmpty()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158)) => Node(<java.lang.String: boolean isEmpty()>,$stack1 = l0.<java.lang.String: char[] value>,635,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158) => (<java.lang.String: boolean isEmpty()>, $stack1 = l0.<java.lang.String: char[] value>, 635)), SOURCE=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,auth = extension#19[map#21],204,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack217 = interfaceinvoke auth.<io.swagger.annotations.Authorization: java.lang.String value()>(),193,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack217 = interfaceinvoke auth.<io.swagger.annotations.Authorization: java.lang.String value()>(), 193))
SINK=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,auth = extension#19[map#21],204,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack217 = interfaceinvoke auth.<io.swagger.annotations.Authorization: java.lang.String value()>(),193,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack217 = interfaceinvoke auth.<io.swagger.annotations.Authorization: java.lang.String value()>(), 193)), SOURCE=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,auth = extension#19[map#21],204,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(),194,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(), 194)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameterNames = lengthof parameterNameDiscoverer,194,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameterNames = lengthof parameterNameDiscoverer, 194))
SINK=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,auth = extension#19[map#21],204,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(),194,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(), 194)), SOURCE=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>(),306,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>(), 306)) => Node(<java.lang.String: boolean isEmpty()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158)) => Node(<java.lang.String: boolean isEmpty()>,$stack1 = l0.<java.lang.String: char[] value>,635,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158) => (<java.lang.String: boolean isEmpty()>, $stack1 = l0.<java.lang.String: char[] value>, 635))
SINK=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,auth = extension#19[map#21],204,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(),194,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(), 194)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,scope = parameterNameDiscoverer[i],190,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, scope = parameterNameDiscoverer[i], 190)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack220 = interfaceinvoke scope.<io.swagger.annotations.AuthorizationScope: java.lang.String scope()>(),195,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack220 = interfaceinvoke scope.<io.swagger.annotations.AuthorizationScope: java.lang.String scope()>(), 195)) => Node(<java.lang.String: boolean isEmpty()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158)) => Node(<java.lang.String: boolean isEmpty()>,$stack1 = l0.<java.lang.String: char[] value>,635,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158) => (<java.lang.String: boolean isEmpty()>, $stack1 = l0.<java.lang.String: char[] value>, 635)), SOURCE=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,auth = extension#19[map#21],204,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(),194,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(), 194)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,scope = parameterNameDiscoverer[i],190,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, scope = parameterNameDiscoverer[i], 190)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack224 = interfaceinvoke scope.<io.swagger.annotations.AuthorizationScope: java.lang.String scope()>(),196,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack224 = interfaceinvoke scope.<io.swagger.annotations.AuthorizationScope: java.lang.String scope()>(), 196))
SINK=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,auth = extension#19[map#21],204,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(),194,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(), 194)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,scope = parameterNameDiscoverer[i],190,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, scope = parameterNameDiscoverer[i], 190)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack224 = interfaceinvoke scope.<io.swagger.annotations.AuthorizationScope: java.lang.String scope()>(),196,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack224 = interfaceinvoke scope.<io.swagger.annotations.AuthorizationScope: java.lang.String scope()>(), 196)), SOURCE=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>(),306,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>(), 306)) => Node(<java.lang.String: boolean isEmpty()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158)) => Node(<java.lang.String: boolean isEmpty()>,$stack1 = l0.<java.lang.String: char[] value>,635,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158) => (<java.lang.String: boolean isEmpty()>, $stack1 = l0.<java.lang.String: char[] value>, 635))
SINK=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>,l3 = headers,157,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, defaultResponseHeaders = virtualinvoke this.<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>($stack189), 162) => (<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>, l3 = headers, 157)) => Node(<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>,header = l3[l5],183,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, defaultResponseHeaders = virtualinvoke this.<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>($stack189), 162) => (<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>, header = l3[l5], 183)) => Node(<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>,$stack10 = interfaceinvoke header.<io.swagger.annotations.ResponseHeader: java.lang.String name()>(),158,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, defaultResponseHeaders = virtualinvoke this.<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>($stack189), 162) => (<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>, $stack10 = interfaceinvoke header.<io.swagger.annotations.ResponseHeader: java.lang.String name()>(), 158)) => Node(<java.lang.String: boolean isEmpty()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158)) => Node(<java.lang.String: boolean isEmpty()>,$stack1 = l0.<java.lang.String: char[] value>,635,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158) => (<java.lang.String: boolean isEmpty()>, $stack1 = l0.<java.lang.String: char[] value>, 635)), SOURCE=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>(),306,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>(), 306)) => Node(<java.lang.String: boolean isEmpty()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158)) => Node(<java.lang.String: boolean isEmpty()>,$stack1 = l0.<java.lang.String: char[] value>,635,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158) => (<java.lang.String: boolean isEmpty()>, $stack1 = l0.<java.lang.String: char[] value>, 635))
SINK=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>,$stack10 = interfaceinvoke header.<io.swagger.annotations.ResponseHeader: java.lang.String name()>(),158,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, defaultResponseHeaders = virtualinvoke this.<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>($stack189), 162) => (<com.github.kongchen.swagger.docgen.reader.AbstractReader: java.util.Map parseResponseHeaders(io.swagger.annotations.ResponseHeader[])>, $stack10 = interfaceinvoke header.<io.swagger.annotations.ResponseHeader: java.lang.String name()>(), 158)) => Node(<java.lang.String: boolean isEmpty()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158)) => Node(<java.lang.String: boolean isEmpty()>,$stack1 = l0.<java.lang.String: char[] value>,635,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158) => (<java.lang.String: boolean isEmpty()>, $stack1 = l0.<java.lang.String: char[] value>, 635)), SOURCE=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,auth = extension#19[map#21],204,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(),194,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(), 194)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,scope = parameterNameDiscoverer[i],190,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, scope = parameterNameDiscoverer[i], 190)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack220 = interfaceinvoke scope.<io.swagger.annotations.AuthorizationScope: java.lang.String scope()>(),195,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack220 = interfaceinvoke scope.<io.swagger.annotations.AuthorizationScope: java.lang.String scope()>(), 195))
SINK=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,auth = extension#19[map#21],204,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(),194,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(), 194)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,scope = parameterNameDiscoverer[i],190,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, scope = parameterNameDiscoverer[i], 190)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack220 = interfaceinvoke scope.<io.swagger.annotations.AuthorizationScope: java.lang.String scope()>(),195,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack220 = interfaceinvoke scope.<io.swagger.annotations.AuthorizationScope: java.lang.String scope()>(), 195)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack221 = virtualinvoke $stack220.<java.lang.String: boolean isEmpty()>(),195,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack221 = virtualinvoke $stack220.<java.lang.String: boolean isEmpty()>(), 195)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,if $stack221 != 0 goto i = i + 1,195,SinkNode, path: ), SOURCE=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,auth = extension#19[map#21],204,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(),194,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(), 194)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,scope = parameterNameDiscoverer[i],190,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, scope = parameterNameDiscoverer[i], 190))
SINK=>BASE: Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,auth = extension#19[map#21],204,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(),194,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(), 194)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,scope = parameterNameDiscoverer[i],190,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, scope = parameterNameDiscoverer[i], 190))]
Confluence interference in <com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>
Confluence flows from execution of lines 204 and 204 to line 191, defined in auth = extension#19[map#21] and auth = extension#19[map#21] and used in $stack212 = interfaceinvoke auth.<io.swagger.annotations.Authorization: java.lang.String value()>()
Caused by line 204 flow: path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)
Caused by line 204 flow: path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)
Caused by line 191 flow: path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack212 = interfaceinvoke auth.<io.swagger.annotations.Authorization: java.lang.String value()>(), 191)
Confluence interference in <com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>
Confluence flows from execution of lines 306 and 162 to line 158, defined in $stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>() and $stack189 = interfaceinvoke apiOperation.<io.swagger.annotations.ApiOperation: io.swagger.annotations.ResponseHeader[] responseHeaders()>() and used in $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>()
Caused by line 306 flow: path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>(), 306)
Caused by line 162 flow: path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack189 = interfaceinvoke apiOperation.<io.swagger.annotations.ApiOperation: io.swagger.annotations.ResponseHeader[] responseHeaders()>(), 162)
Caused by line 158 flow: path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack188 = virtualinvoke $stack187.<java.lang.String: boolean isEmpty()>(), 158) => (<java.lang.String: boolean isEmpty()>, $stack1 = l0.<java.lang.String: char[] value>, 635)
Confluence interference in <com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>
Confluence flows from execution of lines 204 and 204 to line 193, defined in auth = extension#19[map#21] and auth = extension#19[map#21] and used in $stack217 = interfaceinvoke auth.<io.swagger.annotations.Authorization: java.lang.String value()>()
Caused by line 204 flow: path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)
Caused by line 204 flow: path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)
Caused by line 193 flow: path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack217 = interfaceinvoke auth.<io.swagger.annotations.Authorization: java.lang.String value()>(), 193)
Confluence interference in <com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>
Confluence flows from execution of lines 204 and 204 to line 194, defined in auth = extension#19[map#21] and auth = extension#19[map#21] and used in parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>()
Caused by line 204 flow: path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)
Caused by line 204 flow: path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)
Caused by line 194 flow: path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameterNameDiscoverer = interfaceinvoke auth.<io.swagger.annotations.Authorization: io.swagger.annotations.AuthorizationScope[] scopes()>(), 194)
Confluence interference in <com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>
Confluence flows from execution of lines 204 and 204 to line 196, defined in auth = extension#19[map#21] and auth = extension#19[map#21] and used in $stack224 = interfaceinvoke scope.<io.swagger.annotations.AuthorizationScope: java.lang.String scope()>()
Caused by line 204 flow: path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)
Caused by line 204 flow: path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, auth = extension#19[map#21], 204)
Caused by line 196 flow: path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack224 = interfaceinvoke scope.<io.swagger.annotations.AuthorizationScope: java.lang.String scope()>(), 196)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/swagger-maven-plugin/79e35180ae729f232c33cc856e32ed00986b6846/original-without-dependencies/swagger-maven-plugin-3.1.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,65000
Runtime: 0.033s
OA interference in class SpringMvcApiReader, method io.swagger.models.Operation parseMethod(java.lang.reflect.Method), execution of line 204 overrides 204, assigning to variable auth, 
Caused by line 204 flow:
at com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader.parseMethod(SpringMvcApiReader.java:204)
And line 204 flow:
at com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader.parseMethod(SpringMvcApiReader.java:204)
 
Time to perform OA Inter 0,76500
OA Inter Visited methods: 59
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/swagger-maven-plugin/79e35180ae729f232c33cc856e32ed00986b6846/original-without-dependencies/swagger-maven-plugin-3.1.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,66400
Time to perform DFP Inter 1,23500
Depth limit: 5
CONFLICTS: []
Visited methods: 28
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/swagger-maven-plugin/79e35180ae729f232c33cc856e32ed00986b6846/original-without-dependencies/swagger-maven-plugin-3.1.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,51800
Time to perform DFP Inter 1,30700
Depth limit: 5
CONFLICTS: []
Visited methods: 28
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/swagger-maven-plugin/79e35180ae729f232c33cc856e32ed00986b6846/original-without-dependencies/swagger-maven-plugin-3.1.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,75900
Time to perform PDG 1,09900
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/swagger-maven-plugin/79e35180ae729f232c33cc856e32ed00986b6846/original-without-dependencies/swagger-maven-plugin-3.1.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,74700
Time to perform PDG 1,15700
CONFLICTS: [List(Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,if $stack186 == 0 goto $stack187 = interfaceinvoke apiOperation.<io.swagger.annotations.ApiOperation: java.lang.String nickname()>(),155,SourceNode, path: ) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameterNames#149 = virtualinvoke parameterNameDiscoverer#148.<org.springframework.core.DefaultParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>(method),297,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameterNames#149 = virtualinvoke parameterNameDiscoverer#148.<org.springframework.core.DefaultParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>(method), 297))), List(Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,if $stack186 == 0 goto $stack187 = interfaceinvoke apiOperation.<io.swagger.annotations.ApiOperation: java.lang.String nickname()>(),155,SourceNode, path: ) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack46 = lengthof map#145,300,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack46 = lengthof map#145, 300)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,if i >= $stack46 goto $stack47 = virtualinvoke operation.<io.swagger.models.Operation: java.util.Map getResponses()>(),300,SimpleNode, path: ) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack62 = interfaceinvoke l25.<java.util.Iterator: boolean hasNext()>(),305,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack62 = interfaceinvoke l25.<java.util.Iterator: boolean hasNext()>(), 305)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,if $stack62 == 0 goto i = i + 1,305,SimpleNode, path: ) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack65 = interfaceinvoke l25.<java.util.Iterator: java.lang.Object next()>(),300,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack65 = interfaceinvoke l25.<java.util.Iterator: java.lang.Object next()>(), 300)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameter = (io.swagger.models.parameters.Parameter) $stack65,300,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameter = (io.swagger.models.parameters.Parameter) $stack65, 300)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>(),306,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>(), 306))), List(Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,if apiOperation == null goto (branch),154,SourceNode, path: ) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameterNames#149 = virtualinvoke parameterNameDiscoverer#148.<org.springframework.core.DefaultParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>(method),297,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameterNames#149 = virtualinvoke parameterNameDiscoverer#148.<org.springframework.core.DefaultParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>(method), 297))), List(Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,if $stack186 == 0 goto $stack187 = interfaceinvoke apiOperation.<io.swagger.annotations.ApiOperation: java.lang.String nickname()>(),155,SourceNode, path: ) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,specialinvoke tmp$733156437.<org.springframework.core.DefaultParameterNameDiscoverer: void <init>()>(),296,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, specialinvoke tmp$733156437.<org.springframework.core.DefaultParameterNameDiscoverer: void <init>()>(), 296))), List(Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,if apiOperation == null goto (branch),154,SourceNode, path: ) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,if i >= $stack46 goto $stack47 = virtualinvoke operation.<io.swagger.models.Operation: java.util.Map getResponses()>(),300,SimpleNode, path: ) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack62 = interfaceinvoke l25.<java.util.Iterator: boolean hasNext()>(),305,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack62 = interfaceinvoke l25.<java.util.Iterator: boolean hasNext()>(), 305)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,if $stack62 == 0 goto i = i + 1,305,SimpleNode, path: ) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack65 = interfaceinvoke l25.<java.util.Iterator: java.lang.Object next()>(),300,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack65 = interfaceinvoke l25.<java.util.Iterator: java.lang.Object next()>(), 300)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameter = (io.swagger.models.parameters.Parameter) $stack65,300,SimpleNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameter = (io.swagger.models.parameters.Parameter) $stack65, 300)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>(),306,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack66 = interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: java.lang.String getName()>(), 306))), List(Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,if $stack186 == 0 goto $stack187 = interfaceinvoke apiOperation.<io.swagger.annotations.ApiOperation: java.lang.String nickname()>(),155,SourceNode, path: ) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameterNames#149 = virtualinvoke parameterNameDiscoverer#148.<org.springframework.core.DefaultParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>(method),297,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameterNames#149 = virtualinvoke parameterNameDiscoverer#148.<org.springframework.core.DefaultParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>(method), 297)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack70 = parameterNames#149[i],307,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack70 = parameterNames#149[i], 307)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: void setName(java.lang.String)>($stack70),307,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: void setName(java.lang.String)>($stack70), 307))), List(Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,if apiOperation == null goto (branch),154,SourceNode, path: ) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack186 = interfaceinvoke apiOperation.<io.swagger.annotations.ApiOperation: boolean hidden()>(),155,SourceNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack186 = interfaceinvoke apiOperation.<io.swagger.annotations.ApiOperation: boolean hidden()>(), 155)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,if $stack186 == 0 goto $stack187 = interfaceinvoke apiOperation.<io.swagger.annotations.ApiOperation: java.lang.String nickname()>(),155,SourceNode, path: ) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,specialinvoke tmp$733156437.<org.springframework.core.DefaultParameterNameDiscoverer: void <init>()>(),296,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, specialinvoke tmp$733156437.<org.springframework.core.DefaultParameterNameDiscoverer: void <init>()>(), 296))), List(Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,if apiOperation == null goto (branch),154,SourceNode, path: ) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,parameterNames#149 = virtualinvoke parameterNameDiscoverer#148.<org.springframework.core.DefaultParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>(method),297,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, parameterNames#149 = virtualinvoke parameterNameDiscoverer#148.<org.springframework.core.DefaultParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>(method), 297)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,$stack70 = parameterNames#149[i],307,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, $stack70 = parameterNames#149[i], 307)) => Node(<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>,interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: void setName(java.lang.String)>($stack70),307,SinkNode, path: (<com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader: io.swagger.models.Operation parseMethod(java.lang.reflect.Method)>, interfaceinvoke parameter.<io.swagger.models.parameters.Parameter: void setName(java.lang.String)>($stack70), 307)))]
 Analysis results
----------------------------
 Number of conflicts: 8
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
