SOURCE=>BASE: Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>,$stack35 = interfaceinvoke projects.<java.util.List: int size()>(),153,SourceNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack35 = interfaceinvoke projects.<java.util.List: int size()>(), 153)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831))
SINK=>BASE: Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: int getStatus()>,$stack1 = this.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: int status>,420,SourceNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, $stack42 = virtualinvoke task.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: int getStatus()>(), 283)) => Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>,$stack54 = virtualinvoke task.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: int getStatus()>(),269,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, $stack54 = virtualinvoke task.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: int getStatus()>(), 269)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831))

SOURCE=>BASE: Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>,$stack41 = interfaceinvoke projects.<java.util.List: int size()>(),147,SourceNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack41 = interfaceinvoke projects.<java.util.List: int size()>(), 147)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832))
SINK=>BASE: Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: int getStatus()>,$stack1 = this.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: int status>,420,SourceNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, $stack42 = virtualinvoke task.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: int getStatus()>(), 283)) => Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>,$stack54 = virtualinvoke task.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: int getStatus()>(),269,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, $stack54 = virtualinvoke task.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: int getStatus()>(), 269)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832))

SOURCE=>BASE: Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>,$stack41 = interfaceinvoke projects.<java.util.List: int size()>(),147,SourceNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack41 = interfaceinvoke projects.<java.util.List: int size()>(), 147)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832))
SINK=>BASE: Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>,$stack69 = this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: int retryDuration>,261,SourceNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, $stack69 = this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: int retryDuration>, 261)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832))

SOURCE=>BASE: Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>,$stack41 = interfaceinvoke projects.<java.util.List: int size()>(),147,SourceNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack41 = interfaceinvoke projects.<java.util.List: int size()>(), 147)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850))
SINK=>BASE: Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: int getStatus()>,$stack1 = this.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: int status>,420,SourceNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, $stack42 = virtualinvoke task.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: int getStatus()>(), 283)) => Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>,$stack54 = virtualinvoke task.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: int getStatus()>(),269,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, $stack54 = virtualinvoke task.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: int getStatus()>(), 269)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850))

SOURCE=>BASE: Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>,$stack35 = interfaceinvoke projects.<java.util.List: int size()>(),153,SourceNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack35 = interfaceinvoke projects.<java.util.List: int size()>(), 153)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831))
SINK=>BASE: Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>,$stack69 = this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: int retryDuration>,261,SourceNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, $stack69 = this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: int retryDuration>, 261)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831))

SOURCE=>BASE: Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>,$stack41 = interfaceinvoke projects.<java.util.List: int size()>(),147,SourceNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack41 = interfaceinvoke projects.<java.util.List: int size()>(), 147)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850))
SINK=>BASE: Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>,$stack69 = this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: int retryDuration>,261,SourceNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, $stack69 = this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: int retryDuration>, 261)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41), 147) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850))

List(Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator: int access$000(org.commonjava.maven.ext.io.rest.DefaultTranslator)>,$stack1 = x0.<org.commonjava.maven.ext.io.rest.DefaultTranslator: int initialRestMinSize>,51,SourceNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, $stack12 = virtualinvoke task.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: boolean canSplit()>(), 256) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: boolean canSplit()>, $stack4 = staticinvoke <org.commonjava.maven.ext.io.rest.DefaultTranslator: int access$000(org.commonjava.maven.ext.io.rest.DefaultTranslator)>($stack3), 415)) => Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: java.util.List split()>,$stack22 = staticinvoke <org.commonjava.maven.ext.io.rest.DefaultTranslator: int access$000(org.commonjava.maven.ext.io.rest.DefaultTranslator)>($stack19),407,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, tasks = virtualinvoke task.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: java.util.List split()>(), 266) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: java.util.List split()>, $stack22 = staticinvoke <org.commonjava.maven.ext.io.rest.DefaultTranslator: int access$000(org.commonjava.maven.ext.io.rest.DefaultTranslator)>($stack19), 407)) => Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: java.util.List split()>,$stack23 = $stack21 * $stack22,407,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, tasks = virtualinvoke task.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: java.util.List split()>(), 266) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: java.util.List split()>, $stack23 = $stack21 * $stack22, 407)) => Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: java.util.List split()>,$stack24 = interfaceinvoke $stack17.<java.util.List: java.util.List subList(int,int)>($stack20, $stack23),407,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, tasks = virtualinvoke task.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: java.util.List split()>(), 266) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: java.util.List split()>, $stack24 = interfaceinvoke $stack17.<java.util.List: java.util.List subList(int,int)>($stack20, $stack23), 407)) => Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: void <init>(org.commonjava.maven.ext.io.rest.DefaultTranslator,org.commonjava.maven.ext.io.rest.mapper.ReportGAVMapper,java.util.List,java.lang.String)>,chunk := @parameter2: java.util.List,-1,SimpleNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, specialinvoke $stack17.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: void <init>(org.commonjava.maven.ext.io.rest.DefaultTranslator,org.commonjava.maven.ext.io.rest.mapper.ReportGAVMapper,java.util.List,java.lang.String)>(this, $stack19, p, $stack23), 165)) => Node(<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: void <init>(org.commonjava.maven.ext.io.rest.DefaultTranslator,org.commonjava.maven.ext.io.rest.mapper.ReportGAVMapper,java.util.List,java.lang.String)>,this.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: java.util.List chunk> = chunk,354,SinkNode, path: (<org.commonjava.maven.ext.io.rest.DefaultTranslator: java.util.Map translateVersions(java.util.List)>, virtualinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>(projects, queue), 244) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void partition(java.util.List,java.util.Queue)>, specialinvoke this.<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>(projects, queue), 109) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator: void autoPartition(java.util.List,java.util.Queue)>, specialinvoke $stack17.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: void <init>(org.commonjava.maven.ext.io.rest.DefaultTranslator,org.commonjava.maven.ext.io.rest.mapper.ReportGAVMapper,java.util.List,java.lang.String)>(this, $stack19, p, $stack23), 165) => (<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: void <init>(org.commonjava.maven.ext.io.rest.DefaultTranslator,org.commonjava.maven.ext.io.rest.mapper.ReportGAVMapper,java.util.List,java.lang.String)>, this.<org.commonjava.maven.ext.io.rest.DefaultTranslator$Task: java.util.List chunk> = chunk, 354)))

