Running soot scenario graphhopper;com.graphhopper.GraphHopper;load(String);e75674036ef293242027d66366ff74826bc9805a
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/graphhopper/e75674036ef293242027d66366ff74826bc9805a/original-without-dependencies/graphhopper-0.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,69800
Time to perform Confluence 1 Inter 5,44600
Configure Soot Confluence 2 Inter 0,21100
Time to perform Confluence 2 Inter 4,47600
Visited methods: 244
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,$stack26 = pos + 1,51,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack26 = pos + 1, 51)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,className = virtualinvoke entry.<java.lang.String: java.lang.String substring(int)>($stack26),51,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, className = virtualinvoke entry.<java.lang.String: java.lang.String substring(int)>($stack26), 51)) => Node(<java.lang.Class: java.lang.Class forName(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<java.lang.Class: java.lang.Class forName(java.lang.String)>,$stack5 = staticinvoke <java.lang.Class: java.lang.Class forName0(java.lang.String,boolean,java.lang.ClassLoader,java.lang.Class)>(l0, 1, $stack4, l1),264,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className),59,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack17 = virtualinvoke cls.<java.lang.Class: java.lang.Object newInstance()>(), 60)) => Node(<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack17 = virtualinvoke cls.<java.lang.Class: java.lang.Object newInstance()>(), 60) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642))
SINK=>BASE: Node(<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>,$stack7 = this.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.AbstractFlagEncoder[] encoders>,167,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack7 = this.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.AbstractFlagEncoder[] encoders>, 167)) => Node(<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>,$stack8 = $stack7[i],167,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack8 = $stack7[i], 167)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)), SOURCE=>BASE: Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,l3 = entries,46,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, l3 = entries, 46)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,entry = l3[l5],65,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, entry = l3[l5], 65)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, $stack5 = staticinvoke <com.graphhopper.util.Helper: boolean isEmpty(java.lang.String)>(graphHopperFolder), 373) => (<com.graphhopper.util.Helper: boolean isEmpty(java.lang.String)>, $stack1 = virtualinvoke strOsm.<java.lang.String: java.lang.String trim()>(), 186)) => Node(<java.lang.String: java.lang.String trim()>,$stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1),2878,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, $stack5 = staticinvoke <com.graphhopper.util.Helper: boolean isEmpty(java.lang.String)>(graphHopperFolder), 373) => (<com.graphhopper.util.Helper: boolean isEmpty(java.lang.String)>, $stack1 = virtualinvoke strOsm.<java.lang.String: java.lang.String trim()>(), 186)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,entry = virtualinvoke entry.<java.lang.String: java.lang.String trim()>(),47,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, entry = virtualinvoke entry.<java.lang.String: java.lang.String trim()>(), 47)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,pos = virtualinvoke entry.<java.lang.String: int indexOf(java.lang.String)>(":"),49,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, pos = virtualinvoke entry.<java.lang.String: int indexOf(java.lang.String)>(':'), 49)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,$stack26 = pos + 1,51,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack26 = pos + 1, 51)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,className = virtualinvoke entry.<java.lang.String: java.lang.String substring(int)>($stack26),51,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, className = virtualinvoke entry.<java.lang.String: java.lang.String substring(int)>($stack26), 51)) => Node(<java.lang.Class: java.lang.Class forName(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<java.lang.Class: java.lang.Class forName(java.lang.String)>,$stack5 = staticinvoke <java.lang.Class: java.lang.Class forName0(java.lang.String,boolean,java.lang.ClassLoader,java.lang.Class)>(l0, 1, $stack4, l1),264,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className),59,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack17 = virtualinvoke cls.<java.lang.Class: java.lang.Object newInstance()>(), 60)) => Node(<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack17 = virtualinvoke cls.<java.lang.Class: java.lang.Object newInstance()>(), 60) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236))
SINK=>BASE: Node(<com.graphhopper.GraphHopper: boolean load(java.lang.String)>,$stack50 = this.<com.graphhopper.GraphHopper: com.graphhopper.routing.util.AcceptWay acceptWay>,407,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, $stack50 = this.<com.graphhopper.GraphHopper: com.graphhopper.routing.util.AcceptWay acceptWay>, 407)) => Node(<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>,this := @this: com.graphhopper.routing.util.AcceptWay,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407)) => Node(<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>,this := @this: com.graphhopper.routing.util.AcceptWay,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175)) => Node(<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>,$stack7 = this.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.AbstractFlagEncoder[] encoders>,167,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack7 = this.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.AbstractFlagEncoder[] encoders>, 167)) => Node(<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>,$stack8 = $stack7[i],167,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack8 = $stack7[i], 167)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)), SOURCE=>BASE: Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,$stack26 = pos + 1,51,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack26 = pos + 1, 51)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,className = virtualinvoke entry.<java.lang.String: java.lang.String substring(int)>($stack26),51,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, className = virtualinvoke entry.<java.lang.String: java.lang.String substring(int)>($stack26), 51)) => Node(<java.lang.Class: java.lang.Class forName(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<java.lang.Class: java.lang.Class forName(java.lang.String)>,$stack5 = staticinvoke <java.lang.Class: java.lang.Class forName0(java.lang.String,boolean,java.lang.ClassLoader,java.lang.Class)>(l0, 1, $stack4, l1),264,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className),59,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack17 = virtualinvoke cls.<java.lang.Class: java.lang.Object newInstance()>(), 60)) => Node(<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack17 = virtualinvoke cls.<java.lang.Class: java.lang.Object newInstance()>(), 60) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642))
SINK=>BASE: Node(<com.graphhopper.GraphHopper: boolean load(java.lang.String)>,$stack50 = this.<com.graphhopper.GraphHopper: com.graphhopper.routing.util.AcceptWay acceptWay>,407,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, $stack50 = this.<com.graphhopper.GraphHopper: com.graphhopper.routing.util.AcceptWay acceptWay>, 407)) => Node(<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>,this := @this: com.graphhopper.routing.util.AcceptWay,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407)) => Node(<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>,this := @this: com.graphhopper.routing.util.AcceptWay,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175)) => Node(<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>,$stack7 = this.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.AbstractFlagEncoder[] encoders>,167,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack7 = this.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.AbstractFlagEncoder[] encoders>, 167)) => Node(<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>,$stack8 = $stack7[i],167,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack8 = $stack7[i], 167)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)), SOURCE=>BASE: Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,l3 = entries,46,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, l3 = entries, 46)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,entry = l3[l5],65,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, entry = l3[l5], 65)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, $stack5 = staticinvoke <com.graphhopper.util.Helper: boolean isEmpty(java.lang.String)>(graphHopperFolder), 373) => (<com.graphhopper.util.Helper: boolean isEmpty(java.lang.String)>, $stack1 = virtualinvoke strOsm.<java.lang.String: java.lang.String trim()>(), 186)) => Node(<java.lang.String: java.lang.String trim()>,$stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1),2878,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, $stack5 = staticinvoke <com.graphhopper.util.Helper: boolean isEmpty(java.lang.String)>(graphHopperFolder), 373) => (<com.graphhopper.util.Helper: boolean isEmpty(java.lang.String)>, $stack1 = virtualinvoke strOsm.<java.lang.String: java.lang.String trim()>(), 186)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,entry = virtualinvoke entry.<java.lang.String: java.lang.String trim()>(),47,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, entry = virtualinvoke entry.<java.lang.String: java.lang.String trim()>(), 47)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,pos = virtualinvoke entry.<java.lang.String: int indexOf(java.lang.String)>(":"),49,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, pos = virtualinvoke entry.<java.lang.String: int indexOf(java.lang.String)>(':'), 49)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,$stack26 = pos + 1,51,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack26 = pos + 1, 51)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,className = virtualinvoke entry.<java.lang.String: java.lang.String substring(int)>($stack26),51,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, className = virtualinvoke entry.<java.lang.String: java.lang.String substring(int)>($stack26), 51)) => Node(<java.lang.Class: java.lang.Class forName(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<java.lang.Class: java.lang.Class forName(java.lang.String)>,$stack5 = staticinvoke <java.lang.Class: java.lang.Class forName0(java.lang.String,boolean,java.lang.ClassLoader,java.lang.Class)>(l0, 1, $stack4, l1),264,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className),59,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack17 = virtualinvoke cls.<java.lang.Class: java.lang.Object newInstance()>(), 60)) => Node(<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack17 = virtualinvoke cls.<java.lang.Class: java.lang.Object newInstance()>(), 60) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236))
SINK=>BASE: Node(<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>,$stack7 = this.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.AbstractFlagEncoder[] encoders>,167,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack7 = this.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.AbstractFlagEncoder[] encoders>, 167)) => Node(<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>,$stack8 = $stack7[i],167,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack8 = $stack7[i], 167)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236))]
Confluence interference in <com.graphhopper.GraphHopper: boolean load(java.lang.String)>
Confluence flows from execution of lines 432 and 407 to line 407, defined in specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22) and encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>() and used in encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>()
Caused by line 432 flow: path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack26 = pos + 1, 51)
Caused by line 407 flow: path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack7 = this.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.AbstractFlagEncoder[] encoders>, 167)
Caused by line 407 flow: path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/graphhopper/e75674036ef293242027d66366ff74826bc9805a/original-without-dependencies/graphhopper-0.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,81200
Runtime: 0.05s
Time to perform OA Inter 1,15300
OA Inter Visited methods: 128
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/graphhopper/e75674036ef293242027d66366ff74826bc9805a/original-without-dependencies/graphhopper-0.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,80000
Time to perform DFP Inter 3,98000
Depth limit: 5
CONFLICTS: []
Visited methods: 122
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/graphhopper/e75674036ef293242027d66366ff74826bc9805a/original-without-dependencies/graphhopper-0.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,80500
Time to perform DFP Inter 3,99400
Depth limit: 5
CONFLICTS: []
Visited methods: 122
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/graphhopper/e75674036ef293242027d66366ff74826bc9805a/original-without-dependencies/graphhopper-0.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,56200
Time to perform PDG 0,99100
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/graphhopper/e75674036ef293242027d66366ff74826bc9805a/original-without-dependencies/graphhopper-0.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,53000
Time to perform PDG 1,13100
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
