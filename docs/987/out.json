[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,$stack26 = pos + 1,51,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack26 = pos + 1, 51)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,className = virtualinvoke entry.<java.lang.String: java.lang.String substring(int)>($stack26),51,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, className = virtualinvoke entry.<java.lang.String: java.lang.String substring(int)>($stack26), 51)) => Node(<java.lang.Class: java.lang.Class forName(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<java.lang.Class: java.lang.Class forName(java.lang.String)>,$stack5 = staticinvoke <java.lang.Class: java.lang.Class forName0(java.lang.String,boolean,java.lang.ClassLoader,java.lang.Class)>(l0, 1, $stack4, l1),264,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className),59,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack17 = virtualinvoke cls.<java.lang.Class: java.lang.Object newInstance()>(), 60)) => Node(<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack17 = virtualinvoke cls.<java.lang.Class: java.lang.Object newInstance()>(), 60) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) SINK=>BASE: Node(<com.graphhopper.GraphHopper: boolean load(java.lang.String)>,$stack50 = this.<com.graphhopper.GraphHopper: com.graphhopper.routing.util.AcceptWay acceptWay>,407,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, $stack50 = this.<com.graphhopper.GraphHopper: com.graphhopper.routing.util.AcceptWay acceptWay>, 407)) => Node(<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>,this := @this: com.graphhopper.routing.util.AcceptWay,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407)) => Node(<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>,this := @this: com.graphhopper.routing.util.AcceptWay,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175)) => Node(<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>,$stack7 = this.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.AbstractFlagEncoder[] encoders>,167,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack7 = this.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.AbstractFlagEncoder[] encoders>, 167)) => Node(<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>,$stack8 = $stack7[i],167,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack8 = $stack7[i], 167)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack50 = this.<com.graphhopper.GraphHopper: com.graphhopper.routing.util.AcceptWay acceptWay>",
				"location": {
					"file": "",
					"class": "com.graphhopper.GraphHopper",
					"method": "<com.graphhopper.GraphHopper: boolean load(java.lang.String)>",
					"line": 407
				},
				"stackTrace": [{
	"class": "com.graphhopper.GraphHopper",
	"method": "<com.graphhopper.GraphHopper: boolean load(java.lang.String)>",
	"line": 407
},{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>",
	"line": -1
},{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>",
	"line": -1
},{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>",
	"line": 167
},{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>",
	"line": 167
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack26 = pos + 1",
				"location": {
					"file": "",
					"class": "com.graphhopper.routing.util.AcceptWay",
					"method": "<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>",
					"line": 51
				},
				"stackTrace": [{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>",
	"line": 51
},{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>",
	"line": 51
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Class forName(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Class forName(java.lang.String)>",
	"line": 264
},{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>",
	"line": 59
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>()",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.String getName()>",
					"line": 642
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,l3 = entries,46,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, l3 = entries, 46)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,entry = l3[l5],65,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, entry = l3[l5], 65)) => Node(<java.lang.String: java.lang.String trim()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, $stack5 = staticinvoke <com.graphhopper.util.Helper: boolean isEmpty(java.lang.String)>(graphHopperFolder), 373) => (<com.graphhopper.util.Helper: boolean isEmpty(java.lang.String)>, $stack1 = virtualinvoke strOsm.<java.lang.String: java.lang.String trim()>(), 186)) => Node(<java.lang.String: java.lang.String trim()>,$stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2, l1),2878,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, $stack5 = staticinvoke <com.graphhopper.util.Helper: boolean isEmpty(java.lang.String)>(graphHopperFolder), 373) => (<com.graphhopper.util.Helper: boolean isEmpty(java.lang.String)>, $stack1 = virtualinvoke strOsm.<java.lang.String: java.lang.String trim()>(), 186)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,entry = virtualinvoke entry.<java.lang.String: java.lang.String trim()>(),47,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, entry = virtualinvoke entry.<java.lang.String: java.lang.String trim()>(), 47)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,pos = virtualinvoke entry.<java.lang.String: int indexOf(java.lang.String)>(":"),49,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, pos = virtualinvoke entry.<java.lang.String: int indexOf(java.lang.String)>(':'), 49)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,$stack26 = pos + 1,51,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack26 = pos + 1, 51)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,className = virtualinvoke entry.<java.lang.String: java.lang.String substring(int)>($stack26),51,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, className = virtualinvoke entry.<java.lang.String: java.lang.String substring(int)>($stack26), 51)) => Node(<java.lang.Class: java.lang.Class forName(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<java.lang.Class: java.lang.Class forName(java.lang.String)>,$stack5 = staticinvoke <java.lang.Class: java.lang.Class forName0(java.lang.String,boolean,java.lang.ClassLoader,java.lang.Class)>(l0, 1, $stack4, l1),264,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>,cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className),59,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, cls = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className), 59)) => Node(<java.lang.Class: java.lang.Object newInstance()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack17 = virtualinvoke cls.<java.lang.Class: java.lang.Object newInstance()>(), 60)) => Node(<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, specialinvoke $stack43.<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>(ex#22), 432) => (<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>, $stack17 = virtualinvoke cls.<java.lang.Class: java.lang.Object newInstance()>(), 60) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) SINK=>BASE: Node(<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>,$stack7 = this.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.AbstractFlagEncoder[] encoders>,167,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack7 = this.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.AbstractFlagEncoder[] encoders>, 167)) => Node(<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>,$stack8 = $stack7[i],167,SourceNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack8 = $stack7[i], 167)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.graphhopper.GraphHopper: boolean load(java.lang.String)>, encoder = virtualinvoke $stack50.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>(), 407) => (<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.EdgePropertyEncoder getSingle()>, $stack9 = virtualinvoke this.<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>(), 175) => (<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>(), 167) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack7 = this.<com.graphhopper.routing.util.AcceptWay: com.graphhopper.routing.util.AbstractFlagEncoder[] encoders>",
				"location": {
					"file": "",
					"class": "com.graphhopper.routing.util.AcceptWay",
					"method": "<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>",
					"line": 167
				},
				"stackTrace": [{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>",
	"line": 167
},{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: java.lang.String toString()>",
	"line": 167
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 640
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "l3 = entries",
				"location": {
					"file": "",
					"class": "com.graphhopper.routing.util.AcceptWay",
					"method": "<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>",
					"line": 46
				},
				"stackTrace": [{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>",
	"line": 46
},{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>",
	"line": 65
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String trim()>",
	"line": 2878
},{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>",
	"line": 47
},{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>",
	"line": 49
},{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>",
	"line": 51
},{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>",
	"line": 51
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Class forName(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Class forName(java.lang.String)>",
	"line": 264
},{
	"class": "com.graphhopper.routing.util.AcceptWay",
	"method": "<com.graphhopper.routing.util.AcceptWay: void <init>(java.lang.String)>",
	"line": 59
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.Object newInstance()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 640
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l1 = l0.<java.lang.Class: java.lang.String name>",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.String getName()>",
					"line": 640
				}
			}
		]
	}
}

]
