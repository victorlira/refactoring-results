List(Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>,$stack11 = new org.rdfhdt.hdt.util.Mutable,278,SourceNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>, specialinvoke $stack11.<org.rdfhdt.hdt.util.Mutable: void <init>(java.lang.Object)>($stack12), 278)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>,delta = $stack11,278,SourceNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>, delta = $stack11, 278)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>,$stack37 = virtualinvoke delta.<org.rdfhdt.hdt.util.Mutable: java.lang.Object getValue()>(),300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>, $stack37 = virtualinvoke delta.<org.rdfhdt.hdt.util.Mutable: java.lang.Object getValue()>(), 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>,$stack38 = (java.lang.Long) $stack37,300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>, $stack38 = (java.lang.Long) $stack37, 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>,$stack39 = virtualinvoke $stack38.<java.lang.Long: long longValue()>(),300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>, $stack39 = virtualinvoke $stack38.<java.lang.Long: long longValue()>(), 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>,$stack41 = $stack39 cmp $stack40,300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>, $stack41 = $stack39 cmp $stack40, 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>,if $stack41 < 0 goto idInBlock#6 = 0,300,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>,$stack42 = staticinvoke <org.rdfhdt.hdt.util.string.ByteStringUtil: int longestCommonPrefix(java.lang.CharSequence,java.lang.CharSequence,int)>(tempString, str, cshared),304,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>, $stack42 = staticinvoke <org.rdfhdt.hdt.util.string.ByteStringUtil: int longestCommonPrefix(java.lang.CharSequence,java.lang.CharSequence,int)>(tempString, str, cshared), 304)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>,cshared = cshared + $stack42,304,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>, $stack40 = (long) cshared, 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>,if cshared != $stack43 goto $stack44 = slen + 1,306,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>,if $stack47 != $stack48 goto $stack44 = slen + 1,291,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(int,java.lang.CharSequence)>,return idInBlock#6,307,SinkNode, path: ))

