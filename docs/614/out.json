[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack28 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getSendWhitespaceTag()>(),802,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack28 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getSendWhitespaceTag()>(), 802)) SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack28 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getSendWhitespaceTag()>(),802,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack28 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getSendWhitespaceTag()>(), 802))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 796
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 802
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 796
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 802
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack28 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getSendWhitespaceTag()>()",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
					"line": 802
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 796
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 796
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>()",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
					"line": 796
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack35 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(),808,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack35 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(), 808)) SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack35 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(),808,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack35 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(), 808))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 796
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 808
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 796
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 808
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack35 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>()",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
					"line": 808
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: void startSession()>,$stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),933,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void startSession()>(), 798) => (<net.java.otr4j.session.SessionImpl: void startSession()>, $stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 933)) SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: void startSession()>,$stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),933,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void startSession()>(), 798) => (<net.java.otr4j.session.SessionImpl: void startSession()>, $stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 933))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: void startSession()>",
	"line": 933
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: void startSession()>",
	"line": 933
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>()",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: void startSession()>",
					"line": 933
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>()",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
					"line": 1005
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: void startSession()>,$stack4 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),932,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void startSession()>(), 798) => (<net.java.otr4j.session.SessionImpl: void startSession()>, $stack4 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 932)) => Node(<net.java.otr4j.session.SessionImpl: void startSession()>,$stack5 = interfaceinvoke $stack4.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(),932,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void startSession()>(), 798) => (<net.java.otr4j.session.SessionImpl: void startSession()>, $stack5 = interfaceinvoke $stack4.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(), 932)) SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: void startSession()>,$stack4 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),932,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void startSession()>(), 798) => (<net.java.otr4j.session.SessionImpl: void startSession()>, $stack4 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 932))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: void startSession()>",
	"line": 932
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: void startSession()>",
	"line": 932
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: void startSession()>",
	"line": 932
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack5 = interfaceinvoke $stack4.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>()",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: void startSession()>",
					"line": 932
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack52 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),799,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack52 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 799)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,interfaceinvoke $stack52.<net.java.otr4j.OtrEngineHost: void requireEncryptedMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack53, msgText),799,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, interfaceinvoke $stack52.<net.java.otr4j.OtrEngineHost: void requireEncryptedMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack53, msgText), 799)) SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack52 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),799,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack52 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 799)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,interfaceinvoke $stack52.<net.java.otr4j.OtrEngineHost: void requireEncryptedMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack53, msgText),799,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, interfaceinvoke $stack52.<net.java.otr4j.OtrEngineHost: void requireEncryptedMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack53, msgText), 799))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 799
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 799
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 799
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 799
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "interfaceinvoke $stack52.<net.java.otr4j.OtrEngineHost: void requireEncryptedMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack53, msgText)",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
					"line": 799
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack34 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(),806,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack34 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(), 806)) SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack34 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(),806,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack34 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(), 806))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 796
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 806
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 796
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 806
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack34 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>()",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
					"line": 806
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack27 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(),797,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack27 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(), 797)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,if $stack27 == 0 goto $stack28 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getSendWhitespaceTag()>(),797,SinkNode, path: ) SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack27 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(),797,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack27 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(), 797))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 796
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 797
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
					"line": 316
				},
				"stackTrace": [{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
	"line": 316
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
	"line": 1005
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 796
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 797
},{
	"class": "net.java.otr4j.session.SessionImpl",
	"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
	"line": 797
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "if $stack27 == 0 goto $stack28 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getSendWhitespaceTag()>()",
				"location": {
					"file": "",
					"class": "net.java.otr4j.session.SessionImpl",
					"method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
					"line": 797
				}
			}
		]
	}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
"location": {
  "file": "",
  "class": "net.java.otr4j.session.SessionImpl",
  "method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
  "line": "316"
},
"stackTrace": ["(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)","(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "net.java.otr4j.session.SessionImpl",
  "method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
  "line": "316"
},
"stackTrace": [""]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
"location": {
  "file": "",
  "class": "net.java.otr4j.session.SessionImpl",
  "method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
  "line": "316"
},
"stackTrace": ["(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)","(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>()",
"location": {
  "file": "",
  "class": "net.java.otr4j.session.SessionImpl",
  "method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
  "line": "1005"
},
"stackTrace": ["(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)","(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2)",
"location": {
  "file": "",
  "class": "net.java.otr4j.session.SessionImpl",
  "method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>",
  "line": "1005"
},
"stackTrace": ["(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>()",
"location": {
  "file": "",
  "class": "net.java.otr4j.session.SessionImpl",
  "method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
  "line": "796"
},
"stackTrace": ["(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>()",
"location": {
  "file": "",
  "class": "net.java.otr4j.session.SessionImpl",
  "method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
  "line": "810"
},
"stackTrace": ["(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack36 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>(), 810)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack36 == 0 goto $stack37 = interfaceinvoke versions.<java.util.List: boolean isEmpty()>()",
"location": {
  "file": "",
  "class": "net.java.otr4j.session.SessionImpl",
  "method": "<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>",
  "line": "810"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>",
"location": {
  "file": "",
  "class": "net.java.otr4j.session.SessionImpl",
  "method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
  "line": "316"
},
"stackTrace": ["(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)","(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "net.java.otr4j.session.SessionImpl",
  "method": "<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>",
  "line": "316"
},
"stackTrace": [""]
}]
}
}

]
