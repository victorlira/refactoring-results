Running soot scenario otr4j;net.java.otr4j.session.SessionImpl;transformSending(String, List<TLV>);540d5c8013e19985d771216ab92ab1c1dcb37ef9
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/540d5c8013e19985d771216ab92ab1c1dcb37ef9/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,77000
Time to perform Confluence 1 Inter 2,03700
Configure Soot Confluence 2 Inter 0,25100
Time to perform Confluence 2 Inter 1,28600
Visited methods: 140
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack28 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getSendWhitespaceTag()>(),802,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack28 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getSendWhitespaceTag()>(), 802))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack28 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getSendWhitespaceTag()>(),802,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack28 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getSendWhitespaceTag()>(), 802)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack35 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(),808,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack35 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(), 808))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack35 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(),808,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack35 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(), 808)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: void startSession()>,$stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),933,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void startSession()>(), 798) => (<net.java.otr4j.session.SessionImpl: void startSession()>, $stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 933))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: void startSession()>,$stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),933,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void startSession()>(), 798) => (<net.java.otr4j.session.SessionImpl: void startSession()>, $stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 933)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: void startSession()>,$stack4 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),932,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void startSession()>(), 798) => (<net.java.otr4j.session.SessionImpl: void startSession()>, $stack4 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 932)) => Node(<net.java.otr4j.session.SessionImpl: void startSession()>,$stack5 = interfaceinvoke $stack4.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(),932,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void startSession()>(), 798) => (<net.java.otr4j.session.SessionImpl: void startSession()>, $stack5 = interfaceinvoke $stack4.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(), 932))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: void startSession()>,$stack4 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),932,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void startSession()>(), 798) => (<net.java.otr4j.session.SessionImpl: void startSession()>, $stack4 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 932)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack52 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),799,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack52 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 799)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,interfaceinvoke $stack52.<net.java.otr4j.OtrEngineHost: void requireEncryptedMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack53, msgText),799,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, interfaceinvoke $stack52.<net.java.otr4j.OtrEngineHost: void requireEncryptedMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack53, msgText), 799))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack52 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),799,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack52 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 799)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,interfaceinvoke $stack52.<net.java.otr4j.OtrEngineHost: void requireEncryptedMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack53, msgText),799,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, interfaceinvoke $stack52.<net.java.otr4j.OtrEngineHost: void requireEncryptedMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack53, msgText), 799)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack34 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(),806,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack34 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(), 806))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack34 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(),806,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack34 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(), 806)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack27 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(),797,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack27 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(), 797)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,if $stack27 == 0 goto $stack28 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getSendWhitespaceTag()>(),797,SinkNode, path: )
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack27 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(),797,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack27 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(), 797))]
Confluence interference in <net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>
Confluence flows from execution of lines 796 and 796 to line 802, defined in otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and used in $stack28 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getSendWhitespaceTag()>()
Caused by line 796 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 796 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 802 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack28 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getSendWhitespaceTag()>(), 802)
Confluence interference in <net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>
Confluence flows from execution of lines 796 and 796 to line 796, defined in otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and used in otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>()
Caused by line 796 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 796 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 796 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)
Confluence interference in <net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>
Confluence flows from execution of lines 796 and 796 to line 808, defined in otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and used in $stack35 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>()
Caused by line 796 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 796 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 808 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack35 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(), 808)
Confluence interference in <net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>
Confluence flows from execution of lines 796 and 796 to line 798, defined in otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and used in virtualinvoke this.<net.java.otr4j.session.SessionImpl: void startSession()>()
Caused by line 796 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 796 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 798 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void startSession()>(), 798) => (<net.java.otr4j.session.SessionImpl: void startSession()>, $stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 933)
Confluence interference in <net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>
Confluence flows from execution of lines 796 and 796 to line 799, defined in otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and used in interfaceinvoke $stack52.<net.java.otr4j.OtrEngineHost: void requireEncryptedMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack53, msgText)
Caused by line 796 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 796 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 799 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, interfaceinvoke $stack52.<net.java.otr4j.OtrEngineHost: void requireEncryptedMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack53, msgText), 799)
Confluence interference in <net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>
Confluence flows from execution of lines 796 and 796 to line 806, defined in otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and used in $stack34 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>()
Caused by line 796 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 796 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 806 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack34 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(), 806)
Confluence interference in <net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>
Confluence flows from execution of lines 796 and 796 to line 797, defined in otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and used in $stack27 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>()
Caused by line 796 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 796 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 797 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack27 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(), 797)
 Analysis results
----------------------------
 Number of conflicts: 9
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/540d5c8013e19985d771216ab92ab1c1dcb37ef9/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,67900
Runtime: 0.202s
Time to perform OA Inter 1,00400
OA Inter Visited methods: 259
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/540d5c8013e19985d771216ab92ab1c1dcb37ef9/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,65900
Time to perform DFP Inter 1,43000
Depth limit: 5
CONFLICTS: DF interference in <net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,return $stack1,316,SinkNode, path: ))]
Visited methods: 70
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/540d5c8013e19985d771216ab92ab1c1dcb37ef9/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,62000
Time to perform DFP Inter 1,59900
Depth limit: 5
CONFLICTS: DF interference in <net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),796,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,$stack36 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>(),810,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, $stack36 = interfaceinvoke otrPolicy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>(), 810)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>,if $stack36 == 0 goto $stack37 = interfaceinvoke versions.<java.util.List: boolean isEmpty()>(),810,SinkNode, path: )), List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String transformSending(java.lang.String,java.util.List)>, otrPolicy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 796) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,return $stack1,316,SinkNode, path: ))]
Visited methods: 70
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/540d5c8013e19985d771216ab92ab1c1dcb37ef9/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,55900
Time to perform PDG 0,76100
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/540d5c8013e19985d771216ab92ab1c1dcb37ef9/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,62500
Time to perform PDG 0,83600
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
