[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri),205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>,this := @this: com.github.jsonldjava.core.RemoteDocument,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>,$stack1 = this.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object document>,41,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(),206,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack106 = (java.util.Map) remoteContext,214,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),214,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1),217,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,this := @this: com.github.jsonldjava.core.Context,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,184,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)) => Node(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>,opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,options := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options,62,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40) => (<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options, 62)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(),205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>,88,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(),72,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request),365,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(),388,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,header = l2[l4],411,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,$stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(),389,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(), 389)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l6 = l0.<java.lang.String: char[] value>,1346,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l6 = l0.<java.lang.String: char[] value>, 1346)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l10 = l6[$stack30],1357,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l10 = l6[$stack30], 1357)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l12 = staticinvoke <java.lang.Character: char toUpperCase(char)>(l10),1367,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l12 = staticinvoke <java.lang.Character: char toUpperCase(char)>(l10), 1367)) SINK=>BASE: Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>,91,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(),72,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request),365,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(),388,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,header = l2[l4],411,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,$stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(),389,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(), 389)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l6 = l0.<java.lang.String: char[] value>,1346,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l6 = l0.<java.lang.String: char[] value>, 1346)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l10 = l6[$stack30],1357,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l10 = l6[$stack30], 1357)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l12 = staticinvoke <java.lang.Character: char toUpperCase(char)>(l10),1367,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l12 = staticinvoke <java.lang.Character: char toUpperCase(char)>(l10), 1367))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.DocumentLoader",
					"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
					"line": 91
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": 91
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 72
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": 365
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 388
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 411
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 389
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1346
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1357
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1367
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.RemoteDocument",
	"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.RemoteDocument",
	"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
	"line": 41
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 206
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 217
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 184
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": 62
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": 88
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 72
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": 365
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 388
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 411
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 389
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1346
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1357
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1367
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l12 = staticinvoke <java.lang.Character: char toUpperCase(char)>(l10)",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
					"line": 1367
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = null,191,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri),205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>,this := @this: com.github.jsonldjava.core.RemoteDocument,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>,$stack1 = this.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object document>,41,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(),206,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack106 = (java.util.Map) remoteContext,214,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),214,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1),217,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,this := @this: com.github.jsonldjava.core.Context,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,184,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)) => Node(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>,opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,options := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options,62,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40) => (<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options, 62)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(),205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>,88,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(),72,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request),365,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(),388,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,header = l2[l4],411,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,$stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(),389,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(), 389)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,$stack3 = l0.<java.lang.String: char[] value>,1106,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack3 = l0.<java.lang.String: char[] value>, 1106)) SINK=>BASE: Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,e = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("com.github.jsonldjava.disallowRemoteContextLoading"),65,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, e = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>('com.github.jsonldjava.disallowRemoteContextLoading'), 65)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,$stack2 = l1.<java.lang.String: char[] value>,1106,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack2 = l1.<java.lang.String: char[] value>, 1106))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "e = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>('com.github.jsonldjava.disallowRemoteContextLoading')",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.DocumentLoader",
					"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
					"line": 65
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 65
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": 1106
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = null",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 191
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.RemoteDocument",
	"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.RemoteDocument",
	"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
	"line": 41
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 206
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 217
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 184
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": 62
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": 88
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 72
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": 365
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 388
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 411
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 389
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": 1106
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack3 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
					"line": 1106
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = null,191,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack1 = new java.lang.StringBuilder,236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@"),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@'), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,$stack3 = virtualinvoke detail.<java.lang.Object: java.lang.String toString()>(),10,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, $stack3 = virtualinvoke detail.<java.lang.Object: java.lang.String toString()>(), 10)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,$stack182 = virtualinvoke $stack181.<java.lang.Object: java.lang.Class getClass()>(),393,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack182 = virtualinvoke $stack181.<java.lang.Object: java.lang.Class getClass()>(), 393)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,$stack179 = virtualinvoke $stack177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected String for @reverse value. got "),390,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack179 = virtualinvoke $stack177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Expected String for @reverse value. got '), 390)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,$stack183 = virtualinvoke $stack179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack182),393,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack183 = virtualinvoke $stack179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack182), 393)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,$stack184 = virtualinvoke $stack183.<java.lang.StringBuilder: java.lang.String toString()>(),393,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack184 = virtualinvoke $stack183.<java.lang.StringBuilder: java.lang.String toString()>(), 393)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4),233,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@"),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@'), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,$stack3 = virtualinvoke detail.<java.lang.Object: java.lang.String toString()>(),10,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, $stack3 = virtualinvoke detail.<java.lang.Object: java.lang.String toString()>(), 10)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack182 = virtualinvoke $stack181.<java.lang.Object: java.lang.Class getClass()>()",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
					"line": 393
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 393
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 390
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 393
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 393
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": 233
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": 10
},{
	"class": "java.lang.RuntimeException",
	"method": "<java.lang.RuntimeException: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.RuntimeException",
	"method": "<java.lang.RuntimeException: void <init>(java.lang.String)>",
	"line": 62
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = null",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 191
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": 10
},{
	"class": "java.lang.RuntimeException",
	"method": "<java.lang.RuntimeException: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.RuntimeException",
	"method": "<java.lang.RuntimeException: void <init>(java.lang.String)>",
	"line": 62
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1)",
				"location": {
					"file": "",
					"class": "java.lang.RuntimeException",
					"method": "<java.lang.RuntimeException: void <init>(java.lang.String)>",
					"line": 62
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315)) => Node(<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>,$stack8 = l0 & l7,335,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315) => (<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>, $stack8 = l0 & l7, 335)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,localContext = $stack124,177,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, localContext = $stack124, 177)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack14 = (java.util.List) localContext,181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(),181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(),292,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack27 = (java.util.Map) context,284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(),291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd#70 = (java.lang.String) $stack32,291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,term := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term),335,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term), 335)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>("@id", value),345,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@id', value), 345)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,val = (java.util.Map) value,353,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, val = (java.util.Map) value, 353)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315)) => Node(<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>,l0 = l0 >>> l1,336,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315) => (<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>, $stack8 = l0 & l7, 335)) => Node(<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>,$stack8 = l0 & l7,335,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315) => (<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>, $stack8 = l0 & l7, 335))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "localContext = $stack124",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 177
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 177
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 292
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 335
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 345
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 353
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>",
	"line": 336
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>",
	"line": 335
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>",
	"line": 335
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack8 = l0 & l7",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>",
					"line": 335
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 = l0 << 8,1403,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, l0 = l0 << 8, 1403)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 = l0 << 4,1405,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, l0 = l0 << 4, 1405)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 = l0 << 2,1405,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, l0 = l0 << 2, 1405)) SINK=>BASE: Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,$stack9 = new com.github.jsonldjava.core.RemoteDocument,72,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri),205,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(),206,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack106 = (java.util.Map) remoteContext,214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,localContext := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack14 = (java.util.List) localContext,181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(),181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(),292,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack27 = (java.util.Map) context,284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(),291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd#70 = (java.lang.String) $stack32,291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,term := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term),335,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term), 335)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>("@id", value),345,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@id', value), 345)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,val = (java.util.Map) value,353,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, val = (java.util.Map) value, 353)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 = l0 << 16,1402,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, l0 = l0 << 16, 1402)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 = l0 << 4,1405,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, l0 = l0 << 4, 1405))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack9 = new com.github.jsonldjava.core.RemoteDocument",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.DocumentLoader",
					"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
					"line": 72
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 72
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 206
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 292
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 335
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 345
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 353
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1402
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1405
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1403
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1405
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1405
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0 = l0 << 2",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
					"line": 1405
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = null,191,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri),205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>,this := @this: com.github.jsonldjava.core.RemoteDocument,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>,$stack1 = this.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object document>,41,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(),206,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack106 = (java.util.Map) remoteContext,214,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),214,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1),217,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,this := @this: com.github.jsonldjava.core.Context,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,184,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)) => Node(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>,opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,options := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options,62,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40) => (<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options, 62)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(),205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>,88,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(),72,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request),365,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(),388,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,header = l2[l4],411,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,$stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(),389,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(), 389)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l6 = l0.<java.lang.String: char[] value>,1346,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l6 = l0.<java.lang.String: char[] value>, 1346)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l10 = l6[$stack30],1357,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l10 = l6[$stack30], 1357)) SINK=>BASE: Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>,91,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(),72,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request),365,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(),388,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,header = l2[l4],411,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,$stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(),389,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(), 389)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l6 = l0.<java.lang.String: char[] value>,1346,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l6 = l0.<java.lang.String: char[] value>, 1346)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l10 = l6[$stack30],1357,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l10 = l6[$stack30], 1357))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.DocumentLoader",
					"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
					"line": 91
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": 91
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 72
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": 365
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 388
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 411
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 389
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1346
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1357
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = null",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 191
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.RemoteDocument",
	"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.RemoteDocument",
	"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
	"line": 41
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 206
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 217
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 184
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": 62
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": 88
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 72
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": 365
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 388
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 411
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 389
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1346
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1357
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l10 = l6[$stack30]",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
					"line": 1357
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 = l0 << 8,1403,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, l0 = l0 << 8, 1403)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 = l0 << 4,1405,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, l0 = l0 << 4, 1405)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,$stack6 = l0 >>> 31,1404,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, $stack6 = l0 >>> 31, 1404)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>,td#5 = virtualinvoke value.<java.lang.String: int indexOf(java.lang.String)>(":"),531,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, td#5 = virtualinvoke value.<java.lang.String: int indexOf(java.lang.String)>(':'), 531)) => Node(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>,prefix = virtualinvoke value.<java.lang.String: java.lang.String substring(int,int)>(0, td#5),534,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, prefix = virtualinvoke value.<java.lang.String: java.lang.String substring(int,int)>(0, td#5), 534)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,term := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term),335,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term), 335)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>("@id", value),345,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@id', value), 345)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,val = (java.util.Map) value,353,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, val = (java.util.Map) value, 353)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,$stack6 = l0 >>> 31,1404,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, $stack6 = l0 >>> 31, 1404)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l1 = l1 - $stack6,1404,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "td#5 = virtualinvoke value.<java.lang.String: int indexOf(java.lang.String)>(':')",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
					"line": 531
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
	"line": 531
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
	"line": 534
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 335
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 345
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 353
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1404
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1404
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1403
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1405
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1404
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack6 = l0 >>> 31",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
					"line": 1404
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = null,191,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) SINK=>BASE: Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,$stack9 = new com.github.jsonldjava.core.RemoteDocument,72,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri),205,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(),206,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack106 = (java.util.Map) remoteContext,214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,localContext := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack14 = (java.util.List) localContext,181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(),181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(),292,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack27 = (java.util.Map) context,284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(),291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd#70 = (java.lang.String) $stack32,291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,term := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term),335,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term), 335)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>("@id", value),345,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@id', value), 345)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,val = (java.util.Map) value,353,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, val = (java.util.Map) value, 353)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,$stack6 = l0 >>> 31,1404,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, $stack6 = l0 >>> 31, 1404)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l1 = l1 - $stack6,1404,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack9 = new com.github.jsonldjava.core.RemoteDocument",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.DocumentLoader",
					"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
					"line": 72
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 72
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 206
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 292
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 335
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 345
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 353
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1404
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1404
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = null",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 191
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l2 = 32 - $stack6",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
					"line": 311
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri),205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>,this := @this: com.github.jsonldjava.core.RemoteDocument,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>,$stack1 = this.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object document>,41,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(),206,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack106 = (java.util.Map) remoteContext,214,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),214,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1),217,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,this := @this: com.github.jsonldjava.core.Context,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,184,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)) => Node(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>,opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,options := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options,62,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40) => (<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options, 62)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(),205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>,88,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(),72,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request),365,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(),388,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,header = l2[l4],411,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,$stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(),389,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(), 389)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l6 = l0.<java.lang.String: char[] value>,1346,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l6 = l0.<java.lang.String: char[] value>, 1346)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l10 = l6[$stack30],1357,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l10 = l6[$stack30], 1357)) => Node(<java.lang.Character: char toUpperCase(char)>,l0 := @parameter0: char,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l12 = staticinvoke <java.lang.Character: char toUpperCase(char)>(l10), 1367)) => Node(<java.lang.Character: char toUpperCase(char)>,$stack1 = staticinvoke <java.lang.Character: int toUpperCase(int)>(l0),6369,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l12 = staticinvoke <java.lang.Character: char toUpperCase(char)>(l10), 1367) => (<java.lang.Character: char toUpperCase(char)>, $stack1 = staticinvoke <java.lang.Character: int toUpperCase(int)>(l0), 6369)) SINK=>BASE: Node(<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>,$stack1 = this.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object document>,41,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(),206,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack106 = (java.util.Map) remoteContext,214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,localContext := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack14 = (java.util.List) localContext,181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(),181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(),292,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack117 = (com.github.jsonldjava.core.Context) context,187,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack117 = (com.github.jsonldjava.core.Context) context, 187)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>,this := @this: com.github.jsonldjava.core.Context,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>,$stack2 = specialinvoke this.<java.util.LinkedHashMap: java.lang.Object clone()>(),892,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173) => (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>, $stack2 = specialinvoke this.<java.util.LinkedHashMap: java.lang.Object clone()>(), 892)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>,rval = (com.github.jsonldjava.core.Context) $stack2,892,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,result = virtualinvoke $stack117.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(),187,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke $stack117.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 187)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1),217,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,this := @this: com.github.jsonldjava.core.Context,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,184,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)) => Node(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>,opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,options := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options,62,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40) => (<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options, 62)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,205,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)) => Node(<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>,this := @this: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>,290,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(),205,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(),72,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request),365,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(),388,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,header = l2[l4],411,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,$stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(),389,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(), 389)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l6 = l0.<java.lang.String: char[] value>,1346,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l6 = l0.<java.lang.String: char[] value>, 1346)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l10 = l6[$stack30],1357,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l10 = l6[$stack30], 1357)) => Node(<java.lang.Character: char toUpperCase(char)>,l0 := @parameter0: char,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l12 = staticinvoke <java.lang.Character: char toUpperCase(char)>(l10), 1367)) => Node(<java.lang.Character: char toUpperCase(char)>,$stack1 = staticinvoke <java.lang.Character: int toUpperCase(int)>(l0),6369,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l12 = staticinvoke <java.lang.Character: char toUpperCase(char)>(l10), 1367) => (<java.lang.Character: char toUpperCase(char)>, $stack1 = staticinvoke <java.lang.Character: int toUpperCase(int)>(l0), 6369)) => Node(<java.lang.Character: char toUpperCase(char)>,$stack2 = (char) $stack1,6369,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l12 = staticinvoke <java.lang.Character: char toUpperCase(char)>(l10), 1367))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object document>",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.RemoteDocument",
					"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
					"line": 41
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.RemoteDocument",
	"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
	"line": 41
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 206
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 292
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 187
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
	"line": 892
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
	"line": 892
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 187
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 217
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 184
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": 62
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.JsonLdOptions",
	"method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.JsonLdOptions",
	"method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
	"line": 290
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 72
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": 365
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 388
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 411
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 389
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1346
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1357
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: char toUpperCase(char)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: char toUpperCase(char)>",
	"line": 6369
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: char toUpperCase(char)>",
	"line": 6369
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.RemoteDocument",
	"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.RemoteDocument",
	"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
	"line": 41
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 206
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 217
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 184
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": 62
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": 88
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 72
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": 365
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 388
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 411
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 389
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1346
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1357
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: char toUpperCase(char)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: char toUpperCase(char)>",
	"line": 6369
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack1 = staticinvoke <java.lang.Character: int toUpperCase(int)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Character",
					"method": "<java.lang.Character: char toUpperCase(char)>",
					"line": 6369
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,url := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object,java.lang.Throwable)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, specialinvoke $stack27.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object,java.lang.Throwable)>($stack28, url, e), 61)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,$stack6 = l0 >>> 31,1404,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, $stack6 = l0 >>> 31, 1404)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l1 = l1 - $stack6,1404,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 196
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object,java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1404
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1404
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack9 = $stack8 / l1",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
					"line": 312
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1),318,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,184,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)) => Node(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>,opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,options := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options,62,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40) => (<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options, 62)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,205,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)) => Node(<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>,this := @this: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>,290,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(),205,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri),205,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(),206,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack106 = (java.util.Map) remoteContext,214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,localContext := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack14 = (java.util.List) localContext,181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(),181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(),292,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack27 = (java.util.Map) context,284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(),291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd#70 = (java.lang.String) $stack32,291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,term := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term),335,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term), 335)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>("@id", value),345,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@id', value), 345)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,val = (java.util.Map) value,353,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, val = (java.util.Map) value, 353)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,$stack6 = l0 >>> 31,1404,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, $stack6 = l0 >>> 31, 1404)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l1 = l1 - $stack6,1404,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1),318,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 184
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 184
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": 62
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.JsonLdOptions",
	"method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.JsonLdOptions",
	"method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
	"line": 290
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 206
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 292
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 335
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 345
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 353
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1404
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1404
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 318
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 318
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
					"line": 318
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,$stack3 = l0 >>> 24,1401,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, $stack3 = l0 >>> 24, 1401)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,$stack182 = virtualinvoke $stack181.<java.lang.Object: java.lang.Class getClass()>(),393,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack182 = virtualinvoke $stack181.<java.lang.Object: java.lang.Class getClass()>(), 393)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,$stack179 = virtualinvoke $stack177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected String for @reverse value. got "),390,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack179 = virtualinvoke $stack177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Expected String for @reverse value. got '), 390)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,$stack183 = virtualinvoke $stack179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack182),393,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack183 = virtualinvoke $stack179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack182), 393)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,$stack184 = virtualinvoke $stack183.<java.lang.StringBuilder: java.lang.String toString()>(),393,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack184 = virtualinvoke $stack183.<java.lang.StringBuilder: java.lang.String toString()>(), 393)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 = l0 << 16,1402,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, l0 = l0 << 16, 1402)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,$stack3 = l0 >>> 24,1401,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, $stack3 = l0 >>> 24, 1401))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack182 = virtualinvoke $stack181.<java.lang.Object: java.lang.Class getClass()>()",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
					"line": 393
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 393
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 390
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 393
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 393
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1402
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1401
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1401
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack3 = l0 >>> 24",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
					"line": 1401
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>,$stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not an absolute IRI: "),561,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('not an absolute IRI: '), 561)) => Node(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value),561,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value), 561)) => Node(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>,$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),561,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365) => (<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 561)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,$stack6 = l0 >>> 31,1404,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, $stack6 = l0 >>> 31, 1404)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l1 = l1 - $stack6,1404,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('not an absolute IRI: ')",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
					"line": 561
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
	"line": 561
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
	"line": 561
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
	"line": 561
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1404
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1404
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l4 = newarray (char)[l3]",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
					"line": 313
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack1 = new java.lang.StringBuilder,236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@"),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@'), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,$stack182 = virtualinvoke $stack181.<java.lang.Object: java.lang.Class getClass()>(),393,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack182 = virtualinvoke $stack181.<java.lang.Object: java.lang.Class getClass()>(), 393)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,$stack179 = virtualinvoke $stack177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected String for @reverse value. got "),390,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack179 = virtualinvoke $stack177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Expected String for @reverse value. got '), 390)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,$stack183 = virtualinvoke $stack179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack182),393,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack183 = virtualinvoke $stack179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack182), 393)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,$stack184 = virtualinvoke $stack183.<java.lang.StringBuilder: java.lang.String toString()>(),393,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack184 = virtualinvoke $stack183.<java.lang.StringBuilder: java.lang.String toString()>(), 393)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4),233,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@"),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@'), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 236))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack182 = virtualinvoke $stack181.<java.lang.Object: java.lang.Class getClass()>()",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
					"line": 393
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 393
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 390
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 393
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 393
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": 233
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()",
				"location": {
					"file": "",
					"class": "java.lang.Object",
					"method": "<java.lang.Object: java.lang.String toString()>",
					"line": 236
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = null,191,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri),205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>,this := @this: com.github.jsonldjava.core.RemoteDocument,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>,$stack1 = this.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object document>,41,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(),206,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack106 = (java.util.Map) remoteContext,214,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),214,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1),217,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,this := @this: com.github.jsonldjava.core.Context,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,184,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)) => Node(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>,opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,options := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options,62,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40) => (<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options, 62)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(),205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>,88,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(),72,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request),365,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(),388,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,header = l2[l4],411,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,$stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(),389,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(), 389)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l6 = l0.<java.lang.String: char[] value>,1346,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l6 = l0.<java.lang.String: char[] value>, 1346)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>,rval = (com.github.jsonldjava.core.Context) $stack2,892,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,result = virtualinvoke $stack117.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(),187,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke $stack117.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 187)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1),217,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,this := @this: com.github.jsonldjava.core.Context,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,184,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)) => Node(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>,opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,options := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options,62,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40) => (<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options, 62)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,205,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)) => Node(<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>,this := @this: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>,$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>,290,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(),205,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(),72,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request),365,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(),388,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,header = l2[l4],411,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,$stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(),389,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(), 389)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l6 = l0.<java.lang.String: char[] value>,1346,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, l6 = l0.<java.lang.String: char[] value>, 1346))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "rval = (com.github.jsonldjava.core.Context) $stack2",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
					"line": 892
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
	"line": 892
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 187
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 217
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 184
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": 62
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.JsonLdOptions",
	"method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.JsonLdOptions",
	"method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
	"line": 290
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 72
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": 365
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 388
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 411
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 389
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1346
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = null",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 191
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.RemoteDocument",
	"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.RemoteDocument",
	"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
	"line": 41
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 206
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 217
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 184
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": 62
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": 88
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 72
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": 365
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 388
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 411
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 389
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1346
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l6 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
					"line": 1346
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = null,191,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack1 = new java.lang.StringBuilder,236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@"),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@'), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,$stack3 = virtualinvoke detail.<java.lang.Object: java.lang.String toString()>(),10,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, $stack3 = virtualinvoke detail.<java.lang.Object: java.lang.String toString()>(), 10)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = l1,266,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = l1, 266)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(),291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd#70 = (java.lang.String) $stack32,291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,term := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term),335,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term), 335)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>("@id", value),345,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@id', value), 345)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,val = (java.util.Map) value,353,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, val = (java.util.Map) value, 353)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4),233,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@"),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@'), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,$stack3 = virtualinvoke detail.<java.lang.Object: java.lang.String toString()>(),10,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, $stack3 = virtualinvoke detail.<java.lang.Object: java.lang.String toString()>(), 10)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = l1,266,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = l1, 266))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>()",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 291
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 335
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 345
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 353
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": 233
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": 10
},{
	"class": "java.lang.RuntimeException",
	"method": "<java.lang.RuntimeException: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Exception",
	"method": "<java.lang.Exception: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.String)>",
	"line": 266
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = null",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 191
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": 10
},{
	"class": "java.lang.RuntimeException",
	"method": "<java.lang.RuntimeException: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Exception",
	"method": "<java.lang.Exception: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.String)>",
	"line": 266
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0.<java.lang.Throwable: java.lang.String detailMessage> = l1",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: void <init>(java.lang.String)>",
					"line": 266
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = null,191,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri),205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>,this := @this: com.github.jsonldjava.core.RemoteDocument,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>,$stack1 = this.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object document>,41,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(),206,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack106 = (java.util.Map) remoteContext,214,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),214,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1),217,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,this := @this: com.github.jsonldjava.core.Context,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,184,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)) => Node(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>,opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,options := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options,62,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40) => (<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options, 62)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(),205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>,88,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(),72,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request),365,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(),388,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,header = l2[l4],411,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,$stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(),389,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(), 389)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,$stack7 = l0.<java.lang.String: char[] value>,1106,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack7 = l0.<java.lang.String: char[] value>, 1106)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,$stack8 = lengthof $stack7,1109,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack8 = lengthof $stack7, 1109)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,$stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8),1109,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109)) SINK=>BASE: Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>,protocol = virtualinvoke url.<java.net.URL: java.lang.String getProtocol()>(),346,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, protocol = virtualinvoke url.<java.net.URL: java.lang.String getProtocol()>(), 346)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,$stack7 = l0.<java.lang.String: char[] value>,1106,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack7 = l0.<java.lang.String: char[] value>, 1106)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,$stack8 = lengthof $stack7,1109,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack8 = lengthof $stack7, 1109))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "protocol = virtualinvoke url.<java.net.URL: java.lang.String getProtocol()>()",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.utils.JsonUtils",
					"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
					"line": 346
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
	"line": 346
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": 1106
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": 1109
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = null",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 191
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.RemoteDocument",
	"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.RemoteDocument",
	"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
	"line": 41
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 206
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 217
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 184
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": 62
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": 88
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 72
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": 365
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 388
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 411
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 389
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": 1106
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": 1109
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": 1109
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8)",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
					"line": 1109
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,$stack2 = l0 >>> 16,1400,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, $stack2 = l0 >>> 16, 1400)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term),335,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term), 335)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>("@id", value),345,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@id', value), 345)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,val = (java.util.Map) value,353,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, val = (java.util.Map) value, 353)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,$stack2 = l0 >>> 16,1400,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, $stack2 = l0 >>> 16, 1400))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term)",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
					"line": 335
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 335
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 345
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 353
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1400
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1400
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack2 = l0 >>> 16",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
					"line": 1400
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = null,191,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 = l0 << 8,1403,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, l0 = l0 << 8, 1403)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,$stack4 = l0 >>> 28,1402,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, $stack4 = l0 >>> 28, 1402)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(),206,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack106 = (java.util.Map) remoteContext,214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,localContext := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack14 = (java.util.List) localContext,181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(),181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(),292,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack27 = (java.util.Map) context,284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(),291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd#70 = (java.lang.String) $stack32,291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,term := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term),335,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term), 335)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>("@id", value),345,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@id', value), 345)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,val = (java.util.Map) value,353,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, val = (java.util.Map) value, 353)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,$stack4 = l0 >>> 28,1402,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, $stack4 = l0 >>> 28, 1402))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 206
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 206
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 292
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 335
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 345
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 353
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1402
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = null",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 191
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1403
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1402
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack4 = l0 >>> 28",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
					"line": 1402
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack1 = new java.lang.StringBuilder,236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@"),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@'), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,$stack3 = virtualinvoke detail.<java.lang.Object: java.lang.String toString()>(),10,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, $stack3 = virtualinvoke detail.<java.lang.Object: java.lang.String toString()>(), 10)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,$stack185 = new com.github.jsonldjava.core.JsonLdError,387,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, specialinvoke $stack185.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack186, val), 387)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,this := @this: com.github.jsonldjava.core.JsonLdError,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l0 := @this: java.lang.RuntimeException,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l0 := @this: java.lang.Exception,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199) => (<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack3), 10) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack185 = new com.github.jsonldjava.core.JsonLdError",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
					"line": 387
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 387
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.RuntimeException",
	"method": "<java.lang.RuntimeException: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Exception",
	"method": "<java.lang.Exception: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Exception",
	"method": "<java.lang.Exception: void <init>(java.lang.String)>",
	"line": 66
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": 10
},{
	"class": "java.lang.RuntimeException",
	"method": "<java.lang.RuntimeException: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Exception",
	"method": "<java.lang.Exception: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Exception",
	"method": "<java.lang.Exception: void <init>(java.lang.String)>",
	"line": 66
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1)",
				"location": {
					"file": "",
					"class": "java.lang.Exception",
					"method": "<java.lang.Exception: void <init>(java.lang.String)>",
					"line": 66
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,localContext = $stack124,177,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, localContext = $stack124, 177)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack14 = (java.util.List) localContext,181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(),181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(),292,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack27 = (java.util.Map) context,284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(),291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd#70 = (java.lang.String) $stack32,291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,term := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term),335,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term), 335)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>("@id", value),345,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@id', value), 345)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,val = (java.util.Map) value,353,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, val = (java.util.Map) value, 353)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "localContext = $stack124",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 177
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 177
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 292
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 335
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 345
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 353
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>()",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.String getName()>",
					"line": 642
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3),315,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(),206,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack106 = (java.util.Map) remoteContext,214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,localContext := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack14 = (java.util.List) localContext,181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(),181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(),292,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack27 = (java.util.Map) context,284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(),291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd#70 = (java.lang.String) $stack32,291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,term := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term),335,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term), 335)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>("@id", value),345,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@id', value), 345)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,val = (java.util.Map) value,353,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, val = (java.util.Map) value, 353)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3),315,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 206
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 206
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 292
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 335
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 345
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 353
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 315
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 315
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
					"line": 315
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315)) => Node(<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>,l0 = l0 >>> l1,336,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315) => (<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>, $stack8 = l0 & l7, 335)) SINK=>BASE: Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,$stack9 = new com.github.jsonldjava.core.RemoteDocument,72,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri),205,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(),206,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack106 = (java.util.Map) remoteContext,214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,localContext := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack14 = (java.util.List) localContext,181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(),181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(),292,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack27 = (java.util.Map) context,284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(),291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd#70 = (java.lang.String) $stack32,291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,term := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term),335,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term), 335)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>("@id", value),345,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@id', value), 345)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,val = (java.util.Map) value,353,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, val = (java.util.Map) value, 353)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315)) => Node(<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>,l0 = l0 >>> l1,336,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315) => (<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>, $stack8 = l0 & l7, 335))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack9 = new com.github.jsonldjava.core.RemoteDocument",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.DocumentLoader",
					"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
					"line": 72
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 72
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 206
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 292
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 335
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 345
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 353
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>",
	"line": 336
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>",
	"line": 336
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0 = l0 >>> l1",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>",
					"line": 336
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri),205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>,this := @this: com.github.jsonldjava.core.RemoteDocument,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>,$stack1 = this.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object document>,41,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(),206,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack106 = (java.util.Map) remoteContext,214,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),214,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1),217,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,this := @this: com.github.jsonldjava.core.Context,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,184,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)) => Node(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>,opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,options := @parameter0: com.github.jsonldjava.core.JsonLdOptions,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)) => Node(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>,this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options,62,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184) => (<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40) => (<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options, 62)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>,205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(),205,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,this := @this: com.github.jsonldjava.core.DocumentLoader,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>,result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>,88,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(),72,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request),365,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(),388,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,header = l2[l4],411,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,$stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(),389,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(), 389)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,$stack15 = l0.<java.lang.String: char[] value>,1354,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, $stack15 = l0.<java.lang.String: char[] value>, 1354)) SINK=>BASE: Node(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>,response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request),365,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(),388,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,header = l2[l4],411,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)) => Node(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>,$stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(),389,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355) => (<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372) => (<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(), 389)) => Node(<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,$stack15 = l0.<java.lang.String: char[] value>,1354,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, $stack15 = l0.<java.lang.String: char[] value>, 1354)) => Node(<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>,$stack16 = lengthof $stack15,1354,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205) => (<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(e), 66) => (<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>, $stack9 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $stack8), 1109) => (<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>, $stack16 = lengthof $stack15, 1354))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.utils.JsonUtils",
					"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
					"line": 365
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": 365
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 388
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 411
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 389
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1354
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1354
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.RemoteDocument",
	"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.RemoteDocument",
	"method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
	"line": 41
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 206
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 217
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 184
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
	"line": 62
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
	"line": 88
},{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 72
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
	"line": 365
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 388
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 411
},{
	"class": "com.github.jsonldjava.utils.JsonUtils",
	"method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
	"line": 389
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
	"line": 1354
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack15 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
					"line": 1354
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 = l0 << 8,1403,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, l0 = l0 << 8, 1403)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 = l0 << 4,1405,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, l0 = l0 << 4, 1405)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,$stack5 = l0 >>> 30,1403,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, $stack5 = l0 >>> 30, 1403)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(),291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd#70 = (java.lang.String) $stack32,291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,term := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term),335,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term), 335)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>("@id", value),345,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@id', value), 345)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,val = (java.util.Map) value,353,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, val = (java.util.Map) value, 353)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 = l0 << 16,1402,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, l0 = l0 << 16, 1402)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,l0 = l0 << 4,1405,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, l0 = l0 << 4, 1405)) => Node(<java.lang.Integer: int numberOfLeadingZeros(int)>,$stack5 = l0 >>> 30,1403,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311) => (<java.lang.Integer: int numberOfLeadingZeros(int)>, $stack5 = l0 >>> 30, 1403))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>()",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 291
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 335
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 345
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 353
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1402
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1405
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1403
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1403
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1405
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
	"line": 1403
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack5 = l0 >>> 30",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int numberOfLeadingZeros(int)>",
					"line": 1403
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = null,191,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4),233,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) SINK=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(),292,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack27 = (java.util.Map) context,284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(),291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd#70 = (java.lang.String) $stack32,291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,term := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term),335,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term), 335)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>("@id", value),345,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@id', value), 345)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,val = (java.util.Map) value,353,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, val = (java.util.Map) value, 353)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4),233,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 292
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 292
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 335
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 345
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 353
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": 233
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = null",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 191
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": 233
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
					"line": 233
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = (java.lang.String) $stack112,194,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92),196,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) SINK=>BASE: Node(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>,$stack20 = new com.github.jsonldjava.core.RemoteDocument,59,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri),205,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(),206,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack106 = (java.util.Map) remoteContext,214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>("@context"),214,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,localContext := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack14 = (java.util.List) localContext,181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(),181,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(),292,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack27 = (java.util.Map) context,284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(),284,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(),291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)) => Node(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>,rd#70 = (java.lang.String) $stack32,291,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,term := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term),335,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = interfaceinvoke context.<java.util.Map: java.lang.Object get(java.lang.Object)>(term), 335)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>("@id", value),345,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, value = staticinvoke <com.github.jsonldjava.utils.Obj: java.util.Map newMap(java.lang.String,java.lang.Object)>('@id', value), 345)) => Node(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>,val = (java.util.Map) value,353,SourceNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289) => (<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, val = (java.util.Map) value, 353)) => Node(<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>,detail := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack89 = virtualinvoke context.<java.lang.Object: java.lang.String toString()>(), 193) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack20 = new com.github.jsonldjava.core.RemoteDocument",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.DocumentLoader",
					"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
					"line": 59
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.DocumentLoader",
	"method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
	"line": 59
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 205
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 206
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 214
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 181
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 292
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 284
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 291
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": -1
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 335
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 345
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
	"line": 353
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 640
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "uri = (java.lang.String) $stack112",
				"location": {
					"file": "",
					"class": "com.github.jsonldjava.core.Context",
					"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
					"line": 194
				},
				"stackTrace": [{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 194
},{
	"class": "com.github.jsonldjava.core.Context",
	"method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
	"line": 196
},{
	"class": "com.github.jsonldjava.core.JsonLdError",
	"method": "<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 640
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l1 = l0.<java.lang.Class: java.lang.String name>",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.String getName()>",
					"line": 640
				}
			}
		]
	}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack18 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "380"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack18 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>(), 380)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = interfaceinvoke $stack18.<org.apache.http.HttpEntity: java.io.InputStream getContent()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "380"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack19 = interfaceinvoke $stack18.<org.apache.http.HttpEntity: java.io.InputStream getContent()>(), 380)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack11 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>($stack10), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke input.<java.io.InputStream: void close()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>",
  "line": "121"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack11 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>($stack10), 353)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>, virtualinvoke input.<java.io.InputStream: void close()>(), 121)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "291"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd#70 = (java.lang.String) $stack32",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "291"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack21 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "224"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack21 = (java.util.Map) context, 224)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack139, 0, 1, context, defined)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "395"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack139, 0, 1, context, defined), 395)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdUtils",
  "method": "<com.github.jsonldjava.core.JsonLdUtils: boolean isAbsoluteIri(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack75 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isAbsoluteIri(java.lang.String)>($stack74), 235)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = virtualinvoke value.<java.lang.String: boolean contains(java.lang.CharSequence)>(':')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdUtils",
  "method": "<com.github.jsonldjava.core.JsonLdUtils: boolean isAbsoluteIri(java.lang.String)>",
  "line": "139"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack75 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isAbsoluteIri(java.lang.String)>($stack74), 235)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack141 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isAbsoluteIri(java.lang.String)>(type#14)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "397"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack141 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isAbsoluteIri(java.lang.String)>(type#14), 397)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack21 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "224"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack21 = (java.util.Map) context, 224)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "map := @parameter0: java.util.Map",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke this.<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>($stack21), 224)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = interfaceinvoke map.<java.util.Map: boolean containsKey(java.lang.Object)>('')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>",
  "line": "296"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke this.<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>($stack21), 224)","(<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>, $stack2 = interfaceinvoke map.<java.util.Map: boolean containsKey(java.lang.Object)>(''), 296)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "339"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 339)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack38 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "547"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack38 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 547)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack147 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "413"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack147 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 413)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "895"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)","(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>, $stack4 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 895)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack3.<java.util.LinkedHashMap: void <init>(java.util.Map)>($stack4)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "895"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)","(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>, specialinvoke $stack3.<java.util.LinkedHashMap: void <init>(java.util.Map)>($stack4), 895)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack21 = this.<com.github.jsonldjava.core.DocumentLoader: java.util.Map m_injectedDocs>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "59"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack21 = this.<com.github.jsonldjava.core.DocumentLoader: java.util.Map m_injectedDocs>, 59)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "291"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd#70 = (java.lang.String) $stack32",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "291"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>(rd#70)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "285"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>(rd#70), 285)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack37 != 0 goto $stack30 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: boolean hasNext()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "285"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = virtualinvoke this.<com.github.jsonldjava.core.Context: boolean containsKey(java.lang.Object)>('@vocab')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "442"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack32 = virtualinvoke this.<com.github.jsonldjava.core.Context: boolean containsKey(java.lang.Object)>('@vocab'), 442)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack102.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack103, context)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "211"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack102.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack103, context), 211)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "l8 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(alternateLink, httpClient, linksFollowed#4)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "378"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "355"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack69 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack69 = (java.util.Map) context, 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base'), 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if uri#17 != null goto $stack71 = uri#17 instanceof java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "231"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "334"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 334)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack101 = remoteContext instanceof java.util.Map",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "207"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack101 = remoteContext instanceof java.util.Map, 207)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = context instanceof java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "190"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack19 = context instanceof java.lang.String, 190)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack19 == 0 goto $stack20 = context instanceof java.util.Map",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "190"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "184"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "options := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)","(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, $stack2 = virtualinvoke options.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>(), 63)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String base>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>",
  "line": "258"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)","(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, $stack2 = virtualinvoke options.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>(), 63)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = context instanceof java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "190"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack19 = context instanceof java.lang.String, 190)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack19 == 0 goto $stack20 = context instanceof java.util.Map",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "190"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "339"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 339)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack58 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "538"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack58 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 538)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack104 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "208"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack104 = (java.util.Map) remoteContext, 208)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack105 = interfaceinvoke $stack104.<java.util.Map: boolean containsKey(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "208"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack105 = interfaceinvoke $stack104.<java.util.Map: boolean containsKey(java.lang.Object)>('@context'), 208)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack105 != 0 goto $stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "208"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack104 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "451"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack104 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 451)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "493"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack37 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 493)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack65 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "227"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack65 = (java.util.Map) context, 227)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = this.<com.github.jsonldjava.core.DocumentLoader: java.util.Map m_injectedDocs>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "57"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack4 = this.<com.github.jsonldjava.core.DocumentLoader: java.util.Map m_injectedDocs>, 57)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack5 = interfaceinvoke $stack4.<java.util.Map: boolean containsKey(java.lang.Object)>(url)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "57"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack5 = interfaceinvoke $stack4.<java.util.Map: boolean containsKey(java.lang.Object)>(url), 57)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "372"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.net.URL",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.net.URL",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack33 = virtualinvoke url.<java.net.URL: java.lang.String getAuthority()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "406"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack33 = virtualinvoke url.<java.net.URL: java.lang.String getAuthority()>(), 406)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "291"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd#70 = (java.lang.String) $stack32",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "291"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>(rd#70)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "285"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>(rd#70), 285)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack37 != 0 goto $stack30 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: boolean hasNext()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "285"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "291"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd#70 = (java.lang.String) $stack32",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "291"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>(rd#70)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "286"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>(rd#70), 286)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "199"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack86.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack87, context)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "222"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack86.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack87, context), 222)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack226 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "329"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack226 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 329)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getAllowContainerSetOnType()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack227 = virtualinvoke $stack226.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getAllowContainerSetOnType()>(), 329)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean allowContainerSetOnType>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getAllowContainerSetOnType()>",
  "line": "221"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack227 = virtualinvoke $stack226.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getAllowContainerSetOnType()>(), 329)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack226 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "329"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack226 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 329)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack227 = virtualinvoke $stack226.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getAllowContainerSetOnType()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "329"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack227 = virtualinvoke $stack226.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getAllowContainerSetOnType()>(), 329)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack41 = (java.util.Map) context, 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language'), 272)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack139, 0, 1, context, defined)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "395"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack139, 0, 1, context, defined), 395)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "value := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdUtils",
  "method": "<com.github.jsonldjava.core.JsonLdUtils: boolean isAbsoluteIri(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack75 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isAbsoluteIri(java.lang.String)>($stack74), 235)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = virtualinvoke value.<java.lang.String: boolean contains(java.lang.CharSequence)>(':')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdUtils",
  "method": "<com.github.jsonldjava.core.JsonLdUtils: boolean isAbsoluteIri(java.lang.String)>",
  "line": "139"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack75 = staticinvoke <com.github.jsonldjava.core.JsonLdUtils: boolean isAbsoluteIri(java.lang.String)>($stack74), 235)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack15 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "387"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack15 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>(), 387)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object put(java.lang.Object,java.lang.Object)>('@base', uri#17)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "236"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object put(java.lang.Object,java.lang.Object)>('@base', uri#17), 236)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack41 = (java.util.Map) context, 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language'), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if uri#17 != null goto $stack43 = uri#17 instanceof java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "273"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack65 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "227"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack65 = (java.util.Map) context, 227)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack21 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "224"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack21 = (java.util.Map) context, 224)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "map := @parameter0: java.util.Map",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke this.<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>($stack21), 224)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke map.<java.util.Map: java.lang.Object get(java.lang.Object)>('')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>",
  "line": "300"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke this.<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>($stack21), 224)","(<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>, $stack8 = interfaceinvoke map.<java.util.Map: java.lang.Object get(java.lang.Object)>(''), 300)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "184"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "options := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack5 = virtualinvoke options.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "64"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)","(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, $stack5 = virtualinvoke options.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>(), 64)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack52 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "254"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack52 = (java.util.Map) context, 254)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack52.<java.util.Map: java.lang.Object get(java.lang.Object)>('@vocab')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "254"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack52.<java.util.Map: java.lang.Object get(java.lang.Object)>('@vocab'), 254)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack54 = uri#17 instanceof java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "257"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack54 = uri#17 instanceof java.lang.String, 257)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack54 == 0 goto $stack55 = new com.github.jsonldjava.core.JsonLdError",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "257"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack86.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack87, context)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "222"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack86.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack87, context), 222)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "339"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 339)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack38 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "547"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack38 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 547)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack147 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "413"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack147 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 413)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack104 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "451"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack104 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 451)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack105 = interfaceinvoke $stack104.<java.util.Map: java.lang.Object get(java.lang.Object)>(error#24)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "451"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack105 = interfaceinvoke $stack104.<java.util.Map: java.lang.Object get(java.lang.Object)>(error#24), 451)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) $stack105",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "451"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack106 = (java.util.Map) $stack105, 451)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack107 = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@id')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "451"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack107 = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@id'), 451)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack102 = new java.lang.StringBuilder",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "450"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, specialinvoke $stack102.<java.lang.StringBuilder: void <init>()>(), 450)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack108 = virtualinvoke $stack102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack107)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "451"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack108 = virtualinvoke $stack102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack107), 451)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack109 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(suffix)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "451"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack109 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(suffix), 451)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack110 = virtualinvoke $stack109.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "451"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack110 = virtualinvoke $stack109.<java.lang.StringBuilder: java.lang.String toString()>(), 451)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke definition.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('@id', $stack110)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "450"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, interfaceinvoke definition.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('@id', $stack110), 450)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "388"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "header = l2[l4]",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "411"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack25 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "393"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack25 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getValue()>(), 393)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = specialinvoke this.<java.util.LinkedHashMap: java.lang.Object clone()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "892"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)","(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>, $stack2 = specialinvoke this.<java.util.LinkedHashMap: java.lang.Object clone()>(), 892)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rval = (com.github.jsonldjava.core.Context) $stack2",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "892"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "173"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "388"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "header = l2[l4]",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "411"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack25 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getValue()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "393"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack25 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getValue()>(), 393)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack104 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "451"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack104 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 451)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack105 = interfaceinvoke $stack104.<java.util.Map: java.lang.Object get(java.lang.Object)>(error#24)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "451"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack105 = interfaceinvoke $stack104.<java.util.Map: java.lang.Object get(java.lang.Object)>(error#24), 451)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) $stack105",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "451"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack106 = (java.util.Map) $stack105, 451)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp = localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "176"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp = localContext, 176)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack117 = (com.github.jsonldjava.core.Context) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "187"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack117 = (com.github.jsonldjava.core.Context) context, 187)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Remote context loading has been disallowed (url was ')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "67"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Remote context loading has been disallowed (url was '), 67)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(url)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "67"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(url), 67)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(')')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "67"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(')'), 67)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "67"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 67)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack13 = localContext instanceof java.util.List",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "175"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack18 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "380"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack18 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>(), 380)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = interfaceinvoke $stack18.<org.apache.http.HttpEntity: java.io.InputStream getContent()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "380"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack19 = interfaceinvoke $stack18.<org.apache.http.HttpEntity: java.io.InputStream getContent()>(), 380)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack11 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>($stack10), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke input.<java.io.InputStream: void close()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>",
  "line": "121"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack11 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>($stack10), 353)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>, virtualinvoke input.<java.io.InputStream: void close()>(), 121)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack18 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "380"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack18 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>(), 380)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "372"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.net.URL",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack13 = virtualinvoke url.<java.net.URL: java.lang.String toExternalForm()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "361"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack13 = virtualinvoke url.<java.net.URL: java.lang.String toExternalForm()>(), 361)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack41 = (java.util.Map) context, 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language'), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack43 = uri#17 instanceof java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "275"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack43 = uri#17 instanceof java.lang.String, 275)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack43 == 0 goto $stack44 = new com.github.jsonldjava.core.JsonLdError",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "275"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack139, 0, 1, context, defined)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "395"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack139, 0, 1, context, defined), 395)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack20 = context instanceof java.util.Map",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "220"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack20 = context instanceof java.util.Map, 220)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack20 != 0 goto $stack21 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "220"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack15 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.StatusLine getStatusLine()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "366"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack15 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.StatusLine getStatusLine()>(), 366)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "status = interfaceinvoke $stack15.<org.apache.http.StatusLine: int getStatusCode()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "366"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, status = interfaceinvoke $stack15.<org.apache.http.StatusLine: int getStatusCode()>(), 366)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp = localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "176"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp = localContext, 176)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack69 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack69 = (java.util.Map) context, 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base'), 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack71 = uri#17 instanceof java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "233"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack71 = uri#17 instanceof java.lang.String, 233)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack71 == 0 goto $stack72 = new com.github.jsonldjava.core.JsonLdError",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "233"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "339"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 339)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack24.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object,java.lang.Throwable)>($stack25, url, e)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "74"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, specialinvoke $stack24.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object,java.lang.Throwable)>($stack25, url, e), 74)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack104 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "208"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack104 = (java.util.Map) remoteContext, 208)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack105 = interfaceinvoke $stack104.<java.util.Map: boolean containsKey(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "208"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack105 = interfaceinvoke $stack104.<java.util.Map: boolean containsKey(java.lang.Object)>('@context'), 208)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack105 != 0 goto $stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "208"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = virtualinvoke this.<com.github.jsonldjava.core.Context: boolean containsKey(java.lang.Object)>('@vocab')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "442"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack32 = virtualinvoke this.<com.github.jsonldjava.core.Context: boolean containsKey(java.lang.Object)>('@vocab'), 442)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "372"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.net.URL",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(url)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "368"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(url), 368)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack41 = (java.util.Map) context, 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language'), 272)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack52 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "254"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack52 = (java.util.Map) context, 254)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "559"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack19 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 559)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack20 = (java.lang.String) $stack19",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "559"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack20 = (java.lang.String) $stack19, 559)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "baseUri := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonLdUrl",
  "method": "<com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack7.<java.net.URI: void <init>(java.lang.String)>(baseUri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonLdUrl",
  "method": "<com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>",
  "line": "263"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)","(<com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>, specialinvoke $stack7.<java.net.URI: void <init>(java.lang.String)>(baseUri), 263)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "88"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack25 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@vocab')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "555"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack25 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@vocab'), 555)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack24 = new java.lang.StringBuilder",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "555"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, specialinvoke $stack24.<java.lang.StringBuilder: void <init>()>(), 555)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack139, 0, 1, context, defined)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "395"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack139, 0, 1, context, defined), 395)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke definition.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('@id', type#14)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "401"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, interfaceinvoke definition.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('@id', type#14), 401)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if context != null goto $stack18 = context instanceof com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "183"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "184"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "184"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack24.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object,java.lang.Throwable)>($stack25, url, e)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "74"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, specialinvoke $stack24.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object,java.lang.Throwable)>($stack25, url, e), 74)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = specialinvoke this.<java.util.LinkedHashMap: java.lang.Object clone()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "892"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)","(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>, $stack2 = specialinvoke this.<java.util.LinkedHashMap: java.lang.Object clone()>(), 892)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rval = (com.github.jsonldjava.core.Context) $stack2",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "892"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack69 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack69 = (java.util.Map) context, 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base'), 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack74 = (java.lang.String) uri#17",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "235"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack74 = (java.lang.String) uri#17, 235)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack94 = interfaceinvoke remoteContexts.<java.util.List: boolean contains(java.lang.Object)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "198"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack94 = interfaceinvoke remoteContexts.<java.util.List: boolean contains(java.lang.Object)>(uri), 198)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "184"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "184"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "339"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 339)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack38 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "547"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack38 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 547)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack99 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "449"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack99 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 449)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack18 = context instanceof com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "186"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack18 = context instanceof com.github.jsonldjava.core.Context, 186)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack41 = (java.util.Map) context, 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language'), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack46 = (java.lang.String) uri#17",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "276"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack46 = (java.lang.String) uri#17, 276)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack102.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack103, context)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "211"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack102.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack103, context), 211)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Remote context loading has been disallowed (url was ')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "67"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Remote context loading has been disallowed (url was '), 67)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(url)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "67"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(url), 67)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(')')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "67"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(')'), 67)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "67"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 67)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack139, 0, 1, context, defined)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "395"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack139, 0, 1, context, defined), 395)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack174 = virtualinvoke $stack173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(type#14)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "398"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack174 = virtualinvoke $stack173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(type#14), 398)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack175 = virtualinvoke $stack174.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "398"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack175 = virtualinvoke $stack174.<java.lang.StringBuilder: java.lang.String toString()>(), 398)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack170.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack172, $stack175)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "398"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, specialinvoke $stack170.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack172, $stack175), 398)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack13 = localContext instanceof java.util.List",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "175"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "184"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "40"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack27.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object,java.lang.Throwable)>($stack28, url, e)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "61"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, specialinvoke $stack27.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object,java.lang.Throwable)>($stack28, url, e), 61)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack24 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "271"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack24 = (java.util.Map) context, 271)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack25 = interfaceinvoke $stack24.<java.util.Map: boolean containsKey(java.lang.Object)>('@language')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "271"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack25 = interfaceinvoke $stack24.<java.util.Map: boolean containsKey(java.lang.Object)>('@language'), 271)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack25 == 0 goto $stack26 = new java.util.LinkedHashMap",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "271"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "291"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd#70 = (java.lang.String) $stack32",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "291"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>(rd#70)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "286"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>(rd#70), 286)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack226 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "329"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack226 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 329)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack227 = virtualinvoke $stack226.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getAllowContainerSetOnType()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "329"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack227 = virtualinvoke $stack226.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getAllowContainerSetOnType()>(), 329)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack30 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: boolean hasNext()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack30 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: boolean hasNext()>(), 284)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack21 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "224"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack21 = (java.util.Map) context, 224)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "184"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "options := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack5 = virtualinvoke options.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "64"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)","(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, $stack5 = virtualinvoke options.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>(), 64)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "388"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "header = l2[l4]",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "411"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "389"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(), 389)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack22 = virtualinvoke $stack21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>('link')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "389"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack22 = virtualinvoke $stack21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>('link'), 389)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "339"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 339)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack38 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "547"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack38 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 547)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack18 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "380"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack18 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>(), 380)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack69 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack69 = (java.util.Map) context, 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base'), 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack78 = (java.lang.String) uri#17",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "243"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack78 = (java.lang.String) uri#17, 243)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "388"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "l3 = lengthof l2",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "388"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l3 = lengthof l2, 388)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack21 = this.<com.github.jsonldjava.core.DocumentLoader: java.util.Map m_injectedDocs>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "59"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack21 = this.<com.github.jsonldjava.core.DocumentLoader: java.util.Map m_injectedDocs>, 59)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack94 = interfaceinvoke remoteContexts.<java.util.List: boolean contains(java.lang.Object)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "198"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack94 = interfaceinvoke remoteContexts.<java.util.List: boolean contains(java.lang.Object)>(uri), 198)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack104 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "451"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack104 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 451)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "493"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack37 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 493)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(term, definition)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "493"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, interfaceinvoke $stack37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(term, definition), 493)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "372"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.net.URL",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack13 = virtualinvoke url.<java.net.URL: java.lang.String toExternalForm()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "361"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack13 = virtualinvoke url.<java.net.URL: java.lang.String toExternalForm()>(), 361)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "339"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 339)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "546"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack35 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 546)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "339"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 339)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack58 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "538"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack58 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 538)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack63 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "523"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack63 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 523)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke nextRemoteContexts.<java.util.List: boolean add(java.lang.Object)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "202"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, interfaceinvoke nextRemoteContexts.<java.util.List: boolean add(java.lang.Object)>(uri), 202)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "184"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "options := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "62"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)","(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options, 62)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object put(java.lang.Object,java.lang.Object)>('@vocab', uri#17)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "259"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object put(java.lang.Object,java.lang.Object)>('@vocab', uri#17), 259)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "339"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 339)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "546"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack35 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 546)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "339"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 339)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack58 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "538"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack58 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 538)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack63 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "523"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack63 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 523)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "388"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "header = l2[l4]",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "411"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack52 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "254"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack52 = (java.util.Map) context, 254)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "372"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack15 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "387"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack15 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>(), 387)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack104 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "451"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack104 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 451)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "334"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack14 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 334)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "88"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack69 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack69 = (java.util.Map) context, 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base'), 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack74 = (java.lang.String) uri#17",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "235"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack74 = (java.lang.String) uri#17, 235)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke nextRemoteContexts.<java.util.List: boolean add(java.lang.Object)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "202"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, interfaceinvoke nextRemoteContexts.<java.util.List: boolean add(java.lang.Object)>(uri), 202)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack117 = (com.github.jsonldjava.core.Context) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "187"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack117 = (com.github.jsonldjava.core.Context) context, 187)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack69 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack69 = (java.util.Map) context, 229)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.RemoteDocument",
  "method": "<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, specialinvoke $stack20.<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>(url, $stack22), 59)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.github.jsonldjava.core.RemoteDocument: java.lang.String documentUrl> = url",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.RemoteDocument",
  "method": "<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>",
  "line": "22"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, specialinvoke $stack20.<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>(url, $stack22), 59)","(<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>, this.<com.github.jsonldjava.core.RemoteDocument: java.lang.String documentUrl> = url, 22)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack18 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "380"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack18 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>(), 380)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = interfaceinvoke $stack18.<org.apache.http.HttpEntity: java.io.InputStream getContent()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "380"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack19 = interfaceinvoke $stack18.<org.apache.http.HttpEntity: java.io.InputStream getContent()>(), 380)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack11 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>($stack10), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke tmp$405594718.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(input, 0, $stack10)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>",
  "line": "104"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack11 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>($stack10), 353)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>, specialinvoke tmp$405594718.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(input, 0, $stack10), 104)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack69 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack69 = (java.util.Map) context, 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base'), 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack78 = (java.lang.String) uri#17",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "243"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack78 = (java.lang.String) uri#17, 243)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack226 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "329"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack226 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 329)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getAllowContainerSetOnType()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack227 = virtualinvoke $stack226.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getAllowContainerSetOnType()>(), 329)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean allowContainerSetOnType>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getAllowContainerSetOnType()>",
  "line": "221"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack227 = virtualinvoke $stack226.<com.github.jsonldjava.core.JsonLdOptions: java.lang.Boolean getAllowContainerSetOnType()>(), 329)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.RemoteDocument",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.RemoteDocument",
  "method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object document>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.RemoteDocument",
  "method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
  "line": "41"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "baseUri := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonLdUrl",
  "method": "<com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack7.<java.net.URI: void <init>(java.lang.String)>(baseUri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonLdUrl",
  "method": "<com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>",
  "line": "263"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)","(<com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>, specialinvoke $stack7.<java.net.URI: void <init>(java.lang.String)>(baseUri), 263)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack69 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack69 = (java.util.Map) context, 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base'), 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if uri#17 != null goto $stack71 = uri#17 instanceof java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "231"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack69 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack69 = (java.util.Map) context, 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>('@base'), 229)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack71 = uri#17 instanceof java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "233"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack71 = uri#17 instanceof java.lang.String, 233)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack71 == 0 goto $stack72 = new com.github.jsonldjava.core.JsonLdError",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "233"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = this.<com.github.jsonldjava.core.DocumentLoader: java.util.Map m_injectedDocs>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "57"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack4 = this.<com.github.jsonldjava.core.DocumentLoader: java.util.Map m_injectedDocs>, 57)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack5 = interfaceinvoke $stack4.<java.util.Map: boolean containsKey(java.lang.Object)>(url)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "57"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack5 = interfaceinvoke $stack4.<java.util.Map: boolean containsKey(java.lang.Object)>(url), 57)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "339"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 339)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack38 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "547"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack38 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 547)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack40 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "289"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack40 = (java.util.Map) context, 289)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack40 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "289"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack40 = (java.util.Map) context, 289)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack41 = (java.util.Map) context, 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language'), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack46 = (java.lang.String) uri#17",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "276"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack46 = (java.lang.String) uri#17, 276)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack87 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@vocab')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "458"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack87 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@vocab'), 458)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = new java.lang.StringBuilder",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "458"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, specialinvoke $stack85.<java.lang.StringBuilder: void <init>()>(), 458)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack85.<java.lang.StringBuilder: void <init>()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "458"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, specialinvoke $stack85.<java.lang.StringBuilder: void <init>()>(), 458)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: void close()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "381"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: void close()>(), 381)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack41 = (java.util.Map) context, 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language'), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack44.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack45, uri#17)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "278"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack44.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack45, uri#17), 278)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "l8 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(alternateLink, httpClient, linksFollowed#4)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "378"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "355"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "184"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "options := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = virtualinvoke options.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "63"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)","(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, $stack2 = virtualinvoke options.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>(), 63)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack21 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "224"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack21 = (java.util.Map) context, 224)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "map := @parameter0: java.util.Map",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke this.<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>($stack21), 224)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke map.<java.util.Map: java.lang.Object get(java.lang.Object)>('')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>",
  "line": "300"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke this.<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>($stack21), 224)","(<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>, $stack8 = interfaceinvoke map.<java.util.Map: java.lang.Object get(java.lang.Object)>(''), 300)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack52 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "254"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack52 = (java.util.Map) context, 254)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack52.<java.util.Map: java.lang.Object get(java.lang.Object)>('@vocab')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "254"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack52.<java.util.Map: java.lang.Object get(java.lang.Object)>('@vocab'), 254)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if uri#17 != null goto $stack54 = uri#17 instanceof java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "255"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "372"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.net.URL",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(url)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "368"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(url), 368)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "l8 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(alternateLink, httpClient, linksFollowed#4)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "378"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "355"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "document := @parameter1: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.RemoteDocument",
  "method": "<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, specialinvoke $stack20.<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>(url, $stack22), 59)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object document> = document",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.RemoteDocument",
  "method": "<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>",
  "line": "23"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, specialinvoke $stack20.<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>(url, $stack22), 59)","(<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>, this.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object document> = document, 23)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "184"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "options := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)","(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, $stack2 = virtualinvoke options.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>(), 63)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String base>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>",
  "line": "258"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)","(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, $stack2 = virtualinvoke options.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>(), 63)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack18 = context instanceof com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "186"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack18 = context instanceof com.github.jsonldjava.core.Context, 186)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack69 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "229"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack69 = (java.util.Map) context, 229)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient> = $stack6",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "93"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)","(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>, this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient> = $stack6, 93)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack41 = (java.util.Map) context, 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language'), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack43 = uri#17 instanceof java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "275"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack43 = uri#17 instanceof java.lang.String, 275)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack43 == 0 goto $stack44 = new com.github.jsonldjava.core.JsonLdError",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "275"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack20 = context instanceof java.util.Map",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "220"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack20 = context instanceof java.util.Map, 220)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack20 != 0 goto $stack21 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "220"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "372"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.net.URL",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.net.URL",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack33 = virtualinvoke url.<java.net.URL: java.lang.String getAuthority()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "406"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack33 = virtualinvoke url.<java.net.URL: java.lang.String getAuthority()>(), 406)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack87 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@vocab')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "458"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack87 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@vocab'), 458)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack85 = new java.lang.StringBuilder",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "458"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, specialinvoke $stack85.<java.lang.StringBuilder: void <init>()>(), 458)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack85.<java.lang.StringBuilder: void <init>()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "458"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, specialinvoke $stack85.<java.lang.StringBuilder: void <init>()>(), 458)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object put(java.lang.Object,java.lang.Object)>('@vocab', uri#17)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "259"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object put(java.lang.Object,java.lang.Object)>('@vocab', uri#17), 259)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object remove(java.lang.Object)>('@vocab')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "256"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object remove(java.lang.Object)>('@vocab'), 256)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "559"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack19 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 559)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: void close()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "378"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: void close()>(), 378)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.RemoteDocument",
  "method": "<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, specialinvoke $stack20.<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>(url, $stack22), 59)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.github.jsonldjava.core.RemoteDocument: java.lang.String documentUrl> = url",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.RemoteDocument",
  "method": "<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>",
  "line": "22"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, specialinvoke $stack20.<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>(url, $stack22), 59)","(<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>, this.<com.github.jsonldjava.core.RemoteDocument: java.lang.String documentUrl> = url, 22)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "339"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 339)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack38 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "547"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack38 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 547)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack99 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "449"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack99 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 449)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if context != null goto $stack18 = context instanceof com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "183"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.RemoteDocument",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.RemoteDocument",
  "method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object document>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.RemoteDocument",
  "method": "<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>",
  "line": "41"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: void close()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "381"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: void close()>(), 381)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack13 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "386"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack13 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>(), 386)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack21 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "224"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack21 = (java.util.Map) context, 224)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "map := @parameter0: java.util.Map",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke this.<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>($stack21), 224)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = interfaceinvoke map.<java.util.Map: boolean containsKey(java.lang.Object)>('')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>",
  "line": "296"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke this.<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>($stack21), 224)","(<com.github.jsonldjava.core.Context: void checkEmptyKey(java.util.Map)>, $stack2 = interfaceinvoke map.<java.util.Map: boolean containsKey(java.lang.Object)>(''), 296)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack41 = (java.util.Map) context, 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language'), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if uri#17 != null goto $stack43 = uri#17 instanceof java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "273"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp = localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "176"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp = localContext, 176)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack125.<java.util.List: boolean add(java.lang.Object)>(temp)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "178"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, interfaceinvoke $stack125.<java.util.List: boolean add(java.lang.Object)>(temp), 178)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "url := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack27.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object,java.lang.Throwable)>($stack28, url, e)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "61"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, specialinvoke $stack27.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object,java.lang.Throwable)>($stack28, url, e), 61)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = specialinvoke this.<java.util.LinkedHashMap: java.lang.Object clone()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "892"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)","(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>, $stack2 = specialinvoke this.<java.util.LinkedHashMap: java.lang.Object clone()>(), 892)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rval = (com.github.jsonldjava.core.Context) $stack2",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "892"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "173"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient> = $stack6",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "93"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)","(<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>, this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient> = $stack6, 93)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "559"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack19 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 559)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "291"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack32 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: java.lang.Object next()>(), 291)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd#70 = (java.lang.String) $stack32",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "291"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd#70 = (java.lang.String) $stack32, 291)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "184"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "options := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = virtualinvoke options.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "63"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)","(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, $stack2 = virtualinvoke options.<com.github.jsonldjava.core.JsonLdOptions: java.lang.String getBase()>(), 63)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack27 = (java.util.Map) context, 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack28 = interfaceinvoke $stack27.<java.util.Map: java.util.Set keySet()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, nextRemoteContexts#57 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>(), 284)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack30 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: boolean hasNext()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "284"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack30 = interfaceinvoke nextRemoteContexts#57.<java.util.Iterator: boolean hasNext()>(), 284)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack18 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "380"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack18 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>(), 380)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = interfaceinvoke $stack18.<org.apache.http.HttpEntity: java.io.InputStream getContent()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "380"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack19 = interfaceinvoke $stack18.<org.apache.http.HttpEntity: java.io.InputStream getContent()>(), 380)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack11 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>($stack10), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke tmp$405594718.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(input, 0, $stack10)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>",
  "line": "104"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack11 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>($stack10), 353)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromInputStream(java.io.InputStream)>, specialinvoke tmp$405594718.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(input, 0, $stack10), 104)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = specialinvoke this.<java.util.LinkedHashMap: java.lang.Object clone()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "892"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)","(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>, $stack2 = specialinvoke this.<java.util.LinkedHashMap: java.lang.Object clone()>(), 892)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rval = (com.github.jsonldjava.core.Context) $stack2",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "892"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "184"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "options := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "62"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)","(<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>, this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options> = options, 62)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "372"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object remove(java.lang.Object)>('@vocab')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "256"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object remove(java.lang.Object)>('@vocab'), 256)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp = localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "176"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp = localContext, 176)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack125.<java.util.List: boolean add(java.lang.Object)>(temp)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "178"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, interfaceinvoke $stack125.<java.util.List: boolean add(java.lang.Object)>(temp), 178)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack52 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "254"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack52 = (java.util.Map) context, 254)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack52.<java.util.Map: java.lang.Object get(java.lang.Object)>('@vocab')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "254"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack52.<java.util.Map: java.lang.Object get(java.lang.Object)>('@vocab'), 254)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if uri#17 != null goto $stack54 = uri#17 instanceof java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "255"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "388"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "header = l2[l4]",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "411"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack15 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.StatusLine getStatusLine()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "366"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, $stack15 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.StatusLine getStatusLine()>(), 366)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "status = interfaceinvoke $stack15.<org.apache.http.StatusLine: int getStatusCode()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "366"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, status = interfaceinvoke $stack15.<org.apache.http.StatusLine: int getStatusCode()>(), 366)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack22 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "253"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack22 = (java.util.Map) context, 253)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack23 = interfaceinvoke $stack22.<java.util.Map: boolean containsKey(java.lang.Object)>('@vocab')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "253"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack23 = interfaceinvoke $stack22.<java.util.Map: boolean containsKey(java.lang.Object)>('@vocab'), 253)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack23 == 0 goto $stack24 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "253"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack25 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@vocab')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "555"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack25 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@vocab'), 555)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack24 = new java.lang.StringBuilder",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "555"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, specialinvoke $stack24.<java.lang.StringBuilder: void <init>()>(), 555)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "184"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack123 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 184)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "opts := @parameter0: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>",
  "line": "40"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack122.<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>($stack123), 184)","(<com.github.jsonldjava.core.Context: void <init>(com.github.jsonldjava.core.JsonLdOptions)>, specialinvoke this.<com.github.jsonldjava.core.Context: void init(com.github.jsonldjava.core.JsonLdOptions)>(opts), 40)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "339"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 339)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack58 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>",
  "line": "538"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, type#14 = virtualinvoke this.<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>($stack191, 0, 1, context, defined), 365)","(<com.github.jsonldjava.core.Context: java.lang.String expandIri(java.lang.String,boolean,boolean,java.util.Map,java.util.Map)>, $stack58 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 538)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>",
  "line": "339"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke result.<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>($stack40, rd#70, uri#48), 289)","(<com.github.jsonldjava.core.Context: void createTermDefinition(java.util.Map,java.lang.String,java.util.Map)>, $stack17 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 339)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack52 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "254"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack52 = (java.util.Map) context, 254)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack52.<java.util.Map: java.lang.Object get(java.lang.Object)>('@vocab')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "254"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack52.<java.util.Map: java.lang.Object get(java.lang.Object)>('@vocab'), 254)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack54 = uri#17 instanceof java.lang.String",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "257"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack54 = uri#17 instanceof java.lang.String, 257)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack54 == 0 goto $stack55 = new com.github.jsonldjava.core.JsonLdError",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "257"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "l8 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(alternateLink, httpClient, linksFollowed#4)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "378"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "355"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "document := @parameter1: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.RemoteDocument",
  "method": "<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, specialinvoke $stack20.<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>(url, $stack22), 59)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object document> = document",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.RemoteDocument",
  "method": "<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>",
  "line": "23"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, specialinvoke $stack20.<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>(url, $stack22), 59)","(<com.github.jsonldjava.core.RemoteDocument: void <init>(java.lang.String,java.lang.Object)>, this.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object document> = document, 23)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "895"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)","(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>, $stack4 = this.<com.github.jsonldjava.core.Context: java.util.Map termDefinitions>, 895)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack3.<java.util.LinkedHashMap: void <init>(java.util.Map)>($stack4)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>",
  "line": "895"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)","(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>, specialinvoke $stack3.<java.util.LinkedHashMap: void <init>(java.util.Map)>($stack4), 895)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "388"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "header = l2[l4]",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "411"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, header = l2[l4], 411)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "389"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack21 = interfaceinvoke header.<org.apache.http.Header: java.lang.String getName()>(), 389)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack22 = virtualinvoke $stack21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>('link')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "389"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack22 = virtualinvoke $stack21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>('link'), 389)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "388"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l2 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.Header[] getAllHeaders()>(), 388)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "l3 = lengthof l2",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "388"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, l3 = lengthof l2, 388)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object put(java.lang.Object,java.lang.Object)>('@base', uri#17)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "236"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object put(java.lang.Object,java.lang.Object)>('@base', uri#17), 236)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "199"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack110.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack111, uri), 199)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack101 = remoteContext instanceof java.util.Map",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "207"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack101 = remoteContext instanceof java.util.Map, 207)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack41 = (java.util.Map) context, 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "272"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri#17 = interfaceinvoke $stack41.<java.util.Map: java.lang.Object get(java.lang.Object)>('@language'), 272)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack44.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack45, uri#17)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "278"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, specialinvoke $stack44.<com.github.jsonldjava.core.JsonLdError: void <init>(com.github.jsonldjava.core.JsonLdError$Error,java.lang.Object)>($stack45, uri#17), 278)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "response := @parameter1: org.apache.http.client.methods.CloseableHttpResponse",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack13 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>",
  "line": "386"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, alternateLink = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>(url, response), 372)","(<com.github.jsonldjava.utils.JsonUtils: java.net.URL alternateLink(java.net.URL,org.apache.http.client.methods.CloseableHttpResponse)>, $stack13 = interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: org.apache.http.HttpEntity getEntity()>(), 386)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack22 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "253"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack22 = (java.util.Map) context, 253)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack23 = interfaceinvoke $stack22.<java.util.Map: boolean containsKey(java.lang.Object)>('@vocab')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "253"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack23 = interfaceinvoke $stack22.<java.util.Map: boolean containsKey(java.lang.Object)>('@vocab'), 253)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack23 == 0 goto $stack24 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "253"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = (java.lang.String) $stack112",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "194"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = (java.lang.String) $stack112, 194)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "localContext := @parameter0: java.lang.Object",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack13 = localContext instanceof java.util.List, 175)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = (java.util.List) localContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack14 = (java.util.List) localContext, 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "181"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, temp#4 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>(), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "292"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, context = interfaceinvoke temp#4.<java.util.Iterator: java.lang.Object next()>(), 292)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack24 = (java.util.Map) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "271"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack24 = (java.util.Map) context, 271)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack25 = interfaceinvoke $stack24.<java.util.Map: boolean containsKey(java.lang.Object)>('@language')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "271"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack25 = interfaceinvoke $stack24.<java.util.Map: boolean containsKey(java.lang.Object)>('@language'), 271)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack25 == 0 goto $stack26 = new java.util.LinkedHashMap",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "271"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "uri = null",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "191"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "196"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, uri = staticinvoke <com.github.jsonldjava.utils.JsonLdUrl: java.lang.String resolve(java.lang.String,java.lang.String)>(uri, $stack92), 196)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "206"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, remoteContext = virtualinvoke rd.<com.github.jsonldjava.core.RemoteDocument: java.lang.Object getDocument()>(), 206)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack106 = (java.util.Map) remoteContext",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack106 = (java.util.Map) remoteContext, 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context')",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "214"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, tempContext = interfaceinvoke $stack106.<java.util.Map: java.lang.Object get(java.lang.Object)>('@context'), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = specialinvoke result.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>(tempContext, nextRemoteContexts, 1)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "217"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack112 = virtualinvoke result.<com.github.jsonldjava.core.Context: java.lang.Object get(java.lang.Object)>('@base'), 194)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.Context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, result = virtualinvoke this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context clone()>(), 173)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack97 = this.<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.JsonLdOptions options>, 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.JsonLdOptions",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader documentLoader>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.JsonLdOptions",
  "method": "<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>",
  "line": "290"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "205"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack98 = virtualinvoke $stack97.<com.github.jsonldjava.core.JsonLdOptions: com.github.jsonldjava.core.DocumentLoader getDocumentLoader()>(), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.github.jsonldjava.core.DocumentLoader",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "result = this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient httpClient>",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>",
  "line": "91"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.DocumentLoader",
  "method": "<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>",
  "line": "72"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack11 = virtualinvoke this.<com.github.jsonldjava.core.DocumentLoader: org.apache.http.impl.client.CloseableHttpClient getHttpClient()>(), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "httpClient := @parameter1: org.apache.http.impl.client.CloseableHttpClient",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "-1"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request)",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "365"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, response = virtualinvoke httpClient.<org.apache.http.impl.client.CloseableHttpClient: org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(request), 365)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: void close()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.utils.JsonUtils",
  "method": "<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>",
  "line": "378"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, rd = virtualinvoke $stack98.<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>(uri), 205)","(<com.github.jsonldjava.core.DocumentLoader: com.github.jsonldjava.core.RemoteDocument loadDocument(java.lang.String)>, $stack12 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>($stack10, $stack11), 72)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromURL(java.net.URL,org.apache.http.impl.client.CloseableHttpClient)>, $stack5 = staticinvoke <com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>(url, httpClient, 0), 355)","(<com.github.jsonldjava.utils.JsonUtils: java.lang.Object fromJsonLdViaHttpUri(java.net.URL,org.apache.http.impl.client.CloseableHttpClient,int)>, interfaceinvoke response.<org.apache.http.client.methods.CloseableHttpResponse: void close()>(), 378)"]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack91 = virtualinvoke $stack90.<java.util.regex.Matcher: boolean matches()>()",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "193"
},
"stackTrace": ["(<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>, $stack91 = virtualinvoke $stack90.<java.util.regex.Matcher: boolean matches()>(), 193)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack91 != 0 goto $stack92 = (java.lang.String) context",
"location": {
  "file": "",
  "class": "com.github.jsonldjava.core.Context",
  "method": "<com.github.jsonldjava.core.Context: com.github.jsonldjava.core.Context parse(java.lang.Object,java.util.List,boolean)>",
  "line": "193"
},
"stackTrace": [""]
}]
}
}

]
