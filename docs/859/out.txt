SOURCE=>BASE: Node(<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>,$stack3 = new java.lang.String,144,SourceNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($stack5, $stack4), 144)) => Node(<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>,body = $stack3,144,SourceNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack11 = virtualinvoke body.<java.lang.String: int length()>(), 149)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack11 = virtualinvoke body.<java.lang.String: int length()>(), 149) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack11 = virtualinvoke body.<java.lang.String: int length()>(), 149))
SINK=>BASE: Node(<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>,$stack12 = virtualinvoke body.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", ""),149,SourceNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack12 = virtualinvoke body.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\n', ''), 149)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack11 = virtualinvoke body.<java.lang.String: int length()>(), 149)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack11 = virtualinvoke body.<java.lang.String: int length()>(), 149) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))

List(Node(<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>,body = $stack3,144,SourceNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack12 = virtualinvoke body.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\n', ''), 149)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0),2239,SimpleNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack12 = virtualinvoke body.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\n', ''), 149) => (<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>, $stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0), 2239)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack8 = virtualinvoke $stack5.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>($stack7),2240,SimpleNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack12 = virtualinvoke body.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\n', ''), 149)) => Node(<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>,$stack12 = virtualinvoke body.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", ""),149,SinkNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack12 = virtualinvoke body.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\n', ''), 149)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack11 = virtualinvoke body.<java.lang.String: int length()>(), 149)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SimpleNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack11 = virtualinvoke body.<java.lang.String: int length()>(), 149) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SimpleNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack11 = virtualinvoke body.<java.lang.String: int length()>(), 149)) => Node(<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>,$stack13 = virtualinvoke $stack12.<java.lang.String: int length()>(),149,SinkNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack13 = virtualinvoke $stack12.<java.lang.String: int length()>(), 149)) => Node(<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>,$stack14 = $stack11 - $stack13,149,SinkNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body()>, $stack8 = staticinvoke <com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack14 = $stack11 - $stack13, 149)))

List(Node(<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>,$stack3 = new java.lang.String,144,SourceNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($stack5, $stack4), 144)) => Node(<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>,body = $stack3,144,SourceNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, body = $stack3, 144)) => Node(<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>,$stack12 = virtualinvoke body.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", ""),149,SinkNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack12 = virtualinvoke body.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\n', ''), 149)) => Node(<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>,$stack13 = virtualinvoke $stack12.<java.lang.String: int length()>(),149,SinkNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack13 = virtualinvoke $stack12.<java.lang.String: int length()>(), 149)) => Node(<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>,$stack14 = $stack11 - $stack13,149,SinkNode, path: (<com.jcabi.http.request.DefaultResponse: java.lang.String body_aroundBody8(com.jcabi.http.request.DefaultResponse,org.aspectj.lang.JoinPoint)>, $stack14 = $stack11 - $stack13, 149)))

