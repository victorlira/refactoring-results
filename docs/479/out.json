[
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack31 = interfaceinvoke i.<java.util.Iterator: boolean hasNext()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack31 = interfaceinvoke i.<java.util.Iterator: boolean hasNext()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack31 == 0 goto (branch)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack27 = (foodev.jsondiff.jsonwrap.JzonObject) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack27 = (foodev.jsondiff.jsonwrap.JzonObject) el, 348)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack28 = interfaceinvoke $stack27.<foodev.jsondiff.jsonwrap.JzonObject: java.util.Collection entrySet()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack28 = interfaceinvoke $stack27.<foodev.jsondiff.jsonwrap.JzonObject: java.util.Collection entrySet()>(), 348)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28), 348)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28), 348)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6), 369)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack27 = (foodev.jsondiff.jsonwrap.JzonObject) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack27 = (foodev.jsondiff.jsonwrap.JzonObject) el, 348)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack28 = interfaceinvoke $stack27.<foodev.jsondiff.jsonwrap.JzonObject: java.util.Collection entrySet()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack28 = interfaceinvoke $stack27.<foodev.jsondiff.jsonwrap.JzonObject: java.util.Collection entrySet()>(), 348)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28), 348)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack27 = (foodev.jsondiff.jsonwrap.JzonObject) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack27 = (foodev.jsondiff.jsonwrap.JzonObject) el, 348)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack28 = interfaceinvoke $stack27.<foodev.jsondiff.jsonwrap.JzonObject: java.util.Collection entrySet()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack28 = interfaceinvoke $stack27.<foodev.jsondiff.jsonwrap.JzonObject: java.util.Collection entrySet()>(), 348)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28), 348)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack31 = interfaceinvoke i.<java.util.Iterator: boolean hasNext()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack31 = interfaceinvoke i.<java.util.Iterator: boolean hasNext()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack31 == 0 goto (branch)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6), 369)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack27 = (foodev.jsondiff.jsonwrap.JzonObject) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack27 = (foodev.jsondiff.jsonwrap.JzonObject) el, 348)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack28 = interfaceinvoke $stack27.<foodev.jsondiff.jsonwrap.JzonObject: java.util.Collection entrySet()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack28 = interfaceinvoke $stack27.<foodev.jsondiff.jsonwrap.JzonObject: java.util.Collection entrySet()>(), 348)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28), 348)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack26 = <foodev.jsondiff.JsonDiff: java.util.Comparator ENTRY_COMPARATOR>",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack28 = interfaceinvoke $stack27.<foodev.jsondiff.jsonwrap.JzonObject: java.util.Collection entrySet()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack28 = interfaceinvoke $stack27.<foodev.jsondiff.jsonwrap.JzonObject: java.util.Collection entrySet()>(), 348)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28), 348)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i#6 = i#6 + 1",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "361"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6), 363)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6), 369)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack27 = (foodev.jsondiff.jsonwrap.JzonObject) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack27 = (foodev.jsondiff.jsonwrap.JzonObject) el, 348)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack28 = interfaceinvoke $stack27.<foodev.jsondiff.jsonwrap.JzonObject: java.util.Collection entrySet()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack28 = interfaceinvoke $stack27.<foodev.jsondiff.jsonwrap.JzonObject: java.util.Collection entrySet()>(), 348)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28), 348)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack27 = (foodev.jsondiff.jsonwrap.JzonObject) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack27 = (foodev.jsondiff.jsonwrap.JzonObject) el, 348)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack28 = interfaceinvoke $stack27.<foodev.jsondiff.jsonwrap.JzonObject: java.util.Collection entrySet()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack28 = interfaceinvoke $stack27.<foodev.jsondiff.jsonwrap.JzonObject: java.util.Collection entrySet()>(), 348)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "348"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, interfaceinvoke memb.<java.util.Set: boolean addAll(java.util.Collection)>($stack28), 348)"]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "343"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "363"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6), 363)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>(), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = (java.lang.String) $stack34",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack35 = (java.lang.String) $stack34, 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>, 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed), 668)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>(), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = (java.lang.String) $stack34",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack35 = (java.lang.String) $stack34, 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35), 352)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e#7 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: int size()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "361"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e#7 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: int size()>(), 361)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if i#6 >= e#7 goto return",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "361"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>(), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = (java.lang.String) $stack34",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack35 = (java.lang.String) $stack34, 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>, 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed), 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack6 = i * 31",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack6 = i * 31, 669)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = $stack6 + $stack7",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = i * 31",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "671"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack9 = i * 31, 671)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = $stack9 + $stack8",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "671"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack11 = $stack9 + $stack8, 671)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = $stack11 + $stack10",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "671"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "366"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "val := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$Leaf",
  "method": "<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<foodev.jsondiff.JsonDiff$Leaf: foodev.jsondiff.jsonwrap.JzonElement val> = val",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$Leaf",
  "method": "<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>",
  "line": "511"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)","(<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>, this.<foodev.jsondiff.JsonDiff$Leaf: foodev.jsondiff.jsonwrap.JzonElement val> = val, 511)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6), 363)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.jsonwrap.JzonElement el> = el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>",
  "line": "661"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6), 363)","(<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>, this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.jsonwrap.JzonElement el> = el, 661)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6), 369)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "363"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6), 363)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>(), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = (java.lang.String) $stack34",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack35 = (java.lang.String) $stack34, 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>, 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed), 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack6 = i * 31",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack6 = i * 31, 669)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = $stack6 + $stack7",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = i * 31",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "671"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack9 = i * 31, 671)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = $stack9 + $stack8",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "671"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack11 = $stack9 + $stack8, 671)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = $stack11 + $stack10",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "671"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "366"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>(), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = (java.lang.String) $stack34",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack35 = (java.lang.String) $stack34, 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>, 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed), 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack6 = i * 31",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack6 = i * 31, 669)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = $stack6 + $stack7",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = interfaceinvoke el.<foodev.jsondiff.jsonwrap.JzonElement: boolean isJsonObject()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "345"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack10 = interfaceinvoke el.<foodev.jsondiff.jsonwrap.JzonElement: boolean isJsonObject()>(), 345)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack10 == 0 goto $stack11 = interfaceinvoke el.<foodev.jsondiff.jsonwrap.JzonElement: boolean isJsonArray()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "345"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6), 369)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "363"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6), 363)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>, 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed), 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack6 = i * 31",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack6 = i * 31, 669)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = $stack6 + $stack7",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>(), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = (java.lang.String) $stack34",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack35 = (java.lang.String) $stack34, 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>, 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed), 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack6 = i * 31",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack6 = i * 31, 669)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = $stack6 + $stack7",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e#7 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: int size()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "361"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e#7 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: int size()>(), 361)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if i#6 >= e#7 goto return",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "361"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6), 369)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6), 363)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.jsonwrap.JzonElement el> = el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>",
  "line": "661"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6), 363)","(<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>, this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.jsonwrap.JzonElement el> = el, 661)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6), 369)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = interfaceinvoke el.<foodev.jsondiff.jsonwrap.JzonElement: boolean isJsonObject()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "345"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack10 = interfaceinvoke el.<foodev.jsondiff.jsonwrap.JzonElement: boolean isJsonObject()>(), 345)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack10 == 0 goto $stack11 = interfaceinvoke el.<foodev.jsondiff.jsonwrap.JzonElement: boolean isJsonArray()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "345"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>(), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = (java.lang.String) $stack34",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack35 = (java.lang.String) $stack34, 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>, 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed), 668)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6), 369)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "staticinvoke <foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>(newParent#8, $stack14, leaves, arrs)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, staticinvoke <foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>(newParent#8, $stack14, leaves, arrs), 369)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>(), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = (java.lang.String) $stack34",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack35 = (java.lang.String) $stack34, 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35), 352)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6), 369)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "staticinvoke <foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>(newParent#8, $stack14, leaves, arrs)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, staticinvoke <foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>(newParent#8, $stack14, leaves, arrs), 369)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>(), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = (java.lang.String) $stack34",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack35 = (java.lang.String) $stack34, 352)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "key := @parameter1: java.lang.String",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ObjNode",
  "method": "<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<foodev.jsondiff.JsonDiff$ObjNode: java.lang.String key> = key",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ObjNode",
  "method": "<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>",
  "line": "630"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35), 352)","(<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>, this.<foodev.jsondiff.JsonDiff$ObjNode: java.lang.String key> = key, 630)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>(), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = (java.lang.String) $stack34",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack35 = (java.lang.String) $stack34, 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>, 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed), 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack6 = i * 31",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack6 = i * 31, 669)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = $stack6 + $stack7",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = i * 31",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "671"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack9 = i * 31, 671)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = $stack9 + $stack8",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "671"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack11 = $stack9 + $stack8, 671)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "val := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$Leaf",
  "method": "<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<foodev.jsondiff.JsonDiff$Leaf: foodev.jsondiff.jsonwrap.JzonElement val> = val",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$Leaf",
  "method": "<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>",
  "line": "511"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)","(<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>, this.<foodev.jsondiff.JsonDiff$Leaf: foodev.jsondiff.jsonwrap.JzonElement val> = val, 511)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6), 369)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "343"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6), 369)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "363"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6), 363)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>, 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed), 668)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6), 363)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.jsonwrap.JzonElement el> = el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>",
  "line": "661"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6), 363)","(<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>, this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.jsonwrap.JzonElement el> = el, 661)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e#7 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: int size()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "361"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e#7 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: int size()>(), 361)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if i#6 >= e#7 goto return",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "361"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>(), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = (java.lang.String) $stack34",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack35 = (java.lang.String) $stack34, 352)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "key := @parameter1: java.lang.String",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ObjNode",
  "method": "<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<foodev.jsondiff.JsonDiff$ObjNode: java.lang.String key> = key",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ObjNode",
  "method": "<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>",
  "line": "630"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35), 352)","(<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>, this.<foodev.jsondiff.JsonDiff$ObjNode: java.lang.String key> = key, 630)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = interfaceinvoke el.<foodev.jsondiff.jsonwrap.JzonElement: boolean isJsonObject()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "345"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack10 = interfaceinvoke el.<foodev.jsondiff.jsonwrap.JzonElement: boolean isJsonObject()>(), 345)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack10 == 0 goto $stack11 = interfaceinvoke el.<foodev.jsondiff.jsonwrap.JzonElement: boolean isJsonArray()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "345"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6), 369)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "363"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6), 363)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>, 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed), 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack6 = i * 31",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack6 = i * 31, 669)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = $stack6 + $stack7",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = i * 31",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "671"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack9 = i * 31, 671)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = $stack9 + $stack8",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "671"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack11 = $stack9 + $stack8, 671)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = $stack11 + $stack10",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "671"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "366"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "363"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6), 363)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6), 369)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "val := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$Leaf",
  "method": "<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<foodev.jsondiff.JsonDiff$Leaf: foodev.jsondiff.jsonwrap.JzonElement val> = val",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$Leaf",
  "method": "<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>",
  "line": "511"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)","(<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>, this.<foodev.jsondiff.JsonDiff$Leaf: foodev.jsondiff.jsonwrap.JzonElement val> = val, 511)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack25 = new java.util.TreeSet",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack25.<java.util.TreeSet: void <init>(java.util.Comparator)>($stack26), 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "memb = $stack25",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "347"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb = $stack25, 347)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack34 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>(), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = (java.lang.String) $stack34",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack35 = (java.lang.String) $stack34, 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "352"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack33.<foodev.jsondiff.JsonDiff$ObjNode: void <init>(foodev.jsondiff.JsonDiff$Node,java.lang.String)>(parent, $stack35), 352)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>, 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed), 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack6 = i * 31",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack6 = i * 31, 669)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = $stack6 + $stack7",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = i * 31",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "671"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack9 = i * 31, 671)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = $stack9 + $stack8",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "671"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack11 = $stack9 + $stack8, 671)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "350"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, i = interfaceinvoke memb.<java.util.Set: java.util.Iterator iterator()>(), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack32 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>(), 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "e = (java.util.Map$Entry) $stack32",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "376"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, e = (java.util.Map$Entry) $stack32, 376)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>()",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack36 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>(), 353)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "353"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack37 = (foodev.jsondiff.jsonwrap.JzonElement) $stack36, 353)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "343"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6), 369)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "el := @parameter1: foodev.jsondiff.jsonwrap.JzonElement",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack8.<foodev.jsondiff.JsonDiff$Leaf: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement)>(parent, el), 343)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "363"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, specialinvoke $stack13.<foodev.jsondiff.JsonDiff$ArrNode: void <init>(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,int)>(parent, el, i#6), 363)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack3 = this.<foodev.jsondiff.JsonDiff$ArrNode: foodev.jsondiff.JsonDiff$Node parent>, 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "668"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, i = virtualinvoke $stack3.<foodev.jsondiff.JsonDiff$Node: int doHash(boolean)>(indexed), 668)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack6 = i * 31",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack6 = i * 31, 669)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "i = $stack6 + $stack7",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "669"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = i * 31",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "671"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack9 = i * 31, 671)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = $stack9 + $stack8",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff$ArrNode",
  "method": "<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>",
  "line": "671"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack17 = virtualinvoke newParent#8.<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>(1), 366)","(<foodev.jsondiff.JsonDiff$ArrNode: int doHash(boolean)>, $stack11 = $stack9 + $stack8, 671)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "359"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, memb#5 = (foodev.jsondiff.jsonwrap.JzonArray) el, 359)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, $stack14 = interfaceinvoke memb#5.<foodev.jsondiff.jsonwrap.JzonArray: foodev.jsondiff.jsonwrap.JzonElement get(int)>(i#6), 369)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "staticinvoke <foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>(newParent#8, $stack14, leaves, arrs)",
"location": {
  "file": "",
  "class": "foodev.jsondiff.JsonDiff",
  "method": "<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>",
  "line": "369"
},
"stackTrace": ["(<foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>, staticinvoke <foodev.jsondiff.JsonDiff: void findLeaves(foodev.jsondiff.JsonDiff$Node,foodev.jsondiff.jsonwrap.JzonElement,java.util.List,java.util.HashMap)>(newParent#8, $stack14, leaves, arrs), 369)"]
}]
}
}

]
