[
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request)",
"location": {
  "file": "",
  "class": "org.hdiv.components.support.OutcomeTargetComponentProcessor",
  "method": "<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>",
  "line": "47"
},
"stackTrace": ["(<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 47)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "urlData = virtualinvoke $stack19.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack18, hdivParameter, request)",
"location": {
  "file": "",
  "class": "org.hdiv.components.support.OutcomeTargetComponentProcessor",
  "method": "<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>",
  "line": "48"
},
"stackTrace": ["(<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>, urlData = virtualinvoke $stack19.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack18, hdivParameter, request), 48)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack22 = virtualinvoke $stack21.<org.hdiv.urlProcessor.LinkUrlProcessor: boolean isHdivStateNecessary(org.hdiv.urlProcessor.UrlData)>(urlData)",
"location": {
  "file": "",
  "class": "org.hdiv.components.support.OutcomeTargetComponentProcessor",
  "method": "<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>",
  "line": "49"
},
"stackTrace": ["(<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>, $stack22 = virtualinvoke $stack21.<org.hdiv.urlProcessor.LinkUrlProcessor: boolean isHdivStateNecessary(org.hdiv.urlProcessor.UrlData)>(urlData), 49)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if $stack22 == 0 goto (branch)",
"location": {
  "file": "",
  "class": "org.hdiv.components.support.OutcomeTargetComponentProcessor",
  "method": "<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>",
  "line": "49"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request)",
"location": {
  "file": "",
  "class": "org.hdiv.components.support.OutcomeTargetComponentProcessor",
  "method": "<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>",
  "line": "47"
},
"stackTrace": ["(<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 47)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "urlData = virtualinvoke $stack19.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack18, hdivParameter, request)",
"location": {
  "file": "",
  "class": "org.hdiv.components.support.OutcomeTargetComponentProcessor",
  "method": "<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>",
  "line": "48"
},
"stackTrace": ["(<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>, urlData = virtualinvoke $stack19.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack18, hdivParameter, request), 48)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request)",
"location": {
  "file": "",
  "class": "org.hdiv.components.support.OutcomeTargetComponentProcessor",
  "method": "<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>",
  "line": "47"
},
"stackTrace": ["(<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>, hdivParameter = staticinvoke <org.hdiv.util.HDIVUtil: java.lang.String getHdivStateParameterName(javax.servlet.http.HttpServletRequest)>(request), 47)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "urlData = virtualinvoke $stack19.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack18, hdivParameter, request)",
"location": {
  "file": "",
  "class": "org.hdiv.components.support.OutcomeTargetComponentProcessor",
  "method": "<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>",
  "line": "48"
},
"stackTrace": ["(<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>, urlData = virtualinvoke $stack19.<org.hdiv.urlProcessor.LinkUrlProcessor: org.hdiv.urlProcessor.UrlData createUrlData(java.lang.String,org.hdiv.util.Method,java.lang.String,javax.servlet.http.HttpServletRequest)>(url, $stack18, hdivParameter, request), 48)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack28 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: java.lang.String getUrlWithoutContextPath()>()",
"location": {
  "file": "",
  "class": "org.hdiv.components.support.OutcomeTargetComponentProcessor",
  "method": "<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>",
  "line": "61"
},
"stackTrace": ["(<org.hdiv.components.support.OutcomeTargetComponentProcessor: void processOutcomeTargetLinkComponent(javax.faces.context.FacesContext,javax.faces.component.UIOutcomeTarget)>, $stack28 = virtualinvoke urlData.<org.hdiv.urlProcessor.UrlData: java.lang.String getUrlWithoutContextPath()>(), 61)"]
}]
}
}

]
