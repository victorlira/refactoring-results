SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms>,34,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(),24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3,24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3, 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack6 = new com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings,22,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack6.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>(), 22)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,settings = $stack6,22,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, settings = $stack6, 22)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms>,34,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(),24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3,24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3, 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx>,42,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401)) => Node(<java.lang.Integer: java.lang.String toString(int)>,specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1), 403))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(),24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3,24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3, 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>,JMeterProcessBuilder = tmp$2005320416,93,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, JMeterProcessBuilder = tmp$2005320416, 93)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>,this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx> = 512,30,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack6.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>(), 22) => (<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>, this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx> = 512, 30)) => Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx>,42,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(),24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3,24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3, 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(),24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3,24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3, 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401)) => Node(<java.lang.Integer: java.lang.String toString(int)>,specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1), 403))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx>,42,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>,argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(),88,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,arguments := @parameter0: java.util.List,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,l2 = interfaceinvoke arguments.<java.util.List: java.util.Iterator iterator()>(),38,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, l2 = interfaceinvoke arguments.<java.util.List: java.util.Iterator iterator()>(), 38)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,$stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(),41,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(), 41)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,argument = (java.lang.String) $stack6,41,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, argument = (java.lang.String) $stack6, 41)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,interfaceinvoke $stack7.<java.util.List: boolean add(java.lang.Object)>(argument),39,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, interfaceinvoke $stack7.<java.util.List: boolean add(java.lang.Object)>(argument), 39))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>,JMeterProcessBuilder = tmp$2005320416,93,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, JMeterProcessBuilder = tmp$2005320416, 93)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,$stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,39,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, $stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 39)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,interfaceinvoke $stack7.<java.util.List: boolean add(java.lang.Object)>(argument),39,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, interfaceinvoke $stack7.<java.util.List: boolean add(java.lang.Object)>(argument), 39))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>,this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms> = 512,29,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack6.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>(), 22) => (<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>, this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms> = 512, 29)) => Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms>,34,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(),24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3,24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3, 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>,this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms> = 512,29,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack6.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>(), 22) => (<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>, this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms> = 512, 29)) => Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms>,34,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(),24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3,24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3, 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>,this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx> = 512,30,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack6.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>(), 22) => (<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>, this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx> = 512, 30)) => Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx>,42,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>,JMeterProcessBuilder = tmp$2005320416,93,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, JMeterProcessBuilder = tmp$2005320416, 93)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>,argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(),88,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,arguments := @parameter0: java.util.List,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,l2 = interfaceinvoke arguments.<java.util.List: java.util.Iterator iterator()>(),38,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, l2 = interfaceinvoke arguments.<java.util.List: java.util.Iterator iterator()>(), 38)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,$stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(),41,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(), 41)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,argument = (java.lang.String) $stack6,41,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, argument = (java.lang.String) $stack6, 41)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,interfaceinvoke $stack7.<java.util.List: boolean add(java.lang.Object)>(argument),39,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, interfaceinvoke $stack7.<java.util.List: boolean add(java.lang.Object)>(argument), 39))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack2 = new java.util.ArrayList,18,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack2.<java.util.ArrayList: void <init>()>(), 18)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,specialinvoke $stack2.<java.util.ArrayList: void <init>()>(),18,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack2.<java.util.ArrayList: void <init>()>(), 18)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,$stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,39,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, $stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 39)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,interfaceinvoke $stack7.<java.util.List: boolean add(java.lang.Object)>(argument),39,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, interfaceinvoke $stack7.<java.util.List: boolean add(java.lang.Object)>(argument), 39))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,$stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,39,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, $stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 39)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 57))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack2 = new java.util.ArrayList,18,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack2.<java.util.ArrayList: void <init>()>(), 18)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(),57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(), 57))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401)) => Node(<java.lang.Integer: java.lang.String toString(int)>,specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1), 403))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(),24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3,24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3, 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms>,34,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(),24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3,24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3, 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack6 = new com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings,22,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack6.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>(), 22)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,settings = $stack6,22,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, settings = $stack6, 22)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>,JMeterProcessBuilder = tmp$2005320416,93,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, JMeterProcessBuilder = tmp$2005320416, 93)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx>,42,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,$stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,39,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, $stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 39)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 57))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>,JMeterProcessBuilder = tmp$2005320416,93,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, JMeterProcessBuilder = tmp$2005320416, 93)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(),57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(), 57))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx>,42,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,$stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,39,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, $stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 39)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(),57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(), 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(),61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), 61)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,argument = (java.lang.String) $stack34,61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, argument = (java.lang.String) $stack34, 61)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,interfaceinvoke argumentsList.<java.util.List: boolean add(java.lang.Object)>(argument),58,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, interfaceinvoke argumentsList.<java.util.List: boolean add(java.lang.Object)>(argument), 58))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>,JMeterProcessBuilder = tmp$2005320416,93,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, JMeterProcessBuilder = tmp$2005320416, 93)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(),57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(), 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(),61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), 61)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,argument = (java.lang.String) $stack34,61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, argument = (java.lang.String) $stack34, 61)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,interfaceinvoke argumentsList.<java.util.List: boolean add(java.lang.Object)>(argument),58,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, interfaceinvoke argumentsList.<java.util.List: boolean add(java.lang.Object)>(argument), 58))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,$stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,39,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, $stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 39)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(),57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(), 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(),61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), 61)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,argument = (java.lang.String) $stack34,61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, argument = (java.lang.String) $stack34, 61))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack2 = new java.util.ArrayList,18,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack2.<java.util.ArrayList: void <init>()>(), 18)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(),57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(), 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(),61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), 61)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,argument = (java.lang.String) $stack34,61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, argument = (java.lang.String) $stack34, 61))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>,this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx> = 512,30,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack6.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>(), 22) => (<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>, this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx> = 512, 30)) => Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx>,42,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack6 = new com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings,22,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack6.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>(), 22)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,settings = $stack6,22,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, settings = $stack6, 22)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401)) => Node(<java.lang.Integer: java.lang.String toString(int)>,specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1), 403))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>,JMeterProcessBuilder = tmp$2005320416,93,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, JMeterProcessBuilder = tmp$2005320416, 93)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401)) => Node(<java.lang.Integer: java.lang.String toString(int)>,specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1), 403))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,$stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,39,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, $stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 39)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(),57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(), 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(),61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), 61)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,argument = (java.lang.String) $stack34,61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, argument = (java.lang.String) $stack34, 61)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,interfaceinvoke argumentsList.<java.util.List: boolean add(java.lang.Object)>(argument),58,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, interfaceinvoke argumentsList.<java.util.List: boolean add(java.lang.Object)>(argument), 58))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack2 = new java.util.ArrayList,18,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack2.<java.util.ArrayList: void <init>()>(), 18)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(),57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(), 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(),61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), 61)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,argument = (java.lang.String) $stack34,61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, argument = (java.lang.String) $stack34, 61)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,interfaceinvoke argumentsList.<java.util.List: boolean add(java.lang.Object)>(argument),58,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, interfaceinvoke argumentsList.<java.util.List: boolean add(java.lang.Object)>(argument), 58))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,$stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,39,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, $stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 39)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(),57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(), 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(),61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), 61)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,argument = (java.lang.String) $stack34,61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, argument = (java.lang.String) $stack34, 61))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>,JMeterProcessBuilder = tmp$2005320416,93,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, JMeterProcessBuilder = tmp$2005320416, 93)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack27 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(),57,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, l4 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>(), 57)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(),61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack34 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), 61)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,argument = (java.lang.String) $stack34,61,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, argument = (java.lang.String) $stack34, 61))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms>,34,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(),24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3,24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3, 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401)) => Node(<java.lang.Integer: java.lang.String toString(int)>,specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1), 403))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>,this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms> = 512,29,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack6.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>(), 22) => (<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>, this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms> = 512, 29)) => Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms>,34,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(),24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3,24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3, 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401)) => Node(<java.lang.Integer: java.lang.String toString(int)>,specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1), 403))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack6 = new com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings,22,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack6.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>(), 22)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,settings = $stack6,22,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, settings = $stack6, 22)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>,this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx> = 512,30,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack6.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>(), 22) => (<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>, this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx> = 512, 30)) => Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xmx>,42,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l2 = newarray (char)[l1],401,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l2 = newarray (char)[l1], 401)) => Node(<java.lang.Integer: java.lang.String toString(int)>,specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, specialinvoke $stack4.<java.lang.String: void <init>(char[],boolean)>(l2, 1), 403))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))
SINK=>BASE: Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(),25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack4 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXmx()>(), 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4,25,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes> = $stack4, 25)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>,50,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack16 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int maximumHeapSizeInMegaBytes>, 50)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))

SOURCE=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>,$stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>,222,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack50 = this.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: com.lazerycode.jmeter.configuration.ProxyConfiguration proxyConfiguration>, 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,this := @this: com.lazerycode.jmeter.configuration.ProxyConfiguration,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222)) => Node(<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>,$stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>,54,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack4 = this.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.Integer port>, 54)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack5 = neg l0,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack5 = neg l0, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5),403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack6 = staticinvoke <java.lang.Integer: int stringSize(int)>($stack5), 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = $stack6 + 1,403,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = $stack6 + 1, 403)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))
SINK=>BASE: Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>,this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms> = 512,29,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, specialinvoke $stack6.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>(), 22) => (<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: void <init>()>, this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms> = 512, 29)) => Node(<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>,$stack1 = this.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int xms>,34,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,$stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(),24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, $stack3 = virtualinvoke settings.<com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings: int getXms()>(), 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3,24,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$2005320416.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes> = $stack3, 24)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>,$stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>,49,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack9 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: int initialHeapSizeInMegaBytes>, 49)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, process = virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>(), 97) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.Process startProcess()>, $stack3 = specialinvoke this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>(), 65) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.lang.String[] constructArgumentsList()>, $stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack9), 49)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935)) => Node(<java.lang.Integer: java.lang.String toString(int)>,$stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0),400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, $stack3 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0), 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,l1 = $stack3,400,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, l1 = $stack3, 400)) => Node(<java.lang.Integer: java.lang.String toString(int)>,staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2),402,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, argumentsArray = virtualinvoke testArgs.<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>(), 88) => (<com.lazerycode.jmeter.configuration.JMeterArgumentsArray: java.util.List buildArgumentsArray()>, $stack51 = virtualinvoke $stack50.<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>(), 222) => (<com.lazerycode.jmeter.configuration.ProxyConfiguration: java.lang.String getPort()>, $stack5 = virtualinvoke $stack4.<java.lang.Integer: java.lang.String toString()>(), 54) => (<java.lang.Integer: java.lang.String toString()>, $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1), 935) => (<java.lang.Integer: java.lang.String toString(int)>, staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2), 402))

List(Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>,this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments> = $stack2,18,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, specialinvoke tmp$1083086553.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>($stack29), 93) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void <init>(com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings)>, this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments> = $stack2, 18)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,$stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,39,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, $stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 39)))

List(Node(<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>,JMeterProcessBuilder = tmp$1083086553,93,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, JMeterProcessBuilder = tmp$1083086553, 93)) => Node(<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>,virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray),95,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95)))

List(Node(<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>,JMeterProcessBuilder = tmp$1083086553,93,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, JMeterProcessBuilder = tmp$1083086553, 93)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,this := @this: com.lazerycode.jmeter.testrunner.JMeterProcessBuilder,-1,SimpleNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95)) => Node(<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>,$stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>,39,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95) => (<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>, $stack7 = this.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: java.util.List mainClassArguments>, 39)))

List(Node(<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>,JMeterProcessBuilder = tmp$281896787,93,SourceNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, JMeterProcessBuilder = tmp$281896787, 93)) => Node(<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>,virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray),95,SinkNode, path: (<com.lazerycode.jmeter.testrunner.TestManager: java.lang.String executeSingleTest(java.io.File,com.lazerycode.jmeter.configuration.JMeterArgumentsArray)>, virtualinvoke JMeterProcessBuilder.<com.lazerycode.jmeter.testrunner.JMeterProcessBuilder: void addArguments(java.util.List)>(argumentsArray), 95)))

