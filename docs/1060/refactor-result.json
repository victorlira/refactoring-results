[
  {
    "branch": "R",
    "class": "com.lazerycode.jmeter.testrunner.TestManager",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Extract Variable\targumentsArray : List<String> in method private executeSingleTest(test File, testArgs JMeterArgumentsArray) : String from class com.lazerycode.jmeter.testrunner.TestManager",
    "description": {
      "filePath": "src/main/java/com/lazerycode/jmeter/testrunner/TestManager.java",
      "startLine": 85,
      "endLine": 85,
      "startColumn": 16,
      "endColumn": 63,
      "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
      "description": "extracted variable declaration",
      "codeElement": "argumentsArray : List<String>"
    },
    "line": "88"
  },
  {
    "branch": "R",
    "class": "com.lazerycode.jmeter.testrunner.TestManager",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Extract Variable\targumentsArray : List<String> in method private executeSingleTest(test File, testArgs JMeterArgumentsArray) : String from class com.lazerycode.jmeter.testrunner.TestManager",
    "description": {
      "filePath": "src/main/java/com/lazerycode/jmeter/testrunner/TestManager.java",
      "startLine": 87,
      "endLine": 87,
      "startColumn": 3,
      "endColumn": 148,
      "codeElementType": "EXPRESSION_STATEMENT",
      "description": "statement with the name of the extracted variable",
      "codeElement": null
    },
    "line": "90"
  },
  {
    "branch": "R",
    "class": "com.lazerycode.jmeter.testrunner.TestManager",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Extract Variable\targumentsArray : List<String> in method private executeSingleTest(test File, testArgs JMeterArgumentsArray) : String from class com.lazerycode.jmeter.testrunner.TestManager",
    "description": {
      "filePath": "src/main/java/com/lazerycode/jmeter/testrunner/TestManager.java",
      "startLine": 92,
      "endLine": 92,
      "startColumn": 3,
      "endColumn": 53,
      "codeElementType": "EXPRESSION_STATEMENT",
      "description": "statement with the name of the extracted variable",
      "codeElement": null
    },
    "line": "95"
  },
  {
    "branch": "R",
    "class": "com.lazerycode.jmeter.testrunner.TestManager",
    "tool": "ReExtractorPlus",
    "refactoringInfo": "Extract Variable\targumentsArray : List<String> in method private executeSingleTest(test File, testArgs JMeterArgumentsArray) : String from class com.lazerycode.jmeter.testrunner.TestManager",
    "description": {
      "filePath": "src/main/java/com/lazerycode/jmeter/testrunner/TestManager.java",
      "startLine": 85,
      "endLine": 85,
      "startColumn": 16,
      "endColumn": 63,
      "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
      "description": "extracted variable declaration",
      "codeElement": "argumentsArray : List<String>"
    },
    "line": "88"
  },
  {
    "branch": "R",
    "class": "com.lazerycode.jmeter.testrunner.TestManager",
    "tool": "ReExtractorPlus",
    "refactoringInfo": "Extract Variable\targumentsArray : List<String> in method private executeSingleTest(test File, testArgs JMeterArgumentsArray) : String from class com.lazerycode.jmeter.testrunner.TestManager",
    "description": {
      "filePath": "src/main/java/com/lazerycode/jmeter/testrunner/TestManager.java",
      "startLine": 87,
      "endLine": 87,
      "startColumn": 3,
      "endColumn": 148,
      "codeElementType": "EXPRESSION_STATEMENT",
      "description": "statement with the name of the extracted variable",
      "codeElement": "getLog().debug(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"JMeter is called with the following command line arguments: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" + UtilityFunctions.humanReadableCommandLineOutput(argumentsArray));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n"
    },
    "line": "90"
  },
  {
    "branch": "R",
    "class": "com.lazerycode.jmeter.testrunner.TestManager",
    "tool": "ReExtractorPlus",
    "refactoringInfo": "Extract Variable\targumentsArray : List<String> in method private executeSingleTest(test File, testArgs JMeterArgumentsArray) : String from class com.lazerycode.jmeter.testrunner.TestManager",
    "description": {
      "filePath": "src/main/java/com/lazerycode/jmeter/testrunner/TestManager.java",
      "startLine": 92,
      "endLine": 92,
      "startColumn": 3,
      "endColumn": 53,
      "codeElementType": "EXPRESSION_STATEMENT",
      "description": "statement with the name of the extracted variable",
      "codeElement": "JMeterProcessBuilder.addArguments(argumentsArray);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n"
    },
    "line": "95"
  },
  {
    "branch": "R",
    "class": "com.lazerycode.jmeter.testrunner.TestManager",
    "tool": "ReExtractorPlus",
    "refactoringInfo": "Extract Variable\targumentsArray : List<String> in method private executeSingleTest(test File, testArgs JMeterArgumentsArray) : String from class com.lazerycode.jmeter.testrunner.TestManager",
    "description": {
      "filePath": "src/main/java/com/lazerycode/jmeter/testrunner/TestManager.java",
      "startLine": 70,
      "endLine": 116,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with extracted variable",
      "codeElement": "private executeSingleTest(test File, testArgs JMeterArgumentsArray) : String"
    },
    "line": "95"
  },
  {
    "branch": "R",
    "class": "com.lazerycode.jmeter.testrunner.TestManager",
    "tool": "ReExtractorPlus",
    "refactoringInfo": "Extract Variable\targumentsArray : List<String> in method private executeSingleTest(test File, testArgs JMeterArgumentsArray) : String from class com.lazerycode.jmeter.testrunner.TestManager",
    "description": {
      "filePath": "src/main/java/com/lazerycode/jmeter/testrunner/TestManager.java",
      "startLine": 70,
      "endLine": 116,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with extracted variable",
      "codeElement": "private executeSingleTest(test File, testArgs JMeterArgumentsArray) : String"
    },
    "line": "90"
  },
  {
    "branch": "R",
    "class": "com.lazerycode.jmeter.testrunner.TestManager",
    "tool": "ReExtractorPlus",
    "refactoringInfo": "Extract Variable\targumentsArray : List<String> in method private executeSingleTest(test File, testArgs JMeterArgumentsArray) : String from class com.lazerycode.jmeter.testrunner.TestManager",
    "description": {
      "filePath": "src/main/java/com/lazerycode/jmeter/testrunner/TestManager.java",
      "startLine": 70,
      "endLine": 116,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with extracted variable",
      "codeElement": "private executeSingleTest(test File, testArgs JMeterArgumentsArray) : String"
    },
    "line": "89"
  },
  {
    "branch": "R",
    "class": "com.lazerycode.jmeter.testrunner.TestManager",
    "tool": "ReExtractorPlus",
    "refactoringInfo": "Extract Variable\targumentsArray : List<String> in method private executeSingleTest(test File, testArgs JMeterArgumentsArray) : String from class com.lazerycode.jmeter.testrunner.TestManager",
    "description": {
      "filePath": "src/main/java/com/lazerycode/jmeter/testrunner/TestManager.java",
      "startLine": 70,
      "endLine": 116,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with extracted variable",
      "codeElement": "private executeSingleTest(test File, testArgs JMeterArgumentsArray) : String"
    },
    "line": "88"
  }
]