Running soot scenario toml4j;com.moandjiezana.toml.Results;addValue(String, Object);c4027ed2d5a685734a83306fdd1a4ed41f473f60
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/toml4j/c4027ed2d5a685734a83306fdd1a4ed41f473f60/original-without-dependencies/toml4j-0.3.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,42100
Time to perform Confluence 1 Inter 0,37400
Configure Soot Confluence 2 Inter 0,17100
Time to perform Confluence 2 Inter 0,03500
Visited methods: 12
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/toml4j/c4027ed2d5a685734a83306fdd1a4ed41f473f60/original-without-dependencies/toml4j-0.3.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,51700
Runtime: 0.007s
Time to perform OA Inter 0,55700
OA Inter Visited methods: 1
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/toml4j/c4027ed2d5a685734a83306fdd1a4ed41f473f60/original-without-dependencies/toml4j-0.3.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,49500
Time to perform DFP Inter 0,46400
Depth limit: 5
CONFLICTS: DF interference in <com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>
Data flows from execution of line 144 to 150, defined in $stack21 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>() and propagated in virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10)
Caused by line 144 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack21 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>(), 144)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50)
DF interference in <com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>
Data flows from execution of line 150 to 150, defined in $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key: ") and propagated in virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate key: '), 48)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50)
DF interference in <com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>
Data flows from execution of line 140 to 150, defined in $stack3 = new com.moandjiezana.toml.Container$Table and propagated in virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10)
Caused by line 140 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, specialinvoke this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Container startTable(java.lang.String)>(key), 140) => (<com.moandjiezana.toml.Results: com.moandjiezana.toml.Container startTable(java.lang.String)>, specialinvoke $stack3.<com.moandjiezana.toml.Container$Table: void <init>()>(), 237)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50)
DF interference in <com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>
Data flows from execution of line 150 to 150, defined in $stack11 = this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Results$Errors errors> and propagated in virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack11 = this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Results$Errors errors>, 150)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50)
DF interference in <com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>
Data flows from execution of line 152 to 150, defined in $stack18 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>() and propagated in virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10)
Caused by line 152 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack18 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>(), 152)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50)
DF interference in <com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>
Data flows from execution of line 150 to 150, defined in $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) and propagated in virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key), 49)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50)
DF interference in <com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>
Data flows from execution of line 142 to 150, defined in valueMap = (java.util.Map) value and propagated in virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10)
Caused by line 142 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, valueMap = (java.util.Map) value, 142)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50)
DF interference in <com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>
Data flows from execution of line 143 to 150, defined in $stack13 = interfaceinvoke valueMap.<java.util.Map: java.util.Set entrySet()>() and propagated in virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10)
Caused by line 143 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack13 = interfaceinvoke valueMap.<java.util.Map: java.util.Set entrySet()>(), 143)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50)
[List(Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key),49,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key), 49)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10),50,SinkNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50))), List(Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key: "),48,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate key: '), 48)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key),49,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key), 49)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10),50,SinkNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50))), List(Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack21 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>(),144,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack21 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>(), 144)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack9 = value instanceof java.util.Map, 139)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,valueMap = (java.util.Map) value,142,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, valueMap = (java.util.Map) value, 142)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack13 = interfaceinvoke valueMap.<java.util.Map: java.util.Set entrySet()>(),143,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack13 = interfaceinvoke valueMap.<java.util.Map: java.util.Set entrySet()>(), 143)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,l5 = interfaceinvoke $stack13.<java.util.Set: java.util.Iterator iterator()>(),143,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, l5 = interfaceinvoke $stack13.<java.util.Set: java.util.Iterator iterator()>(), 143)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack18 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>(),152,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack18 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>(), 152)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,entry = (java.util.Map$Entry) $stack18,152,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, entry = (java.util.Map$Entry) $stack18, 152)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack19 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>(),144,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack19 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>(), 144)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack20 = (java.lang.String) $stack19,144,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack20 = (java.lang.String) $stack19, 144)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,key := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, specialinvoke this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Container startTable(java.lang.String)>(key), 140)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,key := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key: "),48,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate key: '), 48)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key),49,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key), 49)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10),50,SinkNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50))), List(Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack18 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>(),152,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack18 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>(), 152)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,entry = (java.util.Map$Entry) $stack18,152,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, entry = (java.util.Map$Entry) $stack18, 152)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack19 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>(),144,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack19 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>(), 144)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack20 = (java.lang.String) $stack19,144,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack20 = (java.lang.String) $stack19, 144)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,key := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, specialinvoke this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Container startTable(java.lang.String)>(key), 140)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,key := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key: "),48,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate key: '), 48)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key),49,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key), 49)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10),50,SinkNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50))), List(Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack13 = interfaceinvoke valueMap.<java.util.Map: java.util.Set entrySet()>(),143,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack13 = interfaceinvoke valueMap.<java.util.Map: java.util.Set entrySet()>(), 143)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,l5 = interfaceinvoke $stack13.<java.util.Set: java.util.Iterator iterator()>(),143,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, l5 = interfaceinvoke $stack13.<java.util.Set: java.util.Iterator iterator()>(), 143)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack18 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>(),152,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack18 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>(), 152)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,entry = (java.util.Map$Entry) $stack18,152,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, entry = (java.util.Map$Entry) $stack18, 152)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack19 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>(),144,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack19 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>(), 144)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack20 = (java.lang.String) $stack19,144,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack20 = (java.lang.String) $stack19, 144)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,key := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, specialinvoke this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Container startTable(java.lang.String)>(key), 140)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,key := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key: "),48,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate key: '), 48)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key),49,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key), 49)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10),50,SinkNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50))), List(Node(<com.moandjiezana.toml.Results: com.moandjiezana.toml.Container startTable(java.lang.String)>,$stack3 = new com.moandjiezana.toml.Container$Table,237,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, specialinvoke this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Container startTable(java.lang.String)>(key), 140) => (<com.moandjiezana.toml.Results: com.moandjiezana.toml.Container startTable(java.lang.String)>, specialinvoke $stack3.<com.moandjiezana.toml.Container$Table: void <init>()>(), 237)) => Node(<com.moandjiezana.toml.Results: com.moandjiezana.toml.Container startTable(java.lang.String)>,newTable = $stack3,237,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, specialinvoke this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Container startTable(java.lang.String)>(key), 140) => (<com.moandjiezana.toml.Results: com.moandjiezana.toml.Container startTable(java.lang.String)>, newTable = $stack3, 237)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,value := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack9 = value instanceof java.util.Map, 139)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,valueMap = (java.util.Map) value,142,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, valueMap = (java.util.Map) value, 142)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack13 = interfaceinvoke valueMap.<java.util.Map: java.util.Set entrySet()>(),143,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack13 = interfaceinvoke valueMap.<java.util.Map: java.util.Set entrySet()>(), 143)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,l5 = interfaceinvoke $stack13.<java.util.Set: java.util.Iterator iterator()>(),143,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, l5 = interfaceinvoke $stack13.<java.util.Set: java.util.Iterator iterator()>(), 143)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack18 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>(),152,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack18 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>(), 152)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,entry = (java.util.Map$Entry) $stack18,152,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, entry = (java.util.Map$Entry) $stack18, 152)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack19 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>(),144,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack19 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>(), 144)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack20 = (java.lang.String) $stack19,144,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack20 = (java.lang.String) $stack19, 144)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,key := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, specialinvoke this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Container startTable(java.lang.String)>(key), 140)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,key := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key: "),48,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate key: '), 48)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key),49,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key), 49)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10),50,SinkNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50))), List(Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack11 = this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Results$Errors errors>,150,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack11 = this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Results$Errors errors>, 150)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,this := @this: com.moandjiezana.toml.Results$Errors,-1,SimpleNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack3 = this.<com.moandjiezana.toml.Results$Errors: java.lang.StringBuilder sb>,48,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack3 = this.<com.moandjiezana.toml.Results$Errors: java.lang.StringBuilder sb>, 48)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key: "),48,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate key: '), 48)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key),49,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key), 49)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10),50,SinkNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50))), List(Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,valueMap = (java.util.Map) value,142,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, valueMap = (java.util.Map) value, 142)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack13 = interfaceinvoke valueMap.<java.util.Map: java.util.Set entrySet()>(),143,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack13 = interfaceinvoke valueMap.<java.util.Map: java.util.Set entrySet()>(), 143)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,l5 = interfaceinvoke $stack13.<java.util.Set: java.util.Iterator iterator()>(),143,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, l5 = interfaceinvoke $stack13.<java.util.Set: java.util.Iterator iterator()>(), 143)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack18 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>(),152,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack18 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>(), 152)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,entry = (java.util.Map$Entry) $stack18,152,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, entry = (java.util.Map$Entry) $stack18, 152)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack19 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>(),144,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack19 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>(), 144)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack20 = (java.lang.String) $stack19,144,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack20 = (java.lang.String) $stack19, 144)) => Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,key := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, specialinvoke this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Container startTable(java.lang.String)>(key), 140)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,key := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key: "),48,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate key: '), 48)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key),49,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key), 49)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10),50,SinkNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50)))]
Visited methods: 6
 Analysis results
----------------------------
 Number of conflicts: 8
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/toml4j/c4027ed2d5a685734a83306fdd1a4ed41f473f60/original-without-dependencies/toml4j-0.3.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,40700
Time to perform DFP Inter 0,39300
Depth limit: 5
CONFLICTS: DF interference in <com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>
Data flows from execution of line 150 to 150, defined in $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) and propagated in virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key), 49)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50)
DF interference in <com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>
Data flows from execution of line 150 to 150, defined in $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key: ") and propagated in virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate key: '), 48)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50)
DF interference in <com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>
Data flows from execution of line 150 to 150, defined in $stack11 = this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Results$Errors errors> and propagated in virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack11 = this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Results$Errors errors>, 150)
Caused by line 150 flow: path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50)
[List(Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key: "),48,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate key: '), 48)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key),49,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key), 49)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10),50,SinkNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50))), List(Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key),49,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key), 49)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10),50,SinkNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50))), List(Node(<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>,$stack11 = this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Results$Errors errors>,150,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, $stack11 = this.<com.moandjiezana.toml.Results: com.moandjiezana.toml.Results$Errors errors>, 150)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,this := @this: com.moandjiezana.toml.Results$Errors,-1,SimpleNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack3 = this.<com.moandjiezana.toml.Results$Errors: java.lang.StringBuilder sb>,48,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack3 = this.<com.moandjiezana.toml.Results$Errors: java.lang.StringBuilder sb>, 48)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key: "),48,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Duplicate key: '), 48)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key),49,SourceNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key), 49)) => Node(<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>,virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10),50,SinkNode, path: (<com.moandjiezana.toml.Results: void addValue(java.lang.String,java.lang.Object)>, virtualinvoke $stack11.<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>(key, -1), 150) => (<com.moandjiezana.toml.Results$Errors: void duplicateKey(java.lang.String,int)>, virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 50)))]
Visited methods: 6
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/toml4j/c4027ed2d5a685734a83306fdd1a4ed41f473f60/original-without-dependencies/toml4j-0.3.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,45000
Time to perform PDG 0,29600
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/toml4j/c4027ed2d5a685734a83306fdd1a4ed41f473f60/original-without-dependencies/toml4j-0.3.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,36900
Time to perform PDG 0,32100
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
