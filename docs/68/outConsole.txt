Running soot scenario coverity-plugin;jenkins.plugins.coverity.analysis.PreFresnoToolHandler;perform(AbstractBuild<?,?>, Launcher, BuildListener, CoverityPublisher);09ae8cd6353743a1ebbd9bbfb903b60d7c7bbf55
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/09ae8cd6353743a1ebbd9bbfb903b60d7c7bbf55/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,70200
An error occurred in getInvokeExpr with args: specialinvoke $stack5.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
Time to perform Confluence 1 Inter 13,15800
Configure Soot Confluence 2 Inter 0,29700
An error occurred in getInvokeExpr with args: specialinvoke $stack5.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
Time to perform Confluence 2 Inter 17,91500
Visited methods: 400
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>,$stack4 = new hudson.EnvVars,183,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 88) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, cmd#4 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>(cmd, launcherEnvVars, useAdvancedParser), 264) => (<jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>, specialinvoke $stack4.<hudson.EnvVars: void <init>(java.util.Map)>($stack5), 183)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>,envVars = $stack4,183,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 88) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, cmd#4 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>(cmd, launcherEnvVars, useAdvancedParser), 264) => (<jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>, envVars = $stack4, 183)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.util.List evaluateEnvVars(java.util.List,hudson.EnvVars)>,environment := @parameter1: hudson.EnvVars,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 88) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, cmd#4 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>(cmd, launcherEnvVars, useAdvancedParser), 264) => (<jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>, $stack6 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.util.List evaluateEnvVars(java.util.List,hudson.EnvVars)>(input, envVars), 185)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.util.List expand(java.lang.String,hudson.EnvVars)>,environment := @parameter1: hudson.EnvVars,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 88) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, cmd#4 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>(cmd, launcherEnvVars, useAdvancedParser), 264) => (<jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>, $stack6 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.util.List evaluateEnvVars(java.util.List,hudson.EnvVars)>(input, envVars), 185) => (<jenkins.plugins.coverity.CoverityUtils: java.util.List evaluateEnvVars(java.util.List,hudson.EnvVars)>, $stack9 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.util.List expand(java.lang.String,hudson.EnvVars)>(arg, environment), 140)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.util.List expand(java.lang.String,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),128,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 88) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, cmd#4 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>(cmd, launcherEnvVars, useAdvancedParser), 264) => (<jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>, $stack6 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.util.List evaluateEnvVars(java.util.List,hudson.EnvVars)>(input, envVars), 185) => (<jenkins.plugins.coverity.CoverityUtils: java.util.List evaluateEnvVars(java.util.List,hudson.EnvVars)>, $stack9 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.util.List expand(java.lang.String,hudson.EnvVars)>(arg, environment), 140) => (<jenkins.plugins.coverity.CoverityUtils: java.util.List expand(java.lang.String,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 128)) => Node(<jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack457 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>(postCovBuild), 84)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input,145,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211) => (<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>, this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input, 145)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>, 152)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack161 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($stack160), 337) => (<java.lang.Long: long parseLong(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 631) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,$stack4 = virtualinvoke environment.<hudson.EnvVars: java.lang.String expand(java.lang.String)>(input),47,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,$stack51 = interfaceinvoke javaWarFiles.<java.util.List: boolean isEmpty()>(),177,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, $stack51 = interfaceinvoke javaWarFiles.<java.util.List: boolean isEmpty()>(), 177))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack44 = new java.util.ArrayList,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack44.<java.util.ArrayList: void <init>()>(), 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,$stack51 = interfaceinvoke javaWarFiles.<java.util.List: boolean isEmpty()>(),177,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, $stack51 = interfaceinvoke javaWarFiles.<java.util.List: boolean isEmpty()>(), 177)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack225 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCommitArguments()>(),297,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack225 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCommitArguments()>(), 297)) => Node(<jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack457 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>(postCovBuild), 84)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input,145,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211) => (<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>, this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input, 145)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>, 152)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack161 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($stack160), 337) => (<java.lang.Long: long parseLong(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 631) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack487 = new jenkins.plugins.coverity.CoverityInstallation,60,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack487.<jenkins.plugins.coverity.CoverityInstallation: void <init>(java.lang.String)>($stack489), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack491 = virtualinvoke $stack487.<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>($stack490),60,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack491 = virtualinvoke $stack487.<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>($stack490), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,home = virtualinvoke $stack491.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(),60,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack491.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if postCovBuild#29 == null goto $stack45 = new java.util.HashSet,118,SinkNode, path: )
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack44 = new java.util.ArrayList,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack44.<java.util.ArrayList: void <init>()>(), 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if postCovBuild#29 == null goto $stack45 = new java.util.HashSet,118,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>(125),225,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>(125), 225)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>(),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>(), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>(),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>,$stack1 = this.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String postCovAnalyzeCmd>,147,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, e#65 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: jenkins.plugins.coverity.InvocationAssistance merge(jenkins.plugins.coverity.InvocationAssistance)>($stack425), 143) => (<jenkins.plugins.coverity.InvocationAssistance: jenkins.plugins.coverity.InvocationAssistance merge(jenkins.plugins.coverity.InvocationAssistance)>, postCovAnalyzeCmd = virtualinvoke override.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 287)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#96 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),219,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#96 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 219)) => Node(<jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack457 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>(postCovBuild), 84)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input,145,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211) => (<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>, this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input, 145)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>, 152)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack161 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($stack160), 337) => (<java.lang.Long: long parseLong(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 631) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,this.<jenkins.plugins.coverity.EnvParser$Scanner: int index> = 0,146,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211) => (<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>, this.<jenkins.plugins.coverity.EnvParser$Scanner: int index> = 0, 146)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack4 = this.<jenkins.plugins.coverity.EnvParser$Scanner: int index>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack4 = this.<jenkins.plugins.coverity.EnvParser$Scanner: int index>, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,scanner = $stack9,211,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, scanner = $stack9, 211)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>(125),225,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>(125), 225)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>(),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>(), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>(),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useAdvancedParser = 0,55,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),213,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovBuildCmd()>,$stack1 = this.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String postCovBuildCmd>,135,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack450 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovBuildCmd()>(), 77)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovBuildCmd()>(),79,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovBuildCmd()>(), 79)) => Node(<jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack457 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>(postCovBuild), 84)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input,145,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211) => (<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>, this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input, 145)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>, 152)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack161 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($stack160), 337) => (<java.lang.Long: long parseLong(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 631) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SinkNode, path: )
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack44 = new java.util.ArrayList,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack44.<java.util.ArrayList: void <init>()>(), 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getAnalyzeArguments()>,$stack1 = this.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String analyzeArguments>,164,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, e#65 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: jenkins.plugins.coverity.InvocationAssistance merge(jenkins.plugins.coverity.InvocationAssistance)>($stack425), 143) => (<jenkins.plugins.coverity.InvocationAssistance: jenkins.plugins.coverity.InvocationAssistance merge(jenkins.plugins.coverity.InvocationAssistance)>, $stack23 = virtualinvoke override.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getAnalyzeArguments()>(), 269)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack379 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getAnalyzeArguments()>(),192,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack379 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getAnalyzeArguments()>(), 192)) => Node(<jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack457 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>(postCovBuild), 84)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input,145,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211) => (<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>, this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input, 145)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>, 152)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack161 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($stack160), 337) => (<java.lang.Long: long parseLong(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 631) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack8 = new java.lang.StringBuilder,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack8.<java.lang.StringBuilder: void <init>()>(), 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>,$stack3 = virtualinvoke this.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),173,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>(125), 225)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack64 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>(125),232,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack64 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>(125), 232)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = $stack64,232,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = $stack64, 232)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>(),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input,145,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211) => (<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>, this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input, 145)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>, 152)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack161 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($stack160), 337) => (<java.lang.Long: long parseLong(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 631) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(),159,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(), 159)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,$stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(),171,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, $stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(), 171)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFile = (java.lang.String) $stack58,171,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, javaWarFile = (java.lang.String) $stack58, 171)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,interfaceinvoke cmd.<java.util.List: boolean add(java.lang.Object)>(javaWarFile),161,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, interfaceinvoke cmd.<java.util.List: boolean add(java.lang.Object)>(javaWarFile), 161))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack44 = new java.util.ArrayList,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack44.<java.util.ArrayList: void <init>()>(), 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(),159,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(), 159)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,$stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(),171,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, $stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(), 171)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFile = (java.lang.String) $stack58,171,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, javaWarFile = (java.lang.String) $stack58, 171)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,interfaceinvoke cmd.<java.util.List: boolean add(java.lang.Object)>(javaWarFile),161,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, interfaceinvoke cmd.<java.util.List: boolean add(java.lang.Object)>(javaWarFile), 161)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCommitArguments()>,$stack1 = this.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String commitArguments>,168,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, e#65 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: jenkins.plugins.coverity.InvocationAssistance merge(jenkins.plugins.coverity.InvocationAssistance)>($stack425), 143) => (<jenkins.plugins.coverity.InvocationAssistance: jenkins.plugins.coverity.InvocationAssistance merge(jenkins.plugins.coverity.InvocationAssistance)>, $stack27 = virtualinvoke override.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCommitArguments()>(), 271)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack225 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCommitArguments()>(),297,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack225 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCommitArguments()>(), 297)) => Node(<jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack457 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>(postCovBuild), 84)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input,145,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211) => (<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>, this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input, 145)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>, 152)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack161 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($stack160), 337) => (<java.lang.Long: long parseLong(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 631) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SinkNode, path: )
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,home = virtualinvoke $stack491.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(),60,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack491.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#96 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),219,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#96 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 219)) => Node(<jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack457 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>(postCovBuild), 84)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input,145,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211) => (<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>, this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input, 145)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>, 152)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack161 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($stack160), 337) => (<java.lang.Long: long parseLong(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 631) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(),159,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(), 159))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack44 = new java.util.ArrayList,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack44.<java.util.ArrayList: void <init>()>(), 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(),159,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(), 159)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,$stack57 = interfaceinvoke invocationAssistance.<java.util.Iterator: boolean hasNext()>(),159,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, $stack57 = interfaceinvoke invocationAssistance.<java.util.Iterator: boolean hasNext()>(), 159)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SinkNode, path: )
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>,$stack1 = this.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String home>,42,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack35.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack36), 53) => (<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>, $stack11 = virtualinvoke install.<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>(environment), 559) => (<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>, $stack4 = virtualinvoke this.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(), 47)) => Node(<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>,$stack10 = virtualinvoke $stack9.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(),561,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack35.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack36), 53)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,home = virtualinvoke $stack35.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack36),53,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack35.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack36), 53)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useAdvancedParser = 1,57,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>(),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack2 = this.<jenkins.plugins.coverity.EnvParser$Scanner: int index>,151,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack2 = this.<jenkins.plugins.coverity.EnvParser$Scanner: int index>, 151)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack4 = this.<jenkins.plugins.coverity.EnvParser$Scanner: int index>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack4 = this.<jenkins.plugins.coverity.EnvParser$Scanner: int index>, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack64 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>(125),232,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack64 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>(125), 232)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = $stack64,232,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = $stack64, 232)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>(),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack428 = interfaceinvoke postCovBuild#29.<java.util.List: boolean isEmpty()>(),147,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack428 = interfaceinvoke postCovBuild#29.<java.util.List: boolean isEmpty()>(), 147))
SINK=>BASE: Node(<jenkins.plugins.coverity.CIMStream: java.lang.String getStream()>,$stack1 = this.<jenkins.plugins.coverity.CIMStream: java.lang.String stream>,72,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, language = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>(givenJar#60, javaWarFile#61), 134) => (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>, $stack4 = virtualinvoke cimStream.<jenkins.plugins.coverity.CIMStream: java.lang.String getStream()>(), 443)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>,$stack4 = virtualinvoke cimStream.<jenkins.plugins.coverity.CIMStream: java.lang.String getStream()>(),443,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, language = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>(givenJar#60, javaWarFile#61), 134) => (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>, $stack4 = virtualinvoke cimStream.<jenkins.plugins.coverity.CIMStream: java.lang.String getStream()>(), 443)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>,$stack5 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: com.coverity.ws.v6.StreamDataObj getStream(java.lang.String,jenkins.plugins.coverity.CIMInstance)>($stack4, cimInstance),443,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, language = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>(givenJar#60, javaWarFile#61), 134) => (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>, $stack5 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: com.coverity.ws.v6.StreamDataObj getStream(java.lang.String,jenkins.plugins.coverity.CIMInstance)>($stack4, cimInstance), 443)) => Node(<com.coverity.ws.v6.StreamDataObj: java.lang.String getLanguage()>,this := @this: com.coverity.ws.v6.StreamDataObj,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, language = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>(givenJar#60, javaWarFile#61), 134) => (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>, domain = virtualinvoke $stack5.<com.coverity.ws.v6.StreamDataObj: java.lang.String getLanguage()>(), 443)) => Node(<com.coverity.ws.v6.StreamDataObj: java.lang.String getLanguage()>,$stack1 = this.<com.coverity.ws.v6.StreamDataObj: java.lang.String language>,187,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, language = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>(givenJar#60, javaWarFile#61), 134) => (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>, domain = virtualinvoke $stack5.<com.coverity.ws.v6.StreamDataObj: java.lang.String getLanguage()>(), 443)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>,domain = virtualinvoke $stack5.<com.coverity.ws.v6.StreamDataObj: java.lang.String getLanguage()>(),443,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, language = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>(givenJar#60, javaWarFile#61), 134) => (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>, domain = virtualinvoke $stack5.<com.coverity.ws.v6.StreamDataObj: java.lang.String getLanguage()>(), 443)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>,$stack9 = domain,444,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, language = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>(givenJar#60, javaWarFile#61), 134)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,language = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>(givenJar#60, javaWarFile#61),134,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, language = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: java.lang.String getLanguage(jenkins.plugins.coverity.CIMStream,jenkins.plugins.coverity.CIMInstance)>(givenJar#60, javaWarFile#61), 134)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack333 = virtualinvoke $stack332.<java.lang.String: boolean equals(java.lang.Object)>(language),147,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack333 = virtualinvoke $stack332.<java.lang.String: boolean equals(java.lang.Object)>(language), 147)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack333 == 0 goto $stack334 = "JAVA",147,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack44 = new java.util.ArrayList,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack44.<java.util.ArrayList: void <init>()>(), 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack428 = interfaceinvoke postCovBuild#29.<java.util.List: boolean isEmpty()>(),147,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack428 = interfaceinvoke postCovBuild#29.<java.util.List: boolean isEmpty()>(), 147))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack44 = new java.util.ArrayList,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack44.<java.util.ArrayList: void <init>()>(), 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack428 = interfaceinvoke postCovBuild#29.<java.util.List: boolean isEmpty()>(),147,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack428 = interfaceinvoke postCovBuild#29.<java.util.List: boolean isEmpty()>(), 147)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack428 != 0 goto $stack45 = new java.util.HashSet,147,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),249,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 249)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = $stack27,222,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = $stack27, 222)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack60 = new java.lang.StringBuilder,227,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack60.<java.lang.StringBuilder: void <init>()>(), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>(),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>(), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>(),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>,$stack1 = this.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String home>,42,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack35.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack36), 53) => (<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>, $stack11 = virtualinvoke install.<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>(environment), 559) => (<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>, $stack4 = virtualinvoke this.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(), 47)) => Node(<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>,$stack10 = virtualinvoke $stack9.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(),561,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack35.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack36), 53)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,home = virtualinvoke $stack35.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack36),53,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack35.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack36), 53)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>(),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>(), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>(),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack379 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getAnalyzeArguments()>(),192,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack379 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getAnalyzeArguments()>(), 192)) => Node(<jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack457 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>(postCovBuild), 84)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input,145,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211) => (<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>, this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input, 145)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>, 152)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack161 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($stack160), 337) => (<java.lang.Long: long parseLong(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 631) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: java.util.List expand(java.lang.String,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),128,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 88) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, cmd#4 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>(cmd, launcherEnvVars, useAdvancedParser), 264) => (<jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>, $stack6 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.util.List evaluateEnvVars(java.util.List,hudson.EnvVars)>(input, envVars), 185) => (<jenkins.plugins.coverity.CoverityUtils: java.util.List evaluateEnvVars(java.util.List,hudson.EnvVars)>, $stack9 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.util.List expand(java.lang.String,hudson.EnvVars)>(arg, environment), 140) => (<jenkins.plugins.coverity.CoverityUtils: java.util.List expand(java.lang.String,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 128)) => Node(<jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack457 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>(postCovBuild), 84)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input,145,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211) => (<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>, this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input, 145)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>, 152)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack161 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($stack160), 337) => (<java.lang.Long: long parseLong(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 631) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack35 = new java.lang.StringBuilder,243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack35.<java.lang.StringBuilder: void <init>()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>,$stack3 = new jenkins.plugins.coverity.CoverityInstallation,47,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack35.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack36), 53) => (<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>, $stack11 = virtualinvoke install.<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>(environment), 559)) => Node(<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>,$stack9 = virtualinvoke $stack7.<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>(environment),561,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack35.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack36), 53) => (<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>, $stack9 = virtualinvoke $stack7.<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>(environment), 561)) => Node(<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>,$stack10 = virtualinvoke $stack9.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(),561,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack35.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack36), 53)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,home = virtualinvoke $stack35.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack36),53,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack35.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack36), 53)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(),159,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(), 159)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,$stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(),171,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, $stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(), 171)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFile = (java.lang.String) $stack58,171,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, javaWarFile = (java.lang.String) $stack58, 171))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack44 = new java.util.ArrayList,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack44.<java.util.ArrayList: void <init>()>(), 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(),159,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(), 159)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,$stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(),171,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, $stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(), 171)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFile = (java.lang.String) $stack58,171,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, javaWarFile = (java.lang.String) $stack58, 171)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack44 = new java.util.ArrayList,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack44.<java.util.ArrayList: void <init>()>(), 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovBuildCmd()>(),79,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovBuildCmd()>(), 79)) => Node(<jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack457 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>(postCovBuild), 84)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,input := @parameter0: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input,145,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211) => (<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>, this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input> = input, 145)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>, 152)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack161 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($stack160), 337) => (<java.lang.Long: long parseLong(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 631) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),113,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack446 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 113)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#38 = $stack446,108,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38),111,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111))]
Confluence interference in <jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>
Confluence flows from execution of lines 103 and 88 to line 111, defined in postCovBuild#29 = $stack44 and result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser) and used in interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38)
Caused by line 103 flow: path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)
Caused by line 88 flow: path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 88) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, cmd#4 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>(cmd, launcherEnvVars, useAdvancedParser), 264) => (<jenkins.plugins.coverity.CoverityUtils: java.util.List prepareCmds(java.util.List,java.lang.String[],boolean)>, specialinvoke $stack4.<hudson.EnvVars: void <init>(java.util.Map)>($stack5), 183)
Caused by line 111 flow: path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)
Confluence interference in <jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>
Confluence flows from execution of lines 103 and 60 to line 111, defined in postCovBuild#29 = $stack44 and $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser) and used in interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38)
Caused by line 103 flow: path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)
Caused by line 60 flow: path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack489 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack488, envVars, useAdvancedParser), 60)
Caused by line 111 flow: path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)
Confluence interference in <jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>
Confluence flows from execution of lines 103 and 103 to line 119, defined in postCovBuild#29 = $stack44 and specialinvoke $stack44.<java.util.ArrayList: void <init>()>() and used in cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29)
Caused by line 103 flow: path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)
Caused by line 103 flow: path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack44.<java.util.ArrayList: void <init>()>(), 103)
Caused by line 119 flow: path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, $stack51 = interfaceinvoke javaWarFiles.<java.util.List: boolean isEmpty()>(), 177)
Confluence interference in <jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>
Confluence flows from execution of lines 103 and 297 to line 111, defined in postCovBuild#29 = $stack44 and $stack225 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCommitArguments()>() and used in interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38)
Caused by line 103 flow: path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)
Caused by line 297 flow: path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack225 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCommitArguments()>(), 297)
Caused by line 111 flow: path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)
Confluence interference in <jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>
Confluence flows from execution of lines 103 and 108 to line 111, defined in postCovBuild#29 = $stack44 and javaWarFile#38 = $stack446 and used in interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38)
Caused by line 103 flow: path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)
Caused by line 108 flow: path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#38 = $stack446, 108)
Caused by line 111 flow: path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#29.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#38), 111)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/09ae8cd6353743a1ebbd9bbfb903b60d7c7bbf55/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 1,00200
Runtime: 0.147s
OA interference in class PreFresnoToolHandler, method boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher), execution of line 103 overrides 103, assigning to variable ArrayList.<java.util.ArrayList: java.lang.Object[] elementData>, 
Caused by line 103 flow:
at jenkins.plugins.coverity.analysis.PreFresnoToolHandler.perform(PreFresnoToolHandler.java:103)
And line 103 flow:
at jenkins.plugins.coverity.analysis.PreFresnoToolHandler.perform(PreFresnoToolHandler.java:103)
 
OA interference in class PreFresnoToolHandler, method boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher), execution of line 103 overrides 103, assigning to variable postCovBuild#29, 
Caused by line 103 flow:
at jenkins.plugins.coverity.analysis.PreFresnoToolHandler.perform(PreFresnoToolHandler.java:103)
And line 103 flow:
at jenkins.plugins.coverity.analysis.PreFresnoToolHandler.perform(PreFresnoToolHandler.java:103)
 
Time to perform OA Inter 1,31100
OA Inter Visited methods: 299
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/09ae8cd6353743a1ebbd9bbfb903b60d7c7bbf55/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,97100
An error occurred in getInvokeExpr with args: specialinvoke $stack5.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
Time to perform DFP Inter 9,34600
Depth limit: 5
CONFLICTS: []
Visited methods: 200
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/09ae8cd6353743a1ebbd9bbfb903b60d7c7bbf55/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,63000
An error occurred in getInvokeExpr with args: specialinvoke $stack5.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
Time to perform DFP Inter 9,13800
Depth limit: 5
CONFLICTS: []
Visited methods: 200
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/09ae8cd6353743a1ebbd9bbfb903b60d7c7bbf55/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,61800
Time to perform PDG 2,36900
CONFLICTS: [List(Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),129,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 129)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack48 == 0 goto (branch),129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),216,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),242,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack277 == null goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),275,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack280 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(),244,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack280 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(), 244))), List(Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),129,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 129)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack48 == 0 goto (branch),129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),216,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack294 == 0 goto (branch),247,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack296 == null goto (branch),217,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack297 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),242,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack297 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 242)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack298 = virtualinvoke $stack297.<java.lang.String: boolean isEmpty()>(),242,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack298 = virtualinvoke $stack297.<java.lang.String: boolean isEmpty()>(), 242)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack298 != 0 goto (branch),242,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if javaWarFile#98 == 0 goto $stack312 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,230,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack319 = virtualinvoke $stack318.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(javaWarFile#98),231,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack319 = virtualinvoke $stack318.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(javaWarFile#98), 231)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack320 = virtualinvoke $stack319.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", aborting..."),231,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack320 = virtualinvoke $stack319.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(', aborting...'), 231)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack321 = virtualinvoke $stack320.<java.lang.StringBuilder: java.lang.String toString()>(),231,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack321 = virtualinvoke $stack320.<java.lang.StringBuilder: java.lang.String toString()>(), 231))), List(Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),129,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 129)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack48 == 0 goto (branch),129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),216,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),242,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack277 == null goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),275,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack280 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(),244,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack280 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(), 244)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack280, envVars, useAdvancedParser),244,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack280, envVars, useAdvancedParser), 244)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#107 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean importMsvsca(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,boolean,java.lang.String)>(build, launcher, listener, home, temp, result#105, givenJar),246,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#107 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean importMsvsca(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,boolean,java.lang.String)>(build, launcher, listener, home, temp, result#105, givenJar), 246)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if javaWarFile#107 != 0 goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),247,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#35 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),255,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#35 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 255)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack178 = interfaceinvoke result#35.<java.util.Iterator: java.lang.Object next()>(),322,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack178 = interfaceinvoke result#35.<java.util.Iterator: java.lang.Object next()>(), 322)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#60 = (jenkins.plugins.coverity.CIMStream) $stack178,322,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#60 = (jenkins.plugins.coverity.CIMStream) $stack178, 322)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack184 = virtualinvoke givenJar#60.<jenkins.plugins.coverity.CIMStream: jenkins.plugins.coverity.InvocationAssistance getInvocationAssistanceOverride()>(),268,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack184 = virtualinvoke givenJar#60.<jenkins.plugins.coverity.CIMStream: jenkins.plugins.coverity.InvocationAssistance getInvocationAssistanceOverride()>(), 268)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack184 == null goto csharpAssembliesStr = "cov-commit-defects",268,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack273 = virtualinvoke givenJar#60.<jenkins.plugins.coverity.CIMStream: jenkins.plugins.coverity.InvocationAssistance getInvocationAssistanceOverride()>(),269,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack273 = virtualinvoke givenJar#60.<jenkins.plugins.coverity.CIMStream: jenkins.plugins.coverity.InvocationAssistance getInvocationAssistanceOverride()>(), 269)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,e#65 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: jenkins.plugins.coverity.InvocationAssistance merge(jenkins.plugins.coverity.InvocationAssistance)>($stack273),269,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, e#65 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: jenkins.plugins.coverity.InvocationAssistance merge(jenkins.plugins.coverity.InvocationAssistance)>($stack273), 269)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack225 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCommitArguments()>(),297,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack225 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCommitArguments()>(), 297)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack226 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>($stack225),297,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack226 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>($stack225), 297))), List(Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),129,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 129)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack48 == 0 goto (branch),129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),216,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),242,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack277 == null goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),275,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack280 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(),244,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack280 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(), 244)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack280, envVars, useAdvancedParser),244,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack280, envVars, useAdvancedParser), 244)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#107 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean importMsvsca(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,boolean,java.lang.String)>(build, launcher, listener, home, temp, result#105, givenJar),246,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#107 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean importMsvsca(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,boolean,java.lang.String)>(build, launcher, listener, home, temp, result#105, givenJar), 246)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if javaWarFile#107 != 0 goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),247,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#35 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),255,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#35 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 255)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack178 = interfaceinvoke result#35.<java.util.Iterator: java.lang.Object next()>(),322,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack178 = interfaceinvoke result#35.<java.util.Iterator: java.lang.Object next()>(), 322)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#60 = (jenkins.plugins.coverity.CIMStream) $stack178,322,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#60 = (jenkins.plugins.coverity.CIMStream) $stack178, 322)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack180 = virtualinvoke givenJar#60.<jenkins.plugins.coverity.CIMStream: java.lang.String getInstance()>(),256,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack180 = virtualinvoke givenJar#60.<jenkins.plugins.coverity.CIMStream: java.lang.String getInstance()>(), 256)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#61 = virtualinvoke $stack179.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: jenkins.plugins.coverity.CIMInstance getInstance(java.lang.String)>($stack180),256,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#61 = virtualinvoke $stack179.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: jenkins.plugins.coverity.CIMInstance getInstance(java.lang.String)>($stack180), 256)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack211 = virtualinvoke javaWarFile#61.<jenkins.plugins.coverity.CIMInstance: java.lang.String getPassword()>(),301,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack211 = virtualinvoke javaWarFile#61.<jenkins.plugins.coverity.CIMInstance: java.lang.String getPassword()>(), 301))), List(Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),129,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 129)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack48 == 0 goto (branch),129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),216,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),242,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack277 == null goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),275,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack280 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(),244,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack280 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(), 244)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack280, envVars, useAdvancedParser),244,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack280, envVars, useAdvancedParser), 244)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#107 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean importMsvsca(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,boolean,java.lang.String)>(build, launcher, listener, home, temp, result#105, givenJar),246,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#107 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean importMsvsca(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,boolean,java.lang.String)>(build, launcher, listener, home, temp, result#105, givenJar), 246)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if javaWarFile#107 != 0 goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),247,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#35 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),255,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#35 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 255)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack51 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),255,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack51 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 255)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack51 == 0 goto (branch),255,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),266,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,specialinvoke $stack209.<hudson.EnvVars: void <init>(hudson.EnvVars)>(envVars),300,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack209.<hudson.EnvVars: void <init>(hudson.EnvVars)>(envVars), 300))), List(Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),129,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 129)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack48 == 0 goto (branch),129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack325 = interfaceinvoke result#35.<java.util.Iterator: java.lang.Object next()>(),233,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack325 = interfaceinvoke result#35.<java.util.Iterator: java.lang.Object next()>(), 233)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#60 = (jenkins.plugins.coverity.CIMStream) $stack325,233,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#60 = (jenkins.plugins.coverity.CIMStream) $stack325, 233)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack331 = virtualinvoke givenJar#60.<jenkins.plugins.coverity.CIMStream: jenkins.plugins.coverity.InvocationAssistance getInvocationAssistanceOverride()>(),142,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack331 = virtualinvoke givenJar#60.<jenkins.plugins.coverity.CIMStream: jenkins.plugins.coverity.InvocationAssistance getInvocationAssistanceOverride()>(), 142)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack331 == null goto $stack332 = "CSHARP",142,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,e#65 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: jenkins.plugins.coverity.InvocationAssistance merge(jenkins.plugins.coverity.InvocationAssistance)>($stack425),143,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, e#65 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: jenkins.plugins.coverity.InvocationAssistance merge(jenkins.plugins.coverity.InvocationAssistance)>($stack425), 143)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack358 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getAnalyzeArguments()>(),191,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack358 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getAnalyzeArguments()>(), 191)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack358 == null goto $stack359 = interfaceinvoke listener.<hudson.model.BuildListener: java.io.PrintStream getLogger()>(),191,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack379 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getAnalyzeArguments()>(),192,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack379 = virtualinvoke e#65.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getAnalyzeArguments()>(), 192))), List(Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),129,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 129)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack48 == 0 goto (branch),129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),216,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack294 == 0 goto (branch),247,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack296 == null goto (branch),217,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack297 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),242,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack297 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 242)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack298 = virtualinvoke $stack297.<java.lang.String: boolean isEmpty()>(),242,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack298 = virtualinvoke $stack297.<java.lang.String: boolean isEmpty()>(), 242)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack298 != 0 goto (branch),242,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack303 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>(result#96),224,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack303 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>(result#96), 224))), List(Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),129,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 129)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack48 == 0 goto (branch),129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),216,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),242,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack277 == null goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),275,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack280 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(),244,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack280 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(), 244)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack280, envVars, useAdvancedParser),244,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack280, envVars, useAdvancedParser), 244)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#107 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean importMsvsca(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,boolean,java.lang.String)>(build, launcher, listener, home, temp, result#105, givenJar),246,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#107 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean importMsvsca(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,boolean,java.lang.String)>(build, launcher, listener, home, temp, result#105, givenJar), 246)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if javaWarFile#107 != 0 goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),247,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#35 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),255,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#35 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 255)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack178 = interfaceinvoke result#35.<java.util.Iterator: java.lang.Object next()>(),322,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack178 = interfaceinvoke result#35.<java.util.Iterator: java.lang.Object next()>(), 322)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#60 = (jenkins.plugins.coverity.CIMStream) $stack178,322,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#60 = (jenkins.plugins.coverity.CIMStream) $stack178, 322)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack202 = virtualinvoke givenJar#60.<jenkins.plugins.coverity.CIMStream: java.lang.String getStream()>(),292,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack202 = virtualinvoke givenJar#60.<jenkins.plugins.coverity.CIMStream: java.lang.String getStream()>(), 292)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack203 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String doubleQuote(java.lang.String,boolean)>($stack202, useAdvancedParser),292,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack203 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String doubleQuote(java.lang.String,boolean)>($stack202, useAdvancedParser), 292))), List(Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),129,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 129)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack48 == 0 goto (branch),129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),216,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),242,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack277 == null goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),275,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack280 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(),244,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack280 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(), 244)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack280, envVars, useAdvancedParser),244,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack280, envVars, useAdvancedParser), 244)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#107 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean importMsvsca(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,boolean,java.lang.String)>(build, launcher, listener, home, temp, result#105, givenJar),246,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#107 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean importMsvsca(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,boolean,java.lang.String)>(build, launcher, listener, home, temp, result#105, givenJar), 246)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if javaWarFile#107 != 0 goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),247,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#35 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),255,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#35 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 255)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack51 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),255,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack51 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 255)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack51 == 0 goto (branch),255,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if temp == null goto $stack52 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: boolean isSkipFetchingDefects()>(),318,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack164 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: boolean isKeepIntDir()>(),320,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack164 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: boolean isKeepIntDir()>(), 320)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack164 == 0 goto $stack165 = interfaceinvoke listener.<hudson.model.BuildListener: java.io.PrintStream getLogger()>(),320,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack168 = virtualinvoke temp.<jenkins.plugins.coverity.CoverityTempDir: boolean isDef()>(),328,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack168 = virtualinvoke temp.<jenkins.plugins.coverity.CoverityTempDir: boolean isDef()>(), 328))), List(Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),129,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 129)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack48 == 0 goto (branch),129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),216,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),242,SinkNode, path: )), List(Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),129,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 129)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack48 == 0 goto (branch),129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),216,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack294 == 0 goto (branch),247,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack296 == null goto (branch),217,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack297 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),242,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack297 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 242)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack298 = virtualinvoke $stack297.<java.lang.String: boolean isEmpty()>(),242,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack298 = virtualinvoke $stack297.<java.lang.String: boolean isEmpty()>(), 242)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack298 != 0 goto (branch),242,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#96 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),219,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#96 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 219))), List(Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),129,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 129)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack48 == 0 goto (branch),129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),216,SinkNode, path: )), List(Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),129,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 129)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack48 == 0 goto (branch),129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),216,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),242,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack277 == null goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),275,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack280 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(),244,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack280 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(), 244)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack280, envVars, useAdvancedParser),244,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack280, envVars, useAdvancedParser), 244)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#107 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean importMsvsca(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,boolean,java.lang.String)>(build, launcher, listener, home, temp, result#105, givenJar),246,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#107 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean importMsvsca(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,boolean,java.lang.String)>(build, launcher, listener, home, temp, result#105, givenJar), 246)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if javaWarFile#107 != 0 goto $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),247,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#35 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),255,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#35 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 255)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack51 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),255,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack51 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 255)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack51 == 0 goto (branch),255,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),266,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,automaticAssemblies#143 = $stack209,300,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, automaticAssemblies#143 = $stack209, 300)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(csharpAssemblies#140, build, launcher, listener, automaticAssemblies#143, useAdvancedParser),302,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(csharpAssemblies#140, build, launcher, listener, automaticAssemblies#143, useAdvancedParser), 302))), List(Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#29 = $stack44,103,SourceNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#29 = $stack44, 103)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29),119,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#42 = virtualinvoke this.<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#29), 119)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#42 != 0 goto $stack45 = new java.util.HashSet,120,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(),129,SimpleNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack48 = interfaceinvoke result#35.<java.util.Iterator: boolean hasNext()>(), 129)) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack48 == 0 goto (branch),129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),216,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack294 == 0 goto (branch),247,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack296 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),217,SinkNode, path: (<jenkins.plugins.coverity.analysis.PreFresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack296 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 217)))]
 Analysis results
----------------------------
 Number of conflicts: 14
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/09ae8cd6353743a1ebbd9bbfb903b60d7c7bbf55/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,83800
Time to perform PDG 2,19300
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
