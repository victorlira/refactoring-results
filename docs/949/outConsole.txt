Running soot scenario vertx-docgen;io.vertx.docgen.BaseProcessor;process(Writer, PackageElement);3f7283c63d19b9677b7987b626713c40e5f95b57
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/vertx-docgen/3f7283c63d19b9677b7987b626713c40e5f95b57/original-without-dependencies/vertx-docgen-3.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,76900
Time to perform Confluence 1 Inter 0,91800
Configure Soot Confluence 2 Inter 0,20100
Time to perform Confluence 2 Inter 0,43400
Visited methods: 54
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/vertx-docgen/3f7283c63d19b9677b7987b626713c40e5f95b57/original-without-dependencies/vertx-docgen-3.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,64800
Runtime: 0.066s
Time to perform OA Inter 0,80200
OA Inter Visited methods: 50
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/vertx-docgen/3f7283c63d19b9677b7987b626713c40e5f95b57/original-without-dependencies/vertx-docgen-3.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,51400
Time to perform DFP Inter 0,67600
Depth limit: 5
CONFLICTS: DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>
Data flows from execution of line 291 to 291, defined in $stack6 = new java.lang.reflect.UndeclaredThrowableException and propagated in specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e)
Caused by line 291 flow: path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e), 84)
Caused by line 291 flow: path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e), 84)
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>
Data flows from execution of line 291 to 291, defined in e = $stack5 and propagated in specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e)
Caused by line 291 flow: path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, e = $stack5, 83)
Caused by line 291 flow: path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e), 84)
[List(Node(<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>,$stack4 = (char) parsed,55,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack20 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix), 29) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>, $stack4 = (char) parsed, 55)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>,$stack5 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($stack4),55,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack20 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix), 29)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,$stack12 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix),36,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>,$stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5),291,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,csq := @parameter0: java.lang.CharSequence,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq),82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq), 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack4 = (io.vertx.docgen.DocWriter) $stack3,82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack4 = (io.vertx.docgen.DocWriter) $stack3, 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,return $stack4,82,SinkNode, path: )), List(Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,$stack20 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix),29,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>,$stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5),291,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,csq := @parameter0: java.lang.CharSequence,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq),82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq), 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack4 = (io.vertx.docgen.DocWriter) $stack3,82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack4 = (io.vertx.docgen.DocWriter) $stack3, 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,return $stack4,82,SinkNode, path: )), List(Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,withoutPrefix = virtualinvoke withoutPrefix.<java.lang.String: java.lang.String substring(int)>(1),28,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, withoutPrefix = virtualinvoke withoutPrefix.<java.lang.String: java.lang.String substring(int)>(1), 28)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,$stack20 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix),29,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>,$stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5),291,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,csq := @parameter0: java.lang.CharSequence,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq),82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq), 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack4 = (io.vertx.docgen.DocWriter) $stack3,82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack4 = (io.vertx.docgen.DocWriter) $stack3, 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,return $stack4,82,SinkNode, path: )), List(Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,withoutPrefix = virtualinvoke input.<java.lang.String: java.lang.String substring(int)>(1),35,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, withoutPrefix = virtualinvoke input.<java.lang.String: java.lang.String substring(int)>(1), 35)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,$stack12 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix),36,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>,$stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5),291,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,csq := @parameter0: java.lang.CharSequence,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq),82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq), 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack4 = (io.vertx.docgen.DocWriter) $stack3,82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack4 = (io.vertx.docgen.DocWriter) $stack3, 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,return $stack4,82,SinkNode, path: )), List(Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack6 = new java.lang.reflect.UndeclaredThrowableException,84,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e), 84)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e),84,SinkNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e), 84))), List(Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,$stack15 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>(input, withoutPrefix),31,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>,$stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5),291,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,csq := @parameter0: java.lang.CharSequence,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq),82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq), 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack4 = (io.vertx.docgen.DocWriter) $stack3,82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack4 = (io.vertx.docgen.DocWriter) $stack3, 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,return $stack4,82,SinkNode, path: )), List(Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,e = $stack5,83,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, e = $stack5, 83)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e),84,SinkNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e), 84))), List(Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>,$stack4 = interfaceinvoke node.<com.sun.source.doctree.EntityTree: javax.lang.model.element.Name getName()>(),291,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack4 = interfaceinvoke node.<com.sun.source.doctree.EntityTree: javax.lang.model.element.Name getName()>(), 291)) => Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>,$stack5 = virtualinvoke $stack4.<java.lang.Object: java.lang.String toString()>(),291,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack5 = virtualinvoke $stack4.<java.lang.Object: java.lang.String toString()>(), 291)) => Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>,$stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5),291,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,csq := @parameter0: java.lang.CharSequence,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq),82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq), 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack4 = (io.vertx.docgen.DocWriter) $stack3,82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack4 = (io.vertx.docgen.DocWriter) $stack3, 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,return $stack4,82,SinkNode, path: )), List(Node(<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>,parsed = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(withoutPrefix),44,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack15 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>(input, withoutPrefix), 31) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>, parsed = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(withoutPrefix), 44)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>,$stack4 = (char) parsed,45,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack15 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>(input, withoutPrefix), 31) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>, $stack4 = (char) parsed, 45)) => Node(<java.lang.Character: java.lang.String toString(char)>,l0 := @parameter0: char,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack20 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix), 29) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>, $stack5 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($stack4), 55)) => Node(<java.lang.Character: java.lang.String toString(char)>,$stack1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(l0),4650,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack20 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix), 29) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>, $stack5 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($stack4), 55)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>,$stack5 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($stack4),45,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack15 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>(input, withoutPrefix), 31)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,$stack15 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>(input, withoutPrefix),31,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>,$stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5),291,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,csq := @parameter0: java.lang.CharSequence,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq),82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq), 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack4 = (io.vertx.docgen.DocWriter) $stack3,82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack4 = (io.vertx.docgen.DocWriter) $stack3, 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,return $stack4,82,SinkNode, path: )), List(Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,withoutPrefix = virtualinvoke input.<java.lang.String: java.lang.String substring(int)>(1),26,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, withoutPrefix = virtualinvoke input.<java.lang.String: java.lang.String substring(int)>(1), 26)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>,withoutPrefix := @parameter1: java.lang.String,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack15 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>(input, withoutPrefix), 31)) => Node(<java.lang.Integer: int parseInt(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack15 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>(input, withoutPrefix), 31) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>, parsed = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(withoutPrefix), 44)) => Node(<java.lang.Integer: int parseInt(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10),615,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack15 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>(input, withoutPrefix), 31) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>, parsed = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(withoutPrefix), 44)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>,parsed = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(withoutPrefix),44,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack15 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>(input, withoutPrefix), 31) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>, parsed = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(withoutPrefix), 44)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>,$stack4 = (char) parsed,45,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack15 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>(input, withoutPrefix), 31) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>, $stack4 = (char) parsed, 45)) => Node(<java.lang.Character: java.lang.String toString(char)>,l0 := @parameter0: char,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack20 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix), 29) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>, $stack5 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($stack4), 55)) => Node(<java.lang.Character: java.lang.String toString(char)>,$stack1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(l0),4650,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack20 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix), 29) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>, $stack5 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($stack4), 55)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>,$stack5 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($stack4),45,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack15 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>(input, withoutPrefix), 31)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,$stack15 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>(input, withoutPrefix),31,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>,$stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5),291,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,csq := @parameter0: java.lang.CharSequence,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq),82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq), 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack4 = (io.vertx.docgen.DocWriter) $stack3,82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack4 = (io.vertx.docgen.DocWriter) $stack3, 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,return $stack4,82,SinkNode, path: )), List(Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack4 = (io.vertx.docgen.DocWriter) $stack3,82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack4 = (io.vertx.docgen.DocWriter) $stack3, 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,return $stack4,82,SinkNode, path: )), List(Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(input),39,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(input), 39)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";"),39,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(';'), 39)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(),39,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>,$stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5),291,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,csq := @parameter0: java.lang.CharSequence,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq),82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq), 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack4 = (io.vertx.docgen.DocWriter) $stack3,82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack4 = (io.vertx.docgen.DocWriter) $stack3, 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,return $stack4,82,SinkNode, path: )), List(Node(<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>,$stack3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(withoutPrefix, 16),54,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack20 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix), 29) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>, $stack3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(withoutPrefix, 16), 54)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>,parsed = (int) $stack3,54,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack20 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix), 29) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>, parsed = (int) $stack3, 54)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>,$stack4 = (char) parsed,55,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack20 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix), 29) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>, $stack4 = (char) parsed, 55)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>,$stack5 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($stack4),55,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack20 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix), 29)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,$stack12 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix),36,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>,$stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5),291,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,csq := @parameter0: java.lang.CharSequence,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq),82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq), 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack4 = (io.vertx.docgen.DocWriter) $stack3,82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack4 = (io.vertx.docgen.DocWriter) $stack3, 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,return $stack4,82,SinkNode, path: )), List(Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,$stack12 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix),36,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>,$stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5),291,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,csq := @parameter0: java.lang.CharSequence,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq),82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq), 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack4 = (io.vertx.docgen.DocWriter) $stack3,82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack4 = (io.vertx.docgen.DocWriter) $stack3, 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,return $stack4,82,SinkNode, path: )), List(Node(<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>,$stack4 = (char) parsed,45,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack15 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>(input, withoutPrefix), 31) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>, $stack4 = (char) parsed, 45)) => Node(<java.lang.Character: java.lang.String toString(char)>,l0 := @parameter0: char,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack20 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix), 29) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>, $stack5 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($stack4), 55)) => Node(<java.lang.Character: java.lang.String toString(char)>,$stack1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(l0),4650,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack20 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>(input, withoutPrefix), 29) => (<io.vertx.docgen.EntityUtils: java.lang.String parseAsHexa(java.lang.String,java.lang.String)>, $stack5 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($stack4), 55)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>,$stack5 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($stack4),45,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291) => (<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>, $stack15 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>(input, withoutPrefix), 31)) => Node(<io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>,$stack15 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String parseAsDecimal(java.lang.String,java.lang.String)>(input, withoutPrefix),31,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>,$stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5),291,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, $stack6 = staticinvoke <io.vertx.docgen.EntityUtils: java.lang.String unescapeEntity(java.lang.String)>($stack5), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,csq := @parameter0: java.lang.CharSequence,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq),82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq), 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack4 = (io.vertx.docgen.DocWriter) $stack3,82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitEntity(com.sun.source.doctree.EntityTree,java.lang.Void)>, virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 291) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack4 = (io.vertx.docgen.DocWriter) $stack3, 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,return $stack4,82,SinkNode, path: ))]
Visited methods: 27
 Analysis results
----------------------------
 Number of conflicts: 15
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/vertx-docgen/3f7283c63d19b9677b7987b626713c40e5f95b57/original-without-dependencies/vertx-docgen-3.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,51400
Time to perform DFP Inter 0,37900
Depth limit: 5
CONFLICTS: DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>
Data flows from execution of line 285 to 285, defined in $stack6 = new java.lang.reflect.UndeclaredThrowableException and propagated in specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e)
Caused by line 285 flow: path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>, $stack4 = virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>('`'), 285) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e), 84)
Caused by line 285 flow: path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>, $stack4 = virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>('`'), 285) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e), 84)
DF interference in <io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>
Data flows from execution of line 285 to 285, defined in e = $stack5 and propagated in specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e)
Caused by line 285 flow: path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>, $stack4 = virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>('`'), 285) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, e = $stack5, 83)
Caused by line 285 flow: path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>, $stack4 = virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>('`'), 285) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e), 84)
[List(Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>,$stack4 = virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>("`"),285,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>, $stack4 = virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>('`'), 285)) => Node(<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>,$stack7 = virtualinvoke $stack4.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6),285,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>, $stack7 = virtualinvoke $stack4.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>($stack6), 285)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,this := @this: io.vertx.docgen.DocWriter,-1,SimpleNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>, $stack4 = virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>('`'), 285)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq),82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>, $stack4 = virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>('`'), 285) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq), 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack4 = (io.vertx.docgen.DocWriter) $stack3,82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>, $stack4 = virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>('`'), 285)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,return $stack4,82,SinkNode, path: )), List(Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq),82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>, $stack4 = virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>('`'), 285) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, $stack3 = specialinvoke this.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(csq), 82)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack4 = (io.vertx.docgen.DocWriter) $stack3,82,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>, $stack4 = virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>('`'), 285)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,return $stack4,82,SinkNode, path: )), List(Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,$stack6 = new java.lang.reflect.UndeclaredThrowableException,84,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>, $stack4 = virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>('`'), 285) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e), 84)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e),84,SinkNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>, $stack4 = virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>('`'), 285) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e), 84))), List(Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,e = $stack5,83,SourceNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>, $stack4 = virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>('`'), 285) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, e = $stack5, 83)) => Node(<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>,specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e),84,SinkNode, path: (<io.vertx.docgen.BaseProcessor$2: java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree,java.lang.Void)>, $stack4 = virtualinvoke $stack3.<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>('`'), 285) => (<io.vertx.docgen.DocWriter: io.vertx.docgen.DocWriter append(java.lang.CharSequence)>, specialinvoke $stack6.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(e), 84)))]
Visited methods: 2
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/vertx-docgen/3f7283c63d19b9677b7987b626713c40e5f95b57/original-without-dependencies/vertx-docgen-3.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,49500
Time to perform PDG 0,31800
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/vertx-docgen/3f7283c63d19b9677b7987b626713c40e5f95b57/original-without-dependencies/vertx-docgen-3.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,62100
Time to perform PDG 0,25900
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
