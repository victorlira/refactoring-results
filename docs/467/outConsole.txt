Running soot scenario datasift-java;org.datasift.streamconsumer.HttpThread;run();b4660b1bcfce1f3c83b456e1937640a88b9698b9
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/datasift-java/b4660b1bcfce1f3c83b456e1937640a88b9698b9/original-without-dependencies/datasift-java-1.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,52900
An error occurred in getInvokeExpr with args: specialinvoke $stack4.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
An error occurred in getInvokeExpr with args: specialinvoke $stack8.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
Time to perform Confluence 1 Inter 5,53500
Configure Soot Confluence 2 Inter 0,17300
An error occurred in getInvokeExpr with args: specialinvoke $stack4.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
An error occurred in getInvokeExpr with args: specialinvoke $stack8.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
Time to perform Confluence 2 Inter 2,83200
Visited methods: 194
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/datasift-java/b4660b1bcfce1f3c83b456e1937640a88b9698b9/original-without-dependencies/datasift-java-1.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,52200
Runtime: 0.013s
Time to perform OA Inter 0,57800
OA Inter Visited methods: 8
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/datasift-java/b4660b1bcfce1f3c83b456e1937640a88b9698b9/original-without-dependencies/datasift-java-1.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,49600
An error occurred in getInvokeExpr with args: specialinvoke $stack4.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
An error occurred in getInvokeExpr with args: specialinvoke $stack8.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
Time to perform DFP Inter 2,80000
Depth limit: 5
CONFLICTS: []
Visited methods: 97
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/datasift-java/b4660b1bcfce1f3c83b456e1937640a88b9698b9/original-without-dependencies/datasift-java-1.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,61900
Time to perform DFP Inter 0,98700
Depth limit: 5
CONFLICTS: []
Visited methods: 40
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/datasift-java/b4660b1bcfce1f3c83b456e1937640a88b9698b9/original-without-dependencies/datasift-java-1.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,41000
Time to perform PDG 0,62400
CONFLICTS: [List(Node(<org.datasift.streamconsumer.HttpThread: void run()>,get = $stack27,84,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, get = $stack27, 84)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,response = virtualinvoke client#13.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(get),86,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, response = virtualinvoke client#13.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(get), 86)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack56 = interfaceinvoke response.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>(),127,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack56 = interfaceinvoke response.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>(), 127)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack57 = interfaceinvoke $stack56.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>(),128,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack57 = interfaceinvoke $stack56.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>(), 128)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" "),124,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' '), 124)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack58 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack57),128,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack58 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack57), 128)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reason = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>(),128,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reason = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>(), 128)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack11 = virtualinvoke reason.<java.lang.String: int length()>(),137,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack11 = virtualinvoke reason.<java.lang.String: int length()>(), 137)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,if $stack11 != 0 goto $stack12 = virtualinvoke this.<org.datasift.streamconsumer.HttpThread: int getConsumerState()>(),137,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack21 = virtualinvoke this.<org.datasift.streamconsumer.HttpThread: int getConsumerState()>(),138,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack21 = virtualinvoke this.<org.datasift.streamconsumer.HttpThread: int getConsumerState()>(), 138)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,if $stack21 != 2 goto $stack12 = virtualinvoke this.<org.datasift.streamconsumer.HttpThread: int getConsumerState()>(),138,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack24 = this.<org.datasift.streamconsumer.HttpThread: boolean _auto_reconnect>,152,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack24 = this.<org.datasift.streamconsumer.HttpThread: boolean _auto_reconnect>, 152)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,if $stack24 == 0 goto $stack12 = virtualinvoke this.<org.datasift.streamconsumer.HttpThread: int getConsumerState()>(),152,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,if reconnect_delay != 0 goto (branch),143,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reconnect_delay = 1,144,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack81 = reconnect_delay * 1000, 72)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,if reconnect_delay != 0 goto $stack51 = this.<org.datasift.streamconsumer.HttpThread: boolean _auto_reconnect>,152,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack51 = this.<org.datasift.streamconsumer.HttpThread: boolean _auto_reconnect>,120,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack51 = this.<org.datasift.streamconsumer.HttpThread: boolean _auto_reconnect>, 120))), List(Node(<org.datasift.streamconsumer.HttpThread: void run()>,get = $stack27,84,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, get = $stack27, 84)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,response = virtualinvoke client#13.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(get),86,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, response = virtualinvoke client#13.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(get), 86)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack48 = interfaceinvoke response.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>(),87,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack48 = interfaceinvoke response.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>(), 87)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,statusCode = interfaceinvoke $stack48.<org.apache.http.StatusLine: int getStatusCode()>(),87,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, statusCode = interfaceinvoke $stack48.<org.apache.http.StatusLine: int getStatusCode()>(), 87)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,if statusCode != 200 goto (branch),88,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,virtualinvoke $stack69.<java.io.PrintStream: void println(java.lang.String)>("Connected"),89,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke $stack69.<java.io.PrintStream: void println(java.lang.String)>('Connected'), 89))), List(Node(<org.datasift.streamconsumer.HttpThread: void run()>,get = $stack27,84,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, get = $stack27, 84)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,response = virtualinvoke client#13.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(get),86,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, response = virtualinvoke client#13.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(get), 86)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack48 = interfaceinvoke response.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>(),87,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack48 = interfaceinvoke response.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>(), 87)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,statusCode = interfaceinvoke $stack48.<org.apache.http.StatusLine: int getStatusCode()>(),87,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, statusCode = interfaceinvoke $stack48.<org.apache.http.StatusLine: int getStatusCode()>(), 87)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,if statusCode != 404 goto $stack50 = this.<org.datasift.streamconsumer.HttpThread: boolean _auto_reconnect>,88,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack50 = this.<org.datasift.streamconsumer.HttpThread: boolean _auto_reconnect>,117,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack50 = this.<org.datasift.streamconsumer.HttpThread: boolean _auto_reconnect>, 117)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,if $stack50 == 0 goto $stack51 = this.<org.datasift.streamconsumer.HttpThread: boolean _auto_reconnect>,117,SinkNode, path: ))]
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/datasift-java/b4660b1bcfce1f3c83b456e1937640a88b9698b9/original-without-dependencies/datasift-java-1.0.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,63100
Time to perform PDG 0,64500
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
