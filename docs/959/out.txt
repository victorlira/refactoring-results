source(io.swagger.v3.parser.converter.SwaggerConverter, convertOauth2SecurityScheme, 303, oAuth2Scopes = -1, [at io.swagger.v3.parser.converter.SwaggerConverter.convertOauth2SecurityScheme(SwaggerConverter.java:303)]) => sink(io.swagger.v3.parser.converter.SwaggerConverter, convertOauth2SecurityScheme, 326, oAuth2Scopes = 0, [at io.swagger.v3.parser.converter.SwaggerConverter.convertOauth2SecurityScheme(SwaggerConverter.java:326)])

List(Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,scopes = flow,303,SourceNode, path: (<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>, scopes = flow, 303)) => Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,$stack32 = virtualinvoke scopes.<java.lang.String: boolean equals(java.lang.Object)>("password"),326,SinkNode, path: (<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>, $stack32 = virtualinvoke scopes.<java.lang.String: boolean equals(java.lang.Object)>('password'), 326)))

List(Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,flow = virtualinvoke oAuth2Definition.<io.swagger.models.auth.OAuth2Definition: java.lang.String getFlow()>(),300,SourceNode, path: (<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>, flow = virtualinvoke oAuth2Definition.<io.swagger.models.auth.OAuth2Definition: java.lang.String getFlow()>(), 300)) => Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,scopes = flow,303,SourceNode, path: (<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>, scopes = flow, 303)) => Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,$stack32 = virtualinvoke scopes.<java.lang.String: boolean equals(java.lang.Object)>("password"),326,SinkNode, path: (<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>, $stack32 = virtualinvoke scopes.<java.lang.String: boolean equals(java.lang.Object)>('password'), 326)))

List(Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,if flow == null goto $stack14 = new io.swagger.v3.oas.models.security.Scopes,302,SourceNode, path: ) => Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,scopes = flow,303,SourceNode, path: (<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>, scopes = flow, 303)) => Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,$stack34 = virtualinvoke scopes.<java.lang.String: boolean equals(java.lang.Object)>("accessCode"),326,SinkNode, path: (<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>, $stack34 = virtualinvoke scopes.<java.lang.String: boolean equals(java.lang.Object)>('accessCode'), 326)) => Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,if $stack34 == 0 goto (branch),326,SinkNode, path: ))

List(Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,lookupswitch($stack22) {     case -1142520463: goto $stack34 = virtualinvoke scopes.<java.lang.String: boolean equals(java.lang.Object)>("accessCode");     case -425423387: goto $stack33 = virtualinvoke scopes.<java.lang.String: boolean equals(java.lang.Object)>("implicit");     case 1216985755: goto $stack32 = virtualinvoke scopes.<java.lang.String: boolean equals(java.lang.Object)>("password");     case 1554253136: goto $stack23 = virtualinvoke scopes.<java.lang.String: boolean equals(java.lang.Object)>("application");     default: goto tableswitch(oAuth2Scopes) {     case 0: goto $stack30 = virtualinvoke oAuth2Definition.<io.swagger.models.auth.OAuth2Definition: java.lang.String getAuthorizationUrl()>();     case 1: goto $stack29 = virtualinvoke oAuth2Definition.<io.swagger.models.auth.OAuth2Definition: java.lang.String getTokenUrl()>();     case 2: goto $stack28 = virtualinvoke oAuth2Definition.<io.swagger.models.auth.OAuth2Definition: java.lang.String getTokenUrl()>();     case 3: goto $stack24 = virtualinvoke oAuth2Definition.<io.swagger.models.auth.OAuth2Definition: java.lang.String getAuthorizationUrl()>();     default: goto $stack14 = new io.swagger.v3.oas.models.security.Scopes; }; },303,SourceNode, path: ) => Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,$stack34 = virtualinvoke scopes.<java.lang.String: boolean equals(java.lang.Object)>("accessCode"),326,SinkNode, path: (<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>, $stack34 = virtualinvoke scopes.<java.lang.String: boolean equals(java.lang.Object)>('accessCode'), 326)) => Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,if $stack34 == 0 goto (branch),326,SinkNode, path: ))

List(Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,flow = virtualinvoke oAuth2Definition.<io.swagger.models.auth.OAuth2Definition: java.lang.String getFlow()>(),300,SourceNode, path: (<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>, flow = virtualinvoke oAuth2Definition.<io.swagger.models.auth.OAuth2Definition: java.lang.String getFlow()>(), 300)) => Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,scopes = flow,303,SourceNode, path: (<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>, scopes = flow, 303)) => Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,$stack34 = virtualinvoke scopes.<java.lang.String: boolean equals(java.lang.Object)>("accessCode"),326,SinkNode, path: (<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>, $stack34 = virtualinvoke scopes.<java.lang.String: boolean equals(java.lang.Object)>('accessCode'), 326)) => Node(<io.swagger.v3.parser.converter.SwaggerConverter: io.swagger.v3.oas.models.security.SecurityScheme convertOauth2SecurityScheme(io.swagger.models.auth.SecuritySchemeDefinition)>,if $stack34 == 0 goto (branch),326,SinkNode, path: ))

