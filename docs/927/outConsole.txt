Running soot scenario xml-avro;ly.stealth.xmlavro.SchemaBuilder;createTypeSchema(XSTypeDefinition, boolean, boolean);4459180f2931d596524621a3b388e756cc4a22e9
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xml-avro/4459180f2931d596524621a3b388e756cc4a22e9/original-without-dependencies/xml-avro-0.0.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 1,54700
Time to perform Confluence 1 Inter 2,78300
Configure Soot Confluence 2 Inter 1,00900
Time to perform Confluence 2 Inter 1,70100
Visited methods: 132
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating schema for "),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Creating schema for '), 150))
SINK=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating schema for "),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Creating schema for '), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150)), SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>,$stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8),337,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150) => (<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>, $stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8), 337))
SINK=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating schema for "),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Creating schema for '), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>,$stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8),337,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150) => (<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>, $stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8), 337)) => Node(<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>,$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s),337,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150) => (<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>, $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s), 337))]
Confluence interference in <ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>
Confluence flows from execution of lines 156 and 156 to line 150, defined in $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() and $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() and used in specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19)
Caused by line 156 flow: path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(), 156)
Caused by line 156 flow: path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(), 156)
Caused by line 150 flow: path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150)
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xml-avro/4459180f2931d596524621a3b388e756cc4a22e9/original-without-dependencies/xml-avro-0.0.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 1,48600
Runtime: 0.042s
Time to perform OA Inter 2,30600
OA Inter Visited methods: 116
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xml-avro/4459180f2931d596524621a3b388e756cc4a22e9/original-without-dependencies/xml-avro-0.0.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 1,82900
Time to perform DFP Inter 1,97500
Depth limit: 5
CONFLICTS: []
Visited methods: 66
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xml-avro/4459180f2931d596524621a3b388e756cc4a22e9/original-without-dependencies/xml-avro-0.0.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 1,24400
Time to perform DFP Inter 2,00300
Depth limit: 5
CONFLICTS: []
Visited methods: 65
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xml-avro/4459180f2931d596524621a3b388e756cc4a22e9/original-without-dependencies/xml-avro-0.0.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 1,54000
Time to perform PDG 1,46500
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xml-avro/4459180f2931d596524621a3b388e756cc4a22e9/original-without-dependencies/xml-avro-0.0.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 1,60500
Time to perform PDG 1,43700
CONFLICTS: [List(Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,if array != 0 goto schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createArray(org.apache.avro.Schema)>(schema),156,SourceNode, path: ) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,if $stack25 == 0 goto (branch),164,SimpleNode, path: ) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,if optional == 0 goto $stack23 = this.<ly.stealth.xmlavro.SchemaBuilder: int typeLevel>,158,SimpleNode, path: ) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack31 = newarray (org.apache.avro.Schema)[2],160,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack32 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($stack31), 160)))]
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
