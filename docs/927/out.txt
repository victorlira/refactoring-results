SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating schema for "),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Creating schema for '), 150))
SINK=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating schema for "),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Creating schema for '), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150))

SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>,$stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8),337,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150) => (<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>, $stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8), 337))
SINK=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating schema for "),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Creating schema for '), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>,$stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8),337,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150) => (<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>, $stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8), 337)) => Node(<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>,$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s),337,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150) => (<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>, $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s), 337))

source(ly.stealth.xmlavro.SchemaBuilder, createTypeSchema, 156, $stack38 = new java.lang.StringBuilder, [at ly.stealth.xmlavro.SchemaBuilder.createTypeSchema(SchemaBuilder.java:156)]) => sink(ly.stealth.xmlavro.SchemaBuilder, createTypeSchema, 156, $stack38 = new java.lang.StringBuilder, [at ly.stealth.xmlavro.SchemaBuilder.createTypeSchema(SchemaBuilder.java:156)])

List(Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,if array != 0 goto schema = staticinvoke <org.apache.avro.Schema: org.apache.avro.Schema createArray(org.apache.avro.Schema)>(schema),156,SourceNode, path: ) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,if $stack25 == 0 goto (branch),164,SimpleNode, path: ) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,if optional == 0 goto $stack23 = this.<ly.stealth.xmlavro.SchemaBuilder: int typeLevel>,158,SimpleNode, path: ) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack31 = newarray (org.apache.avro.Schema)[2],160,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack32 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($stack31), 160)))

