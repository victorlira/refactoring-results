[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating schema for "),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Creating schema for '), 150)) SINK=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating schema for "),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Creating schema for '), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>()",
				"location": {
					"file": "",
					"class": "ly.stealth.xmlavro.SchemaBuilder",
					"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
					"line": 156
				},
				"stackTrace": [{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
	"line": 156
},{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
	"line": 150
},{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
	"line": 150
},{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
	"line": 150
},{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
	"line": 150
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>()",
				"location": {
					"file": "",
					"class": "ly.stealth.xmlavro.SchemaBuilder",
					"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
					"line": 156
				},
				"stackTrace": [{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
	"line": 156
},{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
	"line": 150
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Creating schema for ')",
				"location": {
					"file": "",
					"class": "ly.stealth.xmlavro.SchemaBuilder",
					"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
					"line": 150
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>,$stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8),337,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150) => (<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>, $stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8), 337)) SINK=>BASE: Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating schema for "),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Creating schema for '), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack18 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>,$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(),150,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>(), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150)) => Node(<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>,$stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8),337,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150) => (<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>, $stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8), 337)) => Node(<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>,$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s),337,SinkNode, path: (<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>, specialinvoke this.<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>($stack19), 150) => (<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>, $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s), 337))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>()",
				"location": {
					"file": "",
					"class": "ly.stealth.xmlavro.SchemaBuilder",
					"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
					"line": 156
				},
				"stackTrace": [{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
	"line": 156
},{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
	"line": 150
},{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
	"line": 150
},{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
	"line": 150
},{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>",
	"line": -1
},{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>",
	"line": 337
},{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>",
	"line": 337
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack17 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>()",
				"location": {
					"file": "",
					"class": "ly.stealth.xmlavro.SchemaBuilder",
					"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
					"line": 156
				},
				"stackTrace": [{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
	"line": 156
},{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
	"line": 150
},{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: org.apache.avro.Schema createTypeSchema(org.apache.xerces.xs.XSTypeDefinition,boolean,boolean)>",
	"line": 150
},{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>",
	"line": -1
},{
	"class": "ly.stealth.xmlavro.SchemaBuilder",
	"method": "<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>",
	"line": 337
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8)",
				"location": {
					"file": "",
					"class": "ly.stealth.xmlavro.SchemaBuilder",
					"method": "<ly.stealth.xmlavro.SchemaBuilder: void debug(java.lang.String)>",
					"line": 337
				}
			}
		]
	}
}

]
